[{"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js":"1","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js":"2","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js":"3","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js":"4","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js":"5","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js":"6","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js":"8","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js":"9","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js":"10","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js":"11","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\PayPal.js":"12","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js":"13","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\styles.js":"14","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js":"15","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js":"16","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js":"17","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js":"18","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js":"19","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js":"20","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js":"21","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\settings\\Settings.js":"22","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js":"24","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js":"25","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js":"26","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js":"27","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js":"28","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js":"29","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js":"30","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js":"31","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js":"32","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js":"33","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"34","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js":"35","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\Notification.js":"36","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js":"37","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"38","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\styles.js":"39","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\styles.js":"40","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\LocationForm.js":"41"},{"size":896,"mtime":1631969542725,"results":"42","hashOfConfig":"43"},{"size":5083,"mtime":1631969542754,"results":"44","hashOfConfig":"43"},{"size":1787,"mtime":1631969542554,"results":"45","hashOfConfig":"43"},{"size":2053,"mtime":1631969542723,"results":"46","hashOfConfig":"43"},{"size":1444,"mtime":1631969542722,"results":"47","hashOfConfig":"43"},{"size":534,"mtime":1631969542755,"results":"48","hashOfConfig":"43"},{"size":1758,"mtime":1631969542558,"results":"49","hashOfConfig":"43"},{"size":1626,"mtime":1631969542741,"results":"50","hashOfConfig":"43"},{"size":8837,"mtime":1631969542744,"results":"51","hashOfConfig":"43"},{"size":3127,"mtime":1631969542755,"results":"52","hashOfConfig":"43"},{"size":7291,"mtime":1632002183816,"results":"53","hashOfConfig":"43"},{"size":1962,"mtime":1631992257136,"results":"54","hashOfConfig":"43"},{"size":3971,"mtime":1631969542720,"results":"55","hashOfConfig":"43"},{"size":6675,"mtime":1632002310015,"results":"56","hashOfConfig":"43"},{"size":3281,"mtime":1631969542746,"results":"57","hashOfConfig":"43"},{"size":1395,"mtime":1631969542743,"results":"58","hashOfConfig":"43"},{"size":447,"mtime":1631969542577,"results":"59","hashOfConfig":"43"},{"size":2581,"mtime":1631969542716,"results":"60","hashOfConfig":"43"},{"size":801,"mtime":1631969542731,"results":"61","hashOfConfig":"43"},{"size":710,"mtime":1631969542559,"results":"62","hashOfConfig":"43"},{"size":736,"mtime":1631969542728,"results":"63","hashOfConfig":"43"},{"size":1818,"mtime":1631969542748,"results":"64","hashOfConfig":"43"},{"size":3467,"mtime":1631969542579,"results":"65","hashOfConfig":"43"},{"size":10236,"mtime":1631969542554,"results":"66","hashOfConfig":"43"},{"size":1015,"mtime":1631969542719,"results":"67","hashOfConfig":"43"},{"size":482,"mtime":1631969542578,"results":"68","hashOfConfig":"43"},{"size":3429,"mtime":1631969542740,"results":"69","hashOfConfig":"43"},{"size":6296,"mtime":1631994000234,"results":"70","hashOfConfig":"43"},{"size":5277,"mtime":1631969542739,"results":"71","hashOfConfig":"43"},{"size":6194,"mtime":1631981807940,"results":"72","hashOfConfig":"43"},{"size":27503,"mtime":1631987017467,"results":"73","hashOfConfig":"43"},{"size":1363,"mtime":1631969542710,"results":"74","hashOfConfig":"43"},{"size":4043,"mtime":1631969542557,"results":"75","hashOfConfig":"43"},{"size":4589,"mtime":1631969542582,"results":"76","hashOfConfig":"43"},{"size":902,"mtime":1631969542580,"results":"77","hashOfConfig":"43"},{"size":3413,"mtime":1631969542559,"results":"78","hashOfConfig":"43"},{"size":620,"mtime":1631969542712,"results":"79","hashOfConfig":"43"},{"size":1474,"mtime":1631969542582,"results":"80","hashOfConfig":"43"},{"size":291,"mtime":1631969542714,"results":"81","hashOfConfig":"43"},{"size":1040,"mtime":1631969542560,"results":"82","hashOfConfig":"43"},{"size":4058,"mtime":1632002329290,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ifno9o",{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"141"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js",["169","170","171","172"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js",["173","174","175"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\PayPal.js",["176","177"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js",["178","179","180","181","182"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js",["183","184","185"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\settings\\Settings.js",["186","187"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js",["188","189","190","191","192","193","194"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js",["195","196"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js",["197"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport PayPal from \"./PayPal\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Widget from \"../../../../components/Widget\";\r\nimport useStyles from \"../../styles\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\nimport { IoMdCloudDownload } from \"react-icons/io\";\r\nimport { GrPaypal } from \"react-icons/gr\";\r\nconst states = {\r\n  approved: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\nexport default function TableComponent({ data }) {\r\n  const classes = useStyles();\r\n  const [checkout, setCheckout] = useState(false);\r\n  const [result, setResult] = useState({ StatusCode: 200, AdvertData: [], TotalCost: 0 });\r\n\r\n  var keys = Object.keys(data.statements[0]).map(i => i.toUpperCase());\r\n  keys.shift(); // delete \"id\" key\r\n  /**to filter the data */\r\n  var [TimePeriod, setTimePeriod] = useState(\"Month\");\r\n  const handleChange = (event) => {\r\n    setTimePeriod(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(JSON.stringify({ BID: \"ghjgj\", TimePeriod: TimePeriod }));\r\n    // fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", { BID: \"b1\" })\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getstatement\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"ghjgj\", TimePeriod: TimePeriod })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setResult(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [TimePeriod])\r\n\r\n  /** reference to allow an icon to click the csv button */\r\n  const csvRef = useRef();\r\n\r\n  /** the header for the csv to be exported */\r\n  const headers = [\r\n    { label: \"Name\", key: \"name\" },\r\n    { label: \"Date\", key: \"date\" },\r\n    { label: \"Expiring\", key: \"expiring\" },\r\n    { label: \"Location\", key: \"location\" },\r\n    { label: \"Audience\", key: \"audience\" },\r\n    { label: \"Status\", key: \"status\" },\r\n    { label: \"Cost\", key: \"cost\" },\r\n  ];\r\n  /**The variables need to export the csv for payments */\r\n  const csvReport = {\r\n    data: data.statements,\r\n    headers: headers,\r\n    filename: 'StatementOfAccount.csv'\r\n  };\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Widget\r\n        disableWidgetMenu\r\n        noBodyPadding\r\n        bodyClass={classes.tableWidget}\r\n      >\r\n        <div style={{ float: \"right\" }}>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={TimePeriod}\r\n            onChange={handleChange}\r\n            label=\"chartState\"\r\n            style={{ float: \"left\", width: 150, marginRight: 25 }}\r\n          >\r\n            <MenuItem value=\"Day\">Past Day</MenuItem>\r\n            <MenuItem value=\"Week\">Past Week</MenuItem>\r\n            <MenuItem value=\"Month\">Past Month</MenuItem>\r\n            <MenuItem value=\"Year\">Past Year</MenuItem>\r\n            <MenuItem value=\"All\">All</MenuItem>\r\n          </Select>\r\n          <CSVLink {...csvReport} style={{ display: 'none' }} ref={csvRef}>Export to CSV</CSVLink>\r\n          <IoMdCloudDownload style={{ float: \"left\", marginRight: 25 }} size={32} onClick={() => { csvRef.current.link.click() }} />\r\n\r\n        </div>\r\n        <Table className=\"mb-0\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {keys.map(key => (\r\n                <TableCell key={key}>{key}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {/* {data.statements.map(({ id, name, date, expiring, location, audience, status, cost }) => (\r\n              <TableRow key={id}>\r\n                <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\r\n                <TableCell>{date}</TableCell>\r\n                <TableCell>{expiring}</TableCell>\r\n                <TableCell>{location}</TableCell>\r\n                <TableCell>{audience}</TableCell>\r\n                <TableCell>\r\n                  <Chip label={status} classes={{ root: classes[states[status.toLowerCase()]] }} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: \"right\" }}>{cost}</TableCell>\r\n\r\n              </TableRow>\r\n            ))} */}\r\n            {result.AdvertData.map(({ BPID, FoodName, DrinkName, DateCreated, DaysRemaining, Locations, audience, Status, Price }) => (\r\n              <TableRow key={BPID}>\r\n                <TableCell className=\"pl-3 fw-normal\">{FoodName} and {DrinkName}</TableCell>\r\n                <TableCell>{DateCreated}</TableCell>\r\n                <TableCell>{DaysRemaining}</TableCell>\r\n                <TableCell>{Locations.map((item) => (item + \", \"))}</TableCell>\r\n                <TableCell>{audience}</TableCell>\r\n                <TableCell>\r\n                  <Chip label={Status} classes={{ root: classes[states[Status.toLowerCase()]] }} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: \"right\" }}>{Price}</TableCell>\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className={classes.totalBox}>\r\n          <div className={classes.floatLeftLeft}>\r\n            <Typography size=\"xl\" weight=\"bold\">\r\n              Balance Due\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.floatLeft}>\r\n            <Typography size=\"xl\" weight=\"bold\">\r\n              R{result.TotalCost}\r\n            </Typography>\r\n          </div>\r\n          <div style={{ clear: \"both\" }}></div>\r\n          {checkout ? (<PayPal amount={data.total} />) : (\r\n            <Button className={classes.payNowButton} variant=\"contained\" onClick={() => { setCheckout(true) }}><GrPaypal style={{ marginRight: 10 }} size={20} color=\"white\" />Pay now</Button>\r\n          )}\r\n        </div>\r\n      </Widget>\r\n    </Grid>\r\n\r\n  );\r\n}\r\n",["198","199"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js",["200","201","202","203","204","205","206","207","208","209","210","211"],"import React, { useState, useRef } from 'react';\r\nimport {\r\n    Formik, Form\r\n} from 'formik';\r\n// classNames\r\nimport useStyles from \"./styles\";\r\nimport * as Yup from 'yup';\r\n// components\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField'\r\nfunction CreateAdForm(...props) {\r\n    /**The form variables */\r\n    const defaultImage = \"http://beepeers.com/assets/images/commerces/default-image.jpg\";\r\n    const [foodImage, setFoodImage] = useState(defaultImage);\r\n    const [drinkImage, setDrinkImage] = useState(defaultImage);\r\n    var classes = useStyles();\r\n\r\n    /**@var fileRef to create a reference to the file input to be able to clear it */\r\n    const foodFileRef = useRef();\r\n    const drinkFileRef = useRef();\r\n\r\n    /**@var tagSelector used to clear the multiple selectors on clear  */\r\n    const foodTagSelector = useRef();\r\n    const drinkTagSelector = useRef();\r\n    const mealTagSelector = useRef();\r\n    const locationsTagSelector = useRef();\r\n    const timePeriodTagSelector = useRef();\r\n\r\n    const foodImageError = false;\r\n    const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\n    const mockResponse = {\r\n        statusCode: 200,\r\n        locations: [\"Durban North\", \"Pretoria East\", \"Westville\"]\r\n    }\r\n\r\n    const handleClear = (values) => {\r\n        setFoodImage(defaultImage);\r\n        setDrinkImage(defaultImage);\r\n        foodFileRef.current.value = \"\";\r\n        drinkFileRef.current.value = \"\";\r\n\r\n        /**in a try catch because if you try clearing a list thats already empty it should do nothing */\r\n        try {\r\n            foodTagSelector.current.resetSelectedValues();\r\n            drinkTagSelector.current.resetSelectedValues();\r\n            mealTagSelector.current.resetSelectedValues();\r\n            locationsTagSelector.current.resetSelectedValues();\r\n            timePeriodTagSelector.current.resetSelectedValues();\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    /**Handles the image preview */\r\n    const FoodImageHandler = (e, values) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setFoodImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n        else {\r\n            alert(e.target.files[0].type + \" is not a supported file format.\");\r\n            setFoodImage(defaultImage);\r\n        }\r\n    }\r\n    const DrinkImageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setDrinkImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n        else {\r\n            alert(e.target.files[0].type + \" is not a supported file format.\");\r\n            setDrinkImage(defaultImage);\r\n        }\r\n    }\r\n    /** Submits the form to the database */\r\n    const handleSubmit = (vals) => {\r\n\r\n        // console.log(\"submitted handle \" + JSON.stringify(vals))\r\n        var request = {\r\n            FoodName: vals.FoodName,\r\n            DrinkName: vals.DrinkName,\r\n            BID: \"b4\",\r\n            FoodTags: vals.FoodTags,\r\n            DrinkTags: vals.DrinkTags,\r\n            PairingTags: vals.PairingTags,\r\n            Description: vals.PairingDescription,\r\n            Locations: vals.Locations,\r\n            TimePeriod: vals.TimePeriod,\r\n            FoodImage: foodImage.split(',')[1],\r\n            DrinkImage: drinkImage.split(',')[1],\r\n        }\r\n        // console.log(\"request to submit \" + JSON.stringify(request))\r\n        fetch('https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/createbusinesspairing', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(request)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n            .then(alert(\"Advert for \" + vals.FoodName + \" and \" + vals.DrinkName + \" was created successfully.\"))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addItemContainer}>\r\n            <Formik\r\n                enableReinitialize={true}\r\n                initialValues={{\r\n                    FoodName: \"\",\r\n                    FoodTags: \"\",\r\n                    DrinkName: \"\",\r\n                    DrinkTags: \"\",\r\n                    PairingDescription: \"\",\r\n                    PairingTags: \"\",\r\n                    Locations: \"\",\r\n                    TimePeriod: \"\",\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    FoodName: Yup.string().required('*'),\r\n                    DrinkName: Yup.string().required('*'),\r\n                    PairingDescription: Yup.string().required('*'),\r\n                })}\r\n                // onSubmit={(values) => handleSubmit(values)}\r\n                onSubmit={(values, { resetForm }) => {\r\n                    if (foodImage == defaultImage || drinkImage == defaultImage) {\r\n                        if (foodImage == defaultImage)\r\n                            alert(\"You havent uploaded an image for food.\");\r\n                        else\r\n                            alert(\"You havent uploaded an image for drink.\");\r\n                    }\r\n                    else {                    /**reset then handle submit */\r\n                        resetForm();\r\n                        handleClear();\r\n                        handleSubmit(values);\r\n                    }\r\n                }}\r\n            >\r\n                {/** The moderate pairings form to submit */}\r\n                {({ errors, touched, values, handleChange, resetForm }) => (\r\n                    <Form>\r\n                        <div className={classes.formElementsImageContainer}>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.FoodLabelButton}>Food</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Food\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={foodImage} className={classes.ImageContainer} /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Food\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={foodFileRef} onChange={(values) => FoodImageHandler(values)} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (foodFileRef.current.click())} className={classes.uploadFoodButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodName\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Name</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.FoodName && touched.FoodName) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    {/* <TextField id=\"outlined-basic\" error={errors.FoodName} variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} /> */}\r\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} />\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Tags</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.FoodTags == [] && touched.FoodTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={foodTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%',\r\n                                                },\r\n\r\n                                                multiselectContainer: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20,\r\n                                                },\r\n                                                inputField: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20,\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#FF6347',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            id=\"FoodTags\" name=\"FoodTags\" value={values.FoodTags}\r\n                                            options={['Spicy', 'Savoury', 'Salty', 'Sweet', 'Sour', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.DrinkLabelButton}>Drink</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Drink\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={drinkImage} className={classes.ImageContainer} /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Drink\" name=\"ImageclassNameDrink\" accept=\"image/*\" ref={drinkFileRef} onChange={DrinkImageHandler} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (drinkFileRef.current.click())} className={classes.uploadDrinkButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"Drink Name\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Name</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.DrinkName && touched.DrinkName) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"DrinkName\" className={classes.individualTextField} onChange={handleChange} value={values.DrinkName} />\r\n\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"DrinkTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Tags</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.DrinkTags == [] && touched.DrinkTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={drinkTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    'width': '100%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#1FBFBA',\r\n                                                    'fontWeight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            id=\"DrinkTags\" name=\"DrinkTags\" onChange={handleChange} value={values.DrinkTags}\r\n                                            options={['Alcoholic', 'Non-Alcoholic', 'Fizzy', 'Sweet', 'Sour', 'Bitter', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={classes.PreviewContainerPairing}>\r\n                            <div className={classes.MealLabelButton}>Pairing</div>\r\n\r\n                            <div className={classes.MealContainer}>\r\n                                <div className={classes.formElementsPairing}>\r\n                                    <label htmlFor=\"PairingDescription\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Description</p> </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.PairingDescription && touched.PairingDescription) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" multiline={true} rows={4} variant=\"outlined\" name=\"PairingDescription\" className={classes.individualTextField} onChange={handleChange} value={values.PairingDescription} />\r\n                                </div>\r\n                                <br />\r\n                                <div className={classes.formElementsPairingTag}>\r\n                                    <label htmlFor=\"PairingTags\" className={classes.tagName}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Tag</p> </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.PairingTags == [] && touched.PairingTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={1}\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={mealTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    // 'border': '1px solid grey',\r\n                                                    'width': '100%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#C41ED4',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            id=\"PairingTags\" name=\"PairingTags\" onChange={handleChange} value={values.PairingTags}\r\n                                            options={['Breakfast', 'Lunch', 'Supper', 'Snack', 'Vegetarian', 'Dairy-Free', 'Nut-Free']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.clear}></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.PreviewContainerPairing}>\r\n                            <div className={classes.configurationLabel}>Configuration</div>\r\n\r\n                            <div className={classes.MealContainer}>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <div className={classes.configLabel}>\r\n\r\n                                        <label htmlFor=\"Locations\" className={classes.tagName}>\r\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Locations</p> </div>\r\n                                            <div className={classes.floatLeft}>\r\n                                                {(values.Locations == [] && touched.Locations) ? (\r\n                                                    <div className={classes.errorStar}>*</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={locationsTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '90%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    // 'border': '1px solid grey',\r\n                                                    'width': '90%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#4CD41E',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.Locations = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.Locations = selectedList)}\r\n                                            id=\"Locations\" name=\"Locations\" onChange={handleChange} value={values.Locations}\r\n                                            options={mockResponse.locations}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <div className={classes.configLabel}>\r\n                                        <label htmlFor=\"TimePeriod\" className={classes.tagName}>\r\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Time Period</p> </div>\r\n                                            <div className={classes.floatLeft}>\r\n                                                {(values.TimePeriod == [] && touched.TimePeriod) ? (\r\n                                                    <div className={classes.errorStar}>*</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={1}\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={timePeriodTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '90%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    'width': '90%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#4CD41E',\r\n                                                    'fontWeight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.TimePeriod = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.TimePeriod = selectedList)}\r\n                                            id=\"TimePeriod\" name=\"TimePeriod\" onChange={handleChange} value={values.TimePeriod}\r\n                                            options={['One Day', 'One Week', 'One Month', 'Three Months', 'Six Months', 'One Year']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.clear}></div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.ButtonContainer}>\r\n                            <Button onClick={(values) => (resetForm(), handleClear())} className={classes.clearButton} variant=\"contained\">Clear</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.addButton} onClick={() => console.log(\"clicked submit\")}>\r\n                                Create Advert\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CreateAdForm;\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\LocationForm.js",["212","213","214"],{"ruleId":"215","severity":1,"message":"216","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":11},{"ruleId":"215","severity":1,"message":"219","line":9,"column":14,"nodeType":"217","messageId":"218","endLine":9,"endColumn":24},{"ruleId":"215","severity":1,"message":"220","line":9,"column":26,"nodeType":"217","messageId":"218","endLine":9,"endColumn":30},{"ruleId":"215","severity":1,"message":"221","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":12},{"ruleId":"215","severity":1,"message":"222","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":17},{"ruleId":"215","severity":1,"message":"223","line":88,"column":9,"nodeType":"217","messageId":"218","endLine":88,"endColumn":29},{"ruleId":"224","severity":1,"message":"225","line":130,"column":51,"nodeType":"226","endLine":130,"endColumn":104},{"ruleId":"215","severity":1,"message":"227","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":46,"column":8,"nodeType":"230","endLine":46,"endColumn":10,"suggestions":"231"},{"ruleId":"215","severity":1,"message":"227","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"232","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":14},{"ruleId":"215","severity":1,"message":"233","line":12,"column":10,"nodeType":"217","messageId":"218","endLine":12,"endColumn":20},{"ruleId":"215","severity":1,"message":"234","line":16,"column":7,"nodeType":"217","messageId":"218","endLine":16,"endColumn":14},{"ruleId":"215","severity":1,"message":"235","line":17,"column":7,"nodeType":"217","messageId":"218","endLine":17,"endColumn":12},{"ruleId":"215","severity":1,"message":"232","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"233","line":10,"column":10,"nodeType":"217","messageId":"218","endLine":10,"endColumn":20},{"ruleId":"215","severity":1,"message":"234","line":13,"column":7,"nodeType":"217","messageId":"218","endLine":13,"endColumn":14},{"ruleId":"215","severity":1,"message":"236","line":12,"column":9,"nodeType":"217","messageId":"218","endLine":12,"endColumn":21},{"ruleId":"228","severity":1,"message":"237","line":26,"column":6,"nodeType":"230","endLine":26,"endColumn":8,"suggestions":"238"},{"ruleId":"215","severity":1,"message":"239","line":5,"column":24,"nodeType":"217","messageId":"218","endLine":5,"endColumn":41},{"ruleId":"215","severity":1,"message":"240","line":6,"column":17,"nodeType":"217","messageId":"218","endLine":6,"endColumn":31},{"ruleId":"215","severity":1,"message":"241","line":7,"column":17,"nodeType":"217","messageId":"218","endLine":7,"endColumn":31},{"ruleId":"215","severity":1,"message":"242","line":9,"column":21,"nodeType":"217","messageId":"218","endLine":9,"endColumn":32},{"ruleId":"215","severity":1,"message":"243","line":10,"column":19,"nodeType":"217","messageId":"218","endLine":10,"endColumn":30},{"ruleId":"215","severity":1,"message":"244","line":11,"column":18,"nodeType":"217","messageId":"218","endLine":11,"endColumn":25},{"ruleId":"215","severity":1,"message":"245","line":25,"column":8,"nodeType":"217","messageId":"218","endLine":25,"endColumn":11},{"ruleId":"215","severity":1,"message":"220","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":7},{"ruleId":"215","severity":1,"message":"246","line":27,"column":29,"nodeType":"217","messageId":"218","endLine":27,"endColumn":35},{"ruleId":"215","severity":1,"message":"247","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":16},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"215","severity":1,"message":"252","line":30,"column":11,"nodeType":"217","messageId":"218","endLine":30,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":137,"column":35,"nodeType":"255","messageId":"256","endLine":137,"endColumn":37},{"ruleId":"253","severity":1,"message":"254","line":137,"column":65,"nodeType":"255","messageId":"256","endLine":137,"endColumn":67},{"ruleId":"253","severity":1,"message":"254","line":138,"column":39,"nodeType":"255","messageId":"256","endLine":138,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":157,"column":71,"nodeType":"226","endLine":157,"endColumn":129},{"ruleId":"253","severity":1,"message":"254","line":181,"column":63,"nodeType":"255","messageId":"256","endLine":181,"endColumn":65},{"ruleId":"224","severity":1,"message":"225","line":225,"column":71,"nodeType":"226","endLine":225,"endColumn":130},{"ruleId":"253","severity":1,"message":"254","line":250,"column":64,"nodeType":"255","messageId":"256","endLine":250,"endColumn":66},{"ruleId":"253","severity":1,"message":"254","line":307,"column":66,"nodeType":"255","messageId":"256","endLine":307,"endColumn":68},{"ruleId":"253","severity":1,"message":"254","line":357,"column":68,"nodeType":"255","messageId":"256","endLine":357,"endColumn":70},{"ruleId":"253","severity":1,"message":"254","line":397,"column":69,"nodeType":"255","messageId":"256","endLine":397,"endColumn":71},{"ruleId":"257","severity":1,"message":"258","line":437,"column":70,"nodeType":"259","messageId":"260","endLine":437,"endColumn":71},{"ruleId":"215","severity":1,"message":"227","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"261","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"262","line":1,"column":38,"nodeType":"217","messageId":"218","endLine":1,"endColumn":44},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'TextField' is defined but never used.","'handleLocationUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'amount'. Either include it or remove the dependency array.","ArrayExpression",["263"],"'Widget' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","'isSubscribed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'signal'. Either include it or remove the dependency array.",["264"],"'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Button' is defined but never used.","'OutlinedInput' is defined but never used.","no-native-reassign",["265"],"no-negated-in-lhs",["266"],"'foodImageError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'useRef' is defined but never used.",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [amount]",{"range":"271","text":"272"},"Update the dependencies array to be: [signal]",{"range":"273","text":"274"},[1861,1863],"[amount]",[772,774],"[signal]"]