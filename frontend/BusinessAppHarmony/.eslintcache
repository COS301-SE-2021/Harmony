[{"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/index.js":"1","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/serviceWorker.js":"2","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/App.js":"3","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/context/LayoutContext.js":"4","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/context/UserContext.js":"5","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/themes/index.js":"6","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/error/Error.js":"7","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/login/Login.js":"8","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Layout/Layout.js":"9","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/usertrends/Usertrends.js":"10","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/usertrends/LocationForm.js":"11","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/usertrends/styles.js":"12","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/components/Table/PayPal.js":"13","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Widget/Widget.js":"14","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Wrappers/Wrappers.js":"15","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/PageTitle/PageTitle.js":"16","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/PageTitle/styles.js":"17","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Widget/styles.js":"18","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Layout/styles.js":"19","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/Dashboard.js":"20","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/login/styles.js":"21","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/error/styles.js":"22","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/themes/default.js":"23","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/createads/Createads.js":"24","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/Sidebar.js":"25","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Header/Header.js":"26","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/mock.js":"27","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/styles.js":"28","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/components/Table/Table.js":"29","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Header/styles.js":"30","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/styles.js":"31","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/components/Dot.js":"32","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"33","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/createads/CreateAdForm.js":"34","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/createads/styles.js":"35","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/UserAvatar/UserAvatar.js":"36","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Notification/Notification.js":"37","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/components/SidebarLink/styles.js":"38","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/UserAvatar/styles.js":"39","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Notification/styles.js":"40","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/aws-exports.js":"41","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/ResetPass.js":"42","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/SignUp.js":"43","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/Form.js":"44","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/styles.js":"45","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/styles.js":"46","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/Form.js":"47","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/AccountForm.js":"48","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/CodeForm.js":"49","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/AccountForm.js":"50","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/VeriCodeForm.js":"51","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/NewPassForm.js":"52"},{"size":869,"mtime":1632058005546,"results":"53","hashOfConfig":"54"},{"size":4948,"mtime":1632058005556,"results":"55","hashOfConfig":"54"},{"size":2543,"mtime":1632064458028,"results":"56","hashOfConfig":"54"},{"size":1392,"mtime":1632058005545,"results":"57","hashOfConfig":"54"},{"size":2452,"mtime":1632064491149,"results":"58","hashOfConfig":"54"},{"size":502,"mtime":1632058005557,"results":"59","hashOfConfig":"54"},{"size":1571,"mtime":1632058005552,"results":"60","hashOfConfig":"54"},{"size":5263,"mtime":1632070218581,"results":"61","hashOfConfig":"54"},{"size":1575,"mtime":1632058005524,"results":"62","hashOfConfig":"54"},{"size":7099,"mtime":1632058005555,"results":"63","hashOfConfig":"54"},{"size":5014,"mtime":1632058005555,"results":"64","hashOfConfig":"54"},{"size":6396,"mtime":1632058005556,"results":"65","hashOfConfig":"54"},{"size":1909,"mtime":1632058005551,"results":"66","hashOfConfig":"54"},{"size":2485,"mtime":1632058005544,"results":"67","hashOfConfig":"54"},{"size":3790,"mtime":1632058005545,"results":"68","hashOfConfig":"54"},{"size":427,"mtime":1632058005526,"results":"69","hashOfConfig":"54"},{"size":462,"mtime":1632058005527,"results":"70","hashOfConfig":"54"},{"size":969,"mtime":1632058005544,"results":"71","hashOfConfig":"54"},{"size":680,"mtime":1632058005524,"results":"72","hashOfConfig":"54"},{"size":752,"mtime":1632070613840,"results":"73","hashOfConfig":"54"},{"size":3133,"mtime":1632058005554,"results":"74","hashOfConfig":"54"},{"size":1334,"mtime":1632058005553,"results":"75","hashOfConfig":"54"},{"size":2987,"mtime":1632063839023,"results":"76","hashOfConfig":"54"},{"size":700,"mtime":1632070836060,"results":"77","hashOfConfig":"54"},{"size":3326,"mtime":1632070587834,"results":"78","hashOfConfig":"54"},{"size":3814,"mtime":1632063933324,"results":"79","hashOfConfig":"54"},{"size":5057,"mtime":1632058005552,"results":"80","hashOfConfig":"54"},{"size":3276,"mtime":1632058005552,"results":"81","hashOfConfig":"54"},{"size":5481,"mtime":1632058005552,"results":"82","hashOfConfig":"54"},{"size":3868,"mtime":1632058005523,"results":"83","hashOfConfig":"54"},{"size":1304,"mtime":1632058005543,"results":"84","hashOfConfig":"54"},{"size":862,"mtime":1632058005541,"results":"85","hashOfConfig":"54"},{"size":4411,"mtime":1632058005542,"results":"86","hashOfConfig":"54"},{"size":27890,"mtime":1632059238124,"results":"87","hashOfConfig":"54"},{"size":5941,"mtime":1632058005548,"results":"88","hashOfConfig":"54"},{"size":593,"mtime":1632058005543,"results":"89","hashOfConfig":"54"},{"size":3296,"mtime":1632058005525,"results":"90","hashOfConfig":"54"},{"size":1412,"mtime":1632058005542,"results":"91","hashOfConfig":"54"},{"size":276,"mtime":1632058005543,"results":"92","hashOfConfig":"54"},{"size":993,"mtime":1632058005525,"results":"93","hashOfConfig":"54"},{"size":821,"mtime":1632062618092,"results":"94","hashOfConfig":"54"},{"size":841,"mtime":1632064983680,"results":"95","hashOfConfig":"54"},{"size":855,"mtime":1632064983688,"results":"96","hashOfConfig":"54"},{"size":4301,"mtime":1632070345236,"results":"97","hashOfConfig":"54"},{"size":3133,"mtime":1632057869063,"results":"98","hashOfConfig":"54"},{"size":3133,"mtime":1632057869060,"results":"99","hashOfConfig":"54"},{"size":4581,"mtime":1632069375800,"results":"100","hashOfConfig":"54"},{"size":777,"mtime":1632057869055,"results":"101","hashOfConfig":"54"},{"size":795,"mtime":1632057869056,"results":"102","hashOfConfig":"54"},{"size":1325,"mtime":1632065677364,"results":"103","hashOfConfig":"54"},{"size":803,"mtime":1632057869062,"results":"104","hashOfConfig":"54"},{"size":1093,"mtime":1632064801608,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"143nd89",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/index.js",[],["218","219"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/serviceWorker.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/App.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/context/LayoutContext.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/context/UserContext.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/themes/index.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/error/Error.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/login/Login.js",["220","221","222"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Layout/Layout.js",["223","224","225","226"],"import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport {Box, IconButton, Link} from '@material-ui/core'\nimport Icon from '@mdi/react'\n\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport HomePage from \"../../pages/usertrends\";\nimport Statements from \"../../pages/dashboard\";\nimport CreateAds from \"../../pages/createads\";\n\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n        <>\n          <Header history={props.history} />\n          <Sidebar />\n          <div\n            className={classnames(classes.content, {\n              [classes.contentShift]: layoutState.isSidebarOpened,\n            })}\n          >\n            <div className={classes.fakeToolbar} />\n            <Switch>\n              <Route path=\"/app/usertrends\" component={HomePage} />\n              <Route path=\"/app/dashboard\" component={Statements} />\n              <Route path=\"/app/createads\" component={CreateAds} />\n\n            </Switch>\n            <Box\n              mt={5}\n              width={\"100%\"}\n              display={\"flex\"}\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n            >\n            </Box>\n          </div>\n        </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/usertrends/Usertrends.js",["227","228","229"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell, } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport TextField from '@material-ui/core/TextField'\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Button from '@material-ui/core/Button';\nimport { Typography } from \"../../components/Wrappers\";\nimport Geocode from \"react-geocode\";\nimport PayPal from '../dashboard/components/Table/PayPal';\nimport { GrPaypal } from \"react-icons/gr\";\nimport LocationForm from './LocationForm';\n\nexport default function Tables() {\n  const classes = useStyles();\n  const [logo, setLogo] = useState(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\n  const [checkout, setCheckout] = useState(false);\n  const [data, setData] = useState({ OutstandingAmount: 0, Locations: [{ name: \"\" }, { address: \"\" }] });\n\n  useEffect(() => {\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({ BID: \"b4\" })\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setData(result.UserData);\n          setLogo(result.UserData.Logo)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n        }\n      )\n  }, [])\n\n  /**@var fileRef to create a reference to the file input to be able to clear it */\n  const logoFileRef = useRef();\n\n  const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\n\n  /**Handles the image preview */\n  const logoImageHandler = (e) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setLogo(reader.result)\n        var base64result = reader.result.split(',')[1];\n        console.log(base64result);\n        // fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", { BID: \"b1\", Logo: btoa(reader.result) })\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: \"POST\",\n          body: JSON.stringify({ BID: \"b4\", Logo: base64result })\n        })\n          .then(res => res.json())\n          .then(\n            (result) => {\n              console.log(result);\n              setData(result.Data);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            }\n          )\n      }\n    }\n    if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\n    else {\n      alert(e.target.files[0].type + \" is not a supported file format.\");\n      setLogo(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\n    }\n  }\n\n  const handleLocationUpdate = (values) => {\n    console.log(values.LocationAddress);\n    /**set the api key to use geocode */\n    Geocode.setApiKey(\"AIzaSyBWoLXoRAgQgoJkZb0n5fOy5-T_C4fwhkI\");\n    Geocode.setLanguage(\"en\");\n    Geocode.setRegion(\"za\");\n    Geocode.setLocationType(\"ROOFTOP\");\n    // Get latitude & longitude from address.\n    Geocode.fromAddress(values.LocationAddress).then(\n      (response) => {\n        const { lat, lng } = response.results[0].geometry.location;\n        console.log(lat, lng);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  const mockResponse = {\n    statusCode: 200,\n    logo: \"base 64 format\",\n    Locations: [{ name: \"Durban North\", address: \"34 Ilala Drive\" },\n    { name: \"Pretoria East\", address: \"107 Garsfontein Road\" },\n    { name: \"Westiville\", address: \"37 Jack Martins Drive\" }\n    ],\n    outstandingBalance: 187.25\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Profile\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Widget\n            disableWidgetMenu\n            bodyClass={classes.tableWidget}\n          >\n            <Typography size=\"md\" weight=\"bold\">\n              Profile Settings\n            </Typography>\n            <br />\n            <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Logo\"></label></div>\n            <div className={classes.PreviewPiece}><img src={logo} className={classes.ImageContainer} /></div>\n            <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Logo\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={logoFileRef} onChange={logoImageHandler} style={{ display: 'none' }} />\n              <Button onClick={() => (logoFileRef.current.click())} className={classes.uploadLogoButton} variant=\"contained\">Upload New Logo</Button>\n            </div>\n          </Widget>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Widget\n            disableWidgetMenu\n            bodyClass={classes.tableWidget}\n          >\n            <Typography size=\"md\" weight=\"bold\">\n              Edit Locations\n            </Typography>\n            <LocationForm />\n            <Table className=\"mb-0\">\n              <TableHead>\n                <TableRow className={classes.tableRowHeader}>\n                  <TableCell className={classes.tableCell}>NAME</TableCell>\n                  <TableCell className={classes.tableCell}>ADDRESS</TableCell>\n\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.Locations.map(({ Name, Address }) => (\n\n                  <TableRow key={Address}>\n                    <TableCell className=\"pl-3 fw-normal\">{Name}</TableCell>\n                    <TableCell>{Address}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Widget>\n\n        </Grid>\n        <Grid item xs={6}>\n          <Widget\n            disableWidgetMenu\n            bodyClass={classes.tableWidget}\n          >\n            <Typography size=\"md\" weight=\"bold\">\n              View Account Balance\n            </Typography>\n            <div className={classes.outstandingBalance}>\n              <p className={classes.outstandingBalanceWord}>Outstanding Balance</p>\n              <Typography size=\"xxl\" weight=\"bold\">\n                {data.OutstandingAmount}\n              </Typography>\n            </div>\n            <div className={classes.PayPalContainer}>\n              {checkout ? (<PayPal amount={mockResponse.outstandingBalance} />) : (\n                <Button className={classes.payNowButton} variant=\"contained\" onClick={() => { setCheckout(true) }}><GrPaypal style={{ marginRight: 10 }} size={20} color=\"white\" />Pay now</Button>\n              )}\n            </div>\n          </Widget>\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/usertrends/LocationForm.js",["230","231","232"],"import React, { useState, useEffect, useRef } from 'react';\nimport useStyles from \"./styles\";\n\n\nimport TextField from '@material-ui/core/TextField'\n// components\nimport Button from '@material-ui/core/Button';\nimport Geocode from \"react-geocode\";\nimport * as Yup from 'yup';\nimport {\n    Formik, Form\n} from 'formik';\n\n\nexport default function LocationForm() {\n    const classes = useStyles();\n\n    const handleLocationUpdate = (values) => {\n        console.log(values.LocationAddress);\n        /**set the api key to use geocode */\n        Geocode.setLanguage(\"en\");\n        Geocode.setRegion(\"za\");\n        Geocode.setLocationType(\"ROOFTOP\");\n        // Get latitude & longitude from address.\n        Geocode.fromAddress(values.LocationAddress).then(\n            (response) => {\n                const { lat, lng } = response.results[0].geometry.location;\n                console.log(lat, lng);\n                fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/addnewlocations\", {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    method: \"POST\",\n                    body: JSON.stringify({ BID: \"b4\", lat: lat, lng: lng, \"LocationName\": values.LocationName, \"Address\": values.LocationAddress })\n                })\n                    .then(res => res.json())\n                    .then(\n                        (result) => {\n                            console.log(result);\n                        },\n                        // Note: it's important to handle errors here\n                        // instead of a catch() block so that we don't swallow\n                        // exceptions from actual bugs in components.\n                        (error) => {\n                        }\n                    )\n            },\n            (error) => {\n                console.error(error);\n                alert(\"Location \" + values.LocationName + \" was not found.\")\n            }\n        );\n    }\n\n    return (\n\n        <div className={classes.formElementsImageContainer}>\n            <Formik\n                initialValues={{\n                    LocationName: \"\",\n                    LocationAddress: \"\"\n                }}\n                validationSchema={Yup.object().shape({\n                    LocationName: Yup.string().required('*'),\n                    LocationAddress: Yup.string().required('*'),\n                })}\n                onSubmit={(values, { resetForm }) => { resetForm(); handleLocationUpdate(values) }}\n            >\n                {/** The moderate pairings form to submit */}\n                {({ errors, touched, values, handleChange, resetForm }) => (\n                    <Form >\n                        <div className={classes.marginAuto}>\n                            <div className={classes.formContainer}>\n                                <label htmlFor=\"LocationName\" className={classes.formLabel}>\n                                    <div className={classes.floatLeft}>\n                                        <p className={classes.errorDiv}>Name</p>\n                                    </div>\n                                    <div className={classes.floatLeft}>\n                                        {(errors.LocationName && touched.LocationName) ? (\n                                            <div className={classes.errorStar}>*</div>\n                                        ) : null}\n                                    </div>\n                                </label>\n                                <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"LocationName\" className={classes.individualTextField} onChange={handleChange} value={values.LocationName} />\n                            </div>\n                            <div className={classes.formContainer}>\n                                <label htmlFor=\"LocationAddress\" className={classes.formLabel}>\n                                    <div className={classes.floatLeft}>\n                                        <p className={classes.errorDiv}>Address</p>\n                                    </div>\n                                    <div className={classes.floatLeft}>\n                                        {(errors.LocationAddress && touched.LocationAddress) ? (\n                                            <div className={classes.errorStar}>*</div>\n                                        ) : null}\n                                    </div>\n                                </label>\n                                <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"LocationAddress\" className={classes.individualTextField} onChange={handleChange} value={values.LocationAddress} />\n                            </div>\n                        </div>\n                        <Button type=\"Submit\" className={classes.addLocationButton} > Add New Location</Button>\n\n                    </Form>\n                )}\n            </Formik>\n        </div>\n\n    );\n}\n","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/usertrends/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/components/Table/PayPal.js",["233","234"],"import React, { useState, useRef, useEffect } from \"react\";\n\nexport default function PayPal(amount) {\n\n    const paypal = useRef();\n    useEffect(() => {\n        console.log(amount);\n        window.paypal.Buttons({\n            createOrder: (data, actions, err) => {\n                return actions.order.create({\n                    intent: \"CAPTURE\",\n                    purchase_units: [\n                        {\n                            description: \"Settlement of account at Harmony Business\",\n                            amount: {\n                                value: amount.amount,\n                                currency: \"USD\"\n                            }\n                        }\n                    ]\n                })\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture()\n                console.log(order);\n                console.log(amount.amount);\n\n                // fetch('https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/receivepayment', {\n                //     headers: {\n                //         'Accept': 'application/json',\n                //         'Content-Type': 'application/json'\n                //     },\n                //     method: \"POST\",\n                //     body: JSON.stringify({ BID: \"b4\", Amount: amount.amount })\n                // })\n                //     .then(response => response.json())\n                //     .then(data => console.log(data))\n                //     .then(alert(\"Payment completed successfully.\"))\n                //do an api call that updates the statement total\n            },\n            onError: (err) => {\n                console.log(err)\n                //do an alert that payment was unsuccessful\n            }\n        }).render(paypal.current)\n    }, [])\n    return (\n        <div>\n            <div ref={paypal}></div>\n        </div>\n    );\n}\n\n","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Widget/Widget.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Wrappers/Wrappers.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/PageTitle/PageTitle.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/PageTitle/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Widget/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Layout/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/Dashboard.js",["235","236","237","238","239"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/login/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/error/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/themes/default.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/createads/Createads.js",["240","241","242"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/Sidebar.js",["243","244","245","246","247","248","249","250"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Header/Header.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/mock.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/dashboard/components/Table/Table.js",["251"],"import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Grid,\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Chip,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport PayPal from \"./PayPal\";\nimport { CSVLink } from \"react-csv\";\nimport Widget from \"../../../../components/Widget\";\nimport useStyles from \"../../styles\";\nimport { Typography } from \"../../../../components/Wrappers\";\nimport { IoMdCloudDownload } from \"react-icons/io\";\nimport { GrPaypal } from \"react-icons/gr\";\nconst states = {\n  active: \"success\",\n  expired: \"secondary\",\n};\n\nexport default function TableComponent({ data }) {\n  const classes = useStyles();\n  const [checkout, setCheckout] = useState(false);\n  const [result, setResult] = useState({ StatusCode: 200, AdvertData: [], OutstandingAmount: 0 });\n\n  var tableHeadings = [{ name: \"\", date_Created: \"\", expiring: \"\", location: \"\", status: \"\", cost: \"\" },] // var keys = Object.keys(data.statements[0]).map(i => i.toUpperCase());\n  var keys = Object.keys(tableHeadings[0]).map(i => i.toUpperCase());\n  /**to filter the data */\n  var [TimePeriod, setTimePeriod] = useState(\"Month\");\n  const handleChange = (event) => {\n    setTimePeriod(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log(JSON.stringify({ BID: \"b4\", TimePeriod: TimePeriod }));\n    // fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", { BID: \"b1\" })\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getstatement\", {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({ BID: \"ghjgj\", TimePeriod: TimePeriod })\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setResult(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n        }\n      )\n  }, [TimePeriod])\n\n  /** reference to allow an icon to click the csv button */\n  const csvRef = useRef();\n\n  /** the header for the csv to be exported */\n  const headers = [\n    { label: \"Name\", key: \"name\" },\n    { label: \"Date Created\", key: \"date\" },\n    { label: \"Expiring\", key: \"expiring\" },\n    { label: \"Location\", key: \"location\" },\n    { label: \"Status\", key: \"status\" },\n    { label: \"Cost\", key: \"cost\" },\n  ];\n  /**The variables need to export the csv for payments */\n  const csvReport = {\n    data: data.statements,\n    headers: headers,\n    filename: 'StatementOfAccount.csv'\n  };\n  return (\n    <Grid item xs={12}>\n      <Widget\n        disableWidgetMenu\n        noBodyPadding\n        bodyClass={classes.tableWidget}\n      >\n        <div style={{ float: \"right\" }}>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={TimePeriod}\n            onChange={handleChange}\n            label=\"chartState\"\n            style={{ float: \"left\", width: 150, marginRight: 25 }}\n          >\n            <MenuItem value=\"Day\">Past Day</MenuItem>\n            <MenuItem value=\"Week\">Past Week</MenuItem>\n            <MenuItem value=\"Month\">Past Month</MenuItem>\n            <MenuItem value=\"Year\">Past Year</MenuItem>\n            <MenuItem value=\"All\">All</MenuItem>\n          </Select>\n          <CSVLink {...csvReport} style={{ display: 'none' }} ref={csvRef}>Export to CSV</CSVLink>\n          <IoMdCloudDownload style={{ float: \"left\", marginRight: 25 }} size={32} onClick={() => { csvRef.current.link.click() }} />\n\n        </div>\n        <Table className=\"mb-0\">\n          <TableHead>\n            <TableRow>\n              {keys.map(key => (\n                <TableCell key={key}>{key}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n\n            {result.AdvertData.map(({ BPID, FoodName, DrinkName, DateCreated, DaysRemaining, Locations, Status, Price }) => (\n              <TableRow key={BPID}>\n                <TableCell className=\"pl-3 fw-normal\">{FoodName} and {DrinkName}</TableCell>\n                <TableCell>{DateCreated}</TableCell>\n                <TableCell>{DaysRemaining}</TableCell>\n                <TableCell>{Locations.map((item) => (item + \", \"))}</TableCell>\n                <TableCell>\n                  <Chip label={Status} classes={{ root: classes[states[Status.toLowerCase()]] }} />\n                </TableCell>\n                <TableCell style={{ textAlign: \"right\" }}>{Price}</TableCell>\n\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes.totalBox}>\n          <div className={classes.floatLeftLeft}>\n            <Typography size=\"xl\" weight=\"bold\">\n              Balance Due\n            </Typography>\n          </div>\n          <div className={classes.floatLeft}>\n            <Typography size=\"xl\" weight=\"bold\">\n              R{result.OutsandingAmount}\n            </Typography>\n          </div>\n          <div style={{ clear: \"both\" }}></div>\n          {checkout ? (<PayPal amount={result.OutsandingAmount} />) : (\n            <Button className={classes.payNowButton} variant=\"contained\" onClick={() => { setCheckout(true) }}><GrPaypal style={{ marginRight: 10 }} size={20} color=\"white\" />Pay now</Button>\n          )}\n        </div>\n      </Widget>\n    </Grid>\n\n  );\n}\n","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Header/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/components/Dot.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/createads/CreateAdForm.js",["252","253","254","255","256","257","258","259","260","261","262","263","264"],"import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Formik, Form\n} from 'formik';\n// classNames\nimport useStyles from \"./styles\";\nimport * as Yup from 'yup';\n// components\nimport Multiselect from 'multiselect-react-dropdown';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'\nfunction CreateAdForm(...props) {\n    /**The form variables */\n    const defaultImage = \"http://beepeers.com/assets/images/commerces/default-image.jpg\";\n    const [foodImage, setFoodImage] = useState(defaultImage);\n    const [drinkImage, setDrinkImage] = useState(defaultImage);\n    const [result, setResult] = useState([]);\n    var classes = useStyles();\n\n    /**@var fileRef to create a reference to the file input to be able to clear it */\n    const foodFileRef = useRef();\n    const drinkFileRef = useRef();\n\n    /**@var tagSelector used to clear the multiple selectors on clear  */\n    const foodTagSelector = useRef();\n    const drinkTagSelector = useRef();\n    const mealTagSelector = useRef();\n    const locationsTagSelector = useRef();\n    const timePeriodTagSelector = useRef();\n\n    const foodImageError = false;\n    const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\n\n    const mockResponse = {\n        statusCode: 200,\n        locations: [\"Durban North\", \"Pretoria East\", \"Westville\"]\n    }\n    useEffect(() => {\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({ BID: \"b4\" })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    setResult(result.Locations);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                }\n            )\n    }, [])\n\n    const handleClear = (values) => {\n        setFoodImage(defaultImage);\n        setDrinkImage(defaultImage);\n        foodFileRef.current.value = \"\";\n        drinkFileRef.current.value = \"\";\n\n        /**in a try catch because if you try clearing a list thats already empty it should do nothing */\n        try {\n            foodTagSelector.current.resetSelectedValues();\n            drinkTagSelector.current.resetSelectedValues();\n            mealTagSelector.current.resetSelectedValues();\n            locationsTagSelector.current.resetSelectedValues();\n            timePeriodTagSelector.current.resetSelectedValues();\n        } catch (error) {\n        }\n\n    }\n\n    /**Handles the image preview */\n    const FoodImageHandler = (e, values) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setFoodImage(reader.result);\n                // console.log(btoa(img))\n            }\n        }\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\n        else {\n            alert(e.target.files[0].type + \" is not a supported file format.\");\n            setFoodImage(defaultImage);\n        }\n    }\n    const DrinkImageHandler = (e) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setDrinkImage(reader.result);\n                // console.log(btoa(img))\n            }\n        }\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\n        else {\n            alert(e.target.files[0].type + \" is not a supported file format.\");\n            setDrinkImage(defaultImage);\n        }\n    }\n    /** Submits the form to the database */\n    const handleSubmit = (vals) => {\n\n        // console.log(\"submitted handle \" + JSON.stringify(vals))\n        var request = {\n            FoodName: vals.FoodName,\n            DrinkName: vals.DrinkName,\n            BID: \"b4\",\n            FoodTags: vals.FoodTags,\n            DrinkTags: vals.DrinkTags,\n            PairingTags: vals.PairingTags,\n            Description: vals.PairingDescription,\n            Locations: vals.Locations,\n            TimePeriod: vals.TimePeriod,\n            FoodImage: foodImage.split(',')[1],\n            DrinkImage: drinkImage.split(',')[1],\n        }\n        // console.log(\"request to submit \" + JSON.stringify(request))\n        fetch('https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/createbusinesspairing', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(request)\n        })\n            .then(response => response.json())\n            .then(data => console.log(data))\n            .then(alert(\"Advert for \" + vals.FoodName + \" and \" + vals.DrinkName + \" was created successfully.\"))\n    }\n\n    return (\n        <div className={classes.addItemContainer}>\n            <Formik\n                enableReinitialize={true}\n                initialValues={{\n                    FoodName: \"\",\n                    FoodTags: \"\",\n                    DrinkName: \"\",\n                    DrinkTags: \"\",\n                    PairingDescription: \"\",\n                    PairingTags: \"\",\n                    Locations: \"\",\n                    TimePeriod: \"\",\n                }}\n                validationSchema={Yup.object().shape({\n                    FoodName: Yup.string().required('*'),\n                    DrinkName: Yup.string().required('*'),\n                    PairingDescription: Yup.string().required('*'),\n                })}\n                // onSubmit={(values) => handleSubmit(values)}\n                onSubmit={(values, { resetForm }) => {\n                    if (foodImage == defaultImage || drinkImage == defaultImage) {\n                        if (foodImage == defaultImage)\n                            alert(\"You havent uploaded an image for food.\");\n                        else\n                            alert(\"You havent uploaded an image for drink.\");\n                    }\n                    else {                    /**reset then handle submit */\n                        resetForm();\n                        handleClear();\n                        handleSubmit(values);\n                    }\n                }}\n            >\n                {/** The moderate pairings form to submit */}\n                {({ errors, touched, values, handleChange, resetForm }) => (\n                    <Form>\n                        <div className={classes.formElementsImageContainer}>\n                            <div className={classes.PreviewContainer}>\n                                <div className={classes.FoodLabelButton}>Food</div>\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Food\"></label></div>\n                                <div className={classes.PreviewPiece}><img src={foodImage} className={classes.ImageContainer} /></div>\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Food\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={foodFileRef} onChange={(values) => FoodImageHandler(values)} style={{ display: 'none' }} />\n                                    <Button onClick={() => (foodFileRef.current.click())} className={classes.uploadFoodButton} variant=\"contained\">Upload Image</Button>\n                                </div>\n                                <div className={classes.formElementsImageContainer}>\n                                    <label htmlFor=\"FoodName\" className={classes.formLabel}>\n                                        <div className={classes.floatLeft}>\n                                            <p className={classes.errorDiv}>Food Name</p>\n                                        </div>\n                                        <div className={classes.floatLeft}>\n                                            {(errors.FoodName && touched.FoodName) ? (\n                                                <div className={classes.errorStar}>*</div>\n                                            ) : null}\n                                        </div>\n                                    </label>\n                                    {/* <TextField id=\"outlined-basic\" error={errors.FoodName} variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} /> */}\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} />\n                                </div>\n                                <div className={classes.formElementsImageContainer}>\n                                    <label htmlFor=\"FoodTags\" className={classes.formLabel}>\n                                        <div className={classes.floatLeft}>\n                                            <p className={classes.errorDiv}>Food Tags</p>\n                                        </div>\n                                        <div className={classes.floatLeft}>\n                                            {(values.FoodTags == [] && touched.FoodTags) ? (\n                                                <div className={classes.errorStar}>*</div>\n                                            ) : null}\n                                        </div>\n                                    </label>\n                                    <div className={classes.multiselector}>\n                                        <Multiselect\n                                            isObject={false}\n                                            disablePreSelectedValues\n                                            avoidHighlightFirstOption\n                                            selectionLimit={3}\n                                            showArrow\n                                            ref={foodTagSelector}\n                                            placeholder=\"\"\n                                            style={{\n                                                optionContainer: { // To change css for option container \n                                                    'width': '100%',\n                                                },\n\n                                                multiselectContainer: {\n                                                    'width': '100%',\n                                                    'height': 20,\n                                                },\n                                                inputField: {\n                                                    'width': '100%',\n                                                    'height': 20,\n                                                },\n                                                chips: {\n                                                    'backgroundColor': '#FF6347',\n                                                    'fontWeight': 'bold',\n                                                },\n                                            }}\n                                            onRemove={(selectedList) => (values.FoodTags = selectedList)}\n                                            onSearch={function noRefCheck() { }}\n                                            onSelect={(selectedList) => (values.FoodTags = selectedList)}\n                                            id=\"FoodTags\" name=\"FoodTags\" value={values.FoodTags}\n                                            options={['Spicy', 'Savoury', 'Salty', 'Sweet', 'Sour', 'Warm', 'Hot', 'Cold']}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={classes.PreviewContainer}>\n                                <div className={classes.DrinkLabelButton}>Drink</div>\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Drink\"></label></div>\n                                <div className={classes.PreviewPiece}><img src={drinkImage} className={classes.ImageContainer} /></div>\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Drink\" name=\"ImageclassNameDrink\" accept=\"image/*\" ref={drinkFileRef} onChange={DrinkImageHandler} style={{ display: 'none' }} />\n                                    <Button onClick={() => (drinkFileRef.current.click())} className={classes.uploadDrinkButton} variant=\"contained\">Upload Image</Button>\n                                </div>\n\n                                <div className={classes.formElementsImageContainer}>\n                                    <label htmlFor=\"Drink Name\" className={classes.formLabel}>\n                                        <div className={classes.floatLeft}>\n                                            <p className={classes.errorDiv}>Drink Name</p>\n                                        </div>\n                                        <div className={classes.floatLeft}>\n                                            {(errors.DrinkName && touched.DrinkName) ? (\n                                                <div className={classes.errorStar}>*</div>\n                                            ) : null}\n                                        </div>\n                                    </label>\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"DrinkName\" className={classes.individualTextField} onChange={handleChange} value={values.DrinkName} />\n\n                                </div>\n                                <div className={classes.formElementsImageContainer}>\n                                    <label htmlFor=\"DrinkTags\" className={classes.formLabel}>\n                                        <div className={classes.floatLeft}>\n                                            <p className={classes.errorDiv}>Drink Tags</p>\n                                        </div>\n                                        <div className={classes.floatLeft}>\n                                            {(values.DrinkTags == [] && touched.DrinkTags) ? (\n                                                <div className={classes.errorStar}>*</div>\n                                            ) : null}\n                                        </div>\n                                    </label>\n                                    <div className={classes.multiselector}>\n                                        <Multiselect\n                                            isObject={false}\n                                            disablePreSelectedValues\n                                            avoidHighlightFirstOption\n                                            selectionLimit={3}\n                                            showArrow\n                                            ref={drinkTagSelector}\n                                            placeholder=\"\"\n                                            style={{\n                                                optionContainer: { // To change css for option container \n                                                    'width': '100%'\n                                                },\n                                                searchBox: {\n                                                    'width': '100%'\n                                                },\n                                                chips: {\n                                                    'backgroundColor': '#1FBFBA',\n                                                    'fontWeight': 'bold'\n                                                },\n                                            }}\n                                            onRemove={(selectedList) => (values.DrinkTags = selectedList)}\n                                            onSearch={function noRefCheck() { }}\n                                            onSelect={(selectedList) => (values.DrinkTags = selectedList)}\n                                            id=\"DrinkTags\" name=\"DrinkTags\" onChange={handleChange} value={values.DrinkTags}\n                                            options={['Alcoholic', 'Non-Alcoholic', 'Fizzy', 'Sweet', 'Sour', 'Bitter', 'Warm', 'Hot', 'Cold']}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className={classes.PreviewContainerPairing}>\n                            <div className={classes.MealLabelButton}>Pairing</div>\n\n                            <div className={classes.MealContainer}>\n                                <div className={classes.formElementsPairing}>\n                                    <label htmlFor=\"PairingDescription\" className={classes.formLabel}>\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Description</p> </div>\n                                        <div className={classes.floatLeft}>\n                                            {(errors.PairingDescription && touched.PairingDescription) ? (\n                                                <div className={classes.errorStar}>*</div>\n                                            ) : null}\n                                        </div>\n                                    </label>\n                                    <TextField id=\"outlined-basic\" multiline={true} rows={4} variant=\"outlined\" name=\"PairingDescription\" className={classes.individualTextField} onChange={handleChange} value={values.PairingDescription} />\n                                </div>\n                                <br />\n                                <div className={classes.formElementsPairingTag}>\n                                    <label htmlFor=\"PairingTags\" className={classes.tagName}>\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Tag</p> </div>\n                                        <div className={classes.floatLeft}>\n                                            {(values.PairingTags == [] && touched.PairingTags) ? (\n                                                <div className={classes.errorStar}>*</div>\n                                            ) : null}\n                                        </div>\n                                    </label>\n                                    <div className={classes.multiselectorTag}>\n                                        <Multiselect\n                                            isObject={false}\n                                            disablePreSelectedValues\n                                            avoidHighlightFirstOption\n                                            selectionLimit={1}\n                                            showArrow\n                                            placeholder=\"\"\n                                            ref={mealTagSelector}\n                                            style={{\n                                                optionContainer: { // To change css for option container \n                                                    'width': '100%'\n                                                },\n                                                searchBox: {\n                                                    // 'border': '1px solid grey',\n                                                    'width': '100%'\n                                                },\n                                                chips: {\n                                                    'backgroundColor': '#C41ED4',\n                                                    'fontWeight': 'bold',\n                                                },\n                                            }}\n                                            onRemove={(selectedList) => (values.PairingTags = selectedList)}\n                                            onSearch={function noRefCheck() { }}\n                                            onSelect={(selectedList) => (values.PairingTags = selectedList)}\n                                            id=\"PairingTags\" name=\"PairingTags\" onChange={handleChange} value={values.PairingTags}\n                                            options={['Breakfast', 'Lunch', 'Supper', 'Snack', 'Vegetarian', 'Dairy-Free', 'Nut-Free']}\n                                        />\n                                    </div>\n                                </div>\n                                <div className={classes.clear}></div>\n\n                            </div>\n                        </div>\n                        <br />\n                        <div className={classes.PreviewContainerPairing}>\n                            <div className={classes.configurationLabel}>Configuration</div>\n\n                            <div className={classes.MealContainer}>\n                                <div className={classes.formElementsImageContainer}>\n                                    <div className={classes.configLabel}>\n\n                                        <label htmlFor=\"Locations\" className={classes.tagName}>\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Locations</p> </div>\n                                            <div className={classes.floatLeft}>\n                                                {(values.Locations == [] && touched.Locations) ? (\n                                                    <div className={classes.errorStar}>*</div>\n                                                ) : null}\n                                            </div>\n                                        </label>\n                                    </div>\n                                    <div className={classes.multiselectorTag}>\n                                        <Multiselect\n                                            isObject={false}\n                                            disablePreSelectedValues\n                                            avoidHighlightFirstOption\n                                            showArrow\n                                            placeholder=\"\"\n                                            ref={locationsTagSelector}\n                                            style={{\n                                                optionContainer: { // To change css for option container \n                                                    'width': '90%'\n                                                },\n                                                searchBox: {\n                                                    // 'border': '1px solid grey',\n                                                    'width': '90%'\n                                                },\n                                                chips: {\n                                                    'backgroundColor': '#4CD41E',\n                                                    'fontWeight': 'bold',\n                                                },\n                                            }}\n                                            onRemove={(selectedList) => (values.Locations = selectedList)}\n                                            onSearch={function noRefCheck() { }}\n                                            onSelect={(selectedList) => (values.Locations = selectedList)}\n                                            id=\"Locations\" name=\"Locations\" onChange={handleChange} value={values.Locations}\n                                            options={result}\n                                        />\n                                    </div>\n                                </div>\n                                <div className={classes.formElementsImageContainer}>\n                                    <div className={classes.configLabel}>\n                                        <label htmlFor=\"TimePeriod\" className={classes.tagName}>\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Time Period</p> </div>\n                                            <div className={classes.floatLeft}>\n                                                {(values.TimePeriod == [] && touched.TimePeriod) ? (\n                                                    <div className={classes.errorStar}>*</div>\n                                                ) : null}\n                                            </div>\n                                        </label>\n                                    </div>\n                                    <div className={classes.multiselectorTag}>\n                                        <Multiselect\n                                            isObject={false}\n                                            disablePreSelectedValues\n                                            avoidHighlightFirstOption\n                                            selectionLimit={1}\n                                            showArrow\n                                            placeholder=\"\"\n                                            ref={timePeriodTagSelector}\n                                            style={{\n                                                optionContainer: { // To change css for option container \n                                                    'width': '90%'\n                                                },\n                                                searchBox: {\n                                                    'width': '90%'\n                                                },\n                                                chips: {\n                                                    'backgroundColor': '#4CD41E',\n                                                    'fontWeight': 'bold'\n                                                },\n                                            }}\n                                            onRemove={(selectedList) => (values.TimePeriod = selectedList)}\n                                            onSearch={function noRefCheck() { }}\n                                            onSelect={(selectedList) => (values.TimePeriod = selectedList)}\n                                            id=\"TimePeriod\" name=\"TimePeriod\" onChange={handleChange} value={values.TimePeriod}\n                                            options={['One Day', 'One Week', 'One Month', 'Three Months', 'Six Months', 'One Year']}\n                                        />\n                                    </div>\n                                </div>\n                                <div className={classes.clear}></div>\n                            </div>\n                        </div>\n                        <br />\n                        <div className={classes.ButtonContainer}>\n                            <Button onClick={(values) => (resetForm(), handleClear())} className={classes.clearButton} variant=\"contained\">Clear</Button>\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.addButton} onClick={() => console.log(\"clicked submit\")}>\n                                Create Advert\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div >\n    );\n}\n\nexport default CreateAdForm;\n","/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/createads/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/UserAvatar/UserAvatar.js",[],["265","266"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Notification/Notification.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Sidebar/components/SidebarLink/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/UserAvatar/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/components/Notification/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/aws-exports.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/ResetPass.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/SignUp.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/Form.js",["267","268","269"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/styles.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/Form.js",["270","271","272","273"],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/AccountForm.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/CodeForm.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/AccountForm.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/signup/VeriCodeForm.js",[],"/Users/arshad/WebstormProjects/Harmony/frontend/BusinessAppHarmony/src/pages/resetpass/NewPassForm.js",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":14,"column":8,"nodeType":"280","messageId":"281","endLine":14,"endColumn":13},{"ruleId":"278","severity":1,"message":"282","line":25,"column":10,"nodeType":"280","messageId":"281","endLine":25,"endColumn":14},{"ruleId":"278","severity":1,"message":"283","line":25,"column":16,"nodeType":"280","messageId":"281","endLine":25,"endColumn":23},{"ruleId":"278","severity":1,"message":"284","line":5,"column":3,"nodeType":"280","messageId":"281","endLine":5,"endColumn":11},{"ruleId":"278","severity":1,"message":"285","line":9,"column":14,"nodeType":"280","messageId":"281","endLine":9,"endColumn":24},{"ruleId":"278","severity":1,"message":"286","line":9,"column":26,"nodeType":"280","messageId":"281","endLine":9,"endColumn":30},{"ruleId":"278","severity":1,"message":"287","line":10,"column":8,"nodeType":"280","messageId":"281","endLine":10,"endColumn":12},{"ruleId":"278","severity":1,"message":"288","line":4,"column":8,"nodeType":"280","messageId":"281","endLine":4,"endColumn":17},{"ruleId":"278","severity":1,"message":"289","line":88,"column":9,"nodeType":"280","messageId":"281","endLine":88,"endColumn":29},{"ruleId":"290","severity":1,"message":"291","line":130,"column":51,"nodeType":"292","endLine":130,"endColumn":104},{"ruleId":"278","severity":1,"message":"293","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":25},{"ruleId":"278","severity":1,"message":"294","line":1,"column":27,"nodeType":"280","messageId":"281","endLine":1,"endColumn":36},{"ruleId":"278","severity":1,"message":"295","line":1,"column":38,"nodeType":"280","messageId":"281","endLine":1,"endColumn":44},{"ruleId":"278","severity":1,"message":"293","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":46,"column":8,"nodeType":"298","endLine":46,"endColumn":10,"suggestions":"299"},{"ruleId":"278","severity":1,"message":"293","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":25},{"ruleId":"278","severity":1,"message":"300","line":10,"column":8,"nodeType":"280","messageId":"281","endLine":10,"endColumn":14},{"ruleId":"278","severity":1,"message":"301","line":12,"column":10,"nodeType":"280","messageId":"281","endLine":12,"endColumn":20},{"ruleId":"278","severity":1,"message":"302","line":16,"column":7,"nodeType":"280","messageId":"281","endLine":16,"endColumn":14},{"ruleId":"278","severity":1,"message":"303","line":17,"column":7,"nodeType":"280","messageId":"281","endLine":17,"endColumn":12},{"ruleId":"278","severity":1,"message":"300","line":9,"column":8,"nodeType":"280","messageId":"281","endLine":9,"endColumn":14},{"ruleId":"278","severity":1,"message":"301","line":10,"column":10,"nodeType":"280","messageId":"281","endLine":10,"endColumn":20},{"ruleId":"278","severity":1,"message":"302","line":13,"column":7,"nodeType":"280","messageId":"281","endLine":13,"endColumn":14},{"ruleId":"278","severity":1,"message":"304","line":5,"column":24,"nodeType":"280","messageId":"281","endLine":5,"endColumn":41},{"ruleId":"278","severity":1,"message":"305","line":6,"column":17,"nodeType":"280","messageId":"281","endLine":6,"endColumn":31},{"ruleId":"278","severity":1,"message":"306","line":7,"column":17,"nodeType":"280","messageId":"281","endLine":7,"endColumn":31},{"ruleId":"278","severity":1,"message":"307","line":9,"column":21,"nodeType":"280","messageId":"281","endLine":9,"endColumn":32},{"ruleId":"278","severity":1,"message":"308","line":10,"column":19,"nodeType":"280","messageId":"281","endLine":10,"endColumn":30},{"ruleId":"278","severity":1,"message":"309","line":11,"column":18,"nodeType":"280","messageId":"281","endLine":11,"endColumn":25},{"ruleId":"278","severity":1,"message":"310","line":14,"column":8,"nodeType":"280","messageId":"281","endLine":14,"endColumn":20},{"ruleId":"278","severity":1,"message":"311","line":26,"column":8,"nodeType":"280","messageId":"281","endLine":26,"endColumn":11},{"ruleId":"278","severity":1,"message":"312","line":11,"column":3,"nodeType":"280","messageId":"281","endLine":11,"endColumn":16},{"ruleId":"278","severity":1,"message":"313","line":31,"column":11,"nodeType":"280","messageId":"281","endLine":31,"endColumn":25},{"ruleId":"278","severity":1,"message":"314","line":34,"column":11,"nodeType":"280","messageId":"281","endLine":34,"endColumn":23},{"ruleId":"315","severity":1,"message":"316","line":160,"column":35,"nodeType":"317","messageId":"318","endLine":160,"endColumn":37},{"ruleId":"315","severity":1,"message":"316","line":160,"column":65,"nodeType":"317","messageId":"318","endLine":160,"endColumn":67},{"ruleId":"315","severity":1,"message":"316","line":161,"column":39,"nodeType":"317","messageId":"318","endLine":161,"endColumn":41},{"ruleId":"290","severity":1,"message":"291","line":180,"column":71,"nodeType":"292","endLine":180,"endColumn":129},{"ruleId":"315","severity":1,"message":"316","line":204,"column":63,"nodeType":"317","messageId":"318","endLine":204,"endColumn":65},{"ruleId":"290","severity":1,"message":"291","line":248,"column":71,"nodeType":"292","endLine":248,"endColumn":130},{"ruleId":"315","severity":1,"message":"316","line":273,"column":64,"nodeType":"317","messageId":"318","endLine":273,"endColumn":66},{"ruleId":"315","severity":1,"message":"316","line":330,"column":66,"nodeType":"317","messageId":"318","endLine":330,"endColumn":68},{"ruleId":"315","severity":1,"message":"316","line":380,"column":68,"nodeType":"317","messageId":"318","endLine":380,"endColumn":70},{"ruleId":"315","severity":1,"message":"316","line":420,"column":69,"nodeType":"317","messageId":"318","endLine":420,"endColumn":71},{"ruleId":"319","severity":1,"message":"320","line":460,"column":70,"nodeType":"321","messageId":"322","endLine":460,"endColumn":71},{"ruleId":"274","replacedBy":"323"},{"ruleId":"276","replacedBy":"324"},{"ruleId":"278","severity":1,"message":"325","line":12,"column":10,"nodeType":"280","messageId":"281","endLine":12,"endColumn":20},{"ruleId":"315","severity":1,"message":"316","line":72,"column":27,"nodeType":"317","messageId":"318","endLine":72,"endColumn":29},{"ruleId":"315","severity":1,"message":"316","line":80,"column":28,"nodeType":"317","messageId":"318","endLine":80,"endColumn":30},{"ruleId":"278","severity":1,"message":"325","line":13,"column":10,"nodeType":"280","messageId":"281","endLine":13,"endColumn":20},{"ruleId":"315","severity":1,"message":"316","line":79,"column":27,"nodeType":"317","messageId":"318","endLine":79,"endColumn":29},{"ruleId":"315","severity":1,"message":"316","line":86,"column":28,"nodeType":"317","messageId":"318","endLine":86,"endColumn":30},{"ruleId":"315","severity":1,"message":"316","line":91,"column":29,"nodeType":"317","messageId":"318","endLine":91,"endColumn":31},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Redirect' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'TextField' is defined but never used.","'handleLocationUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'amount'. Either include it or remove the dependency array.","ArrayExpression",["328"],"'Widget' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'FeedbackIcon' is defined but never used.","'Dot' is defined but never used.","'OutlinedInput' is defined but never used.","'foodImageError' is assigned a value but never used.","'mockResponse' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["326"],["327"],"'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},"Update the dependencies array to be: [amount]",{"range":"331","text":"332"},[1816,1818],"[amount]"]