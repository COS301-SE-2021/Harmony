[{"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js":"1","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js":"2","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js":"3","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js":"4","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js":"5","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js":"6","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js":"8","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js":"9","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js":"10","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js":"11","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\PayPal.js":"12","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js":"13","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\styles.js":"14","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js":"15","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js":"16","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js":"17","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js":"18","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js":"19","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js":"20","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js":"21","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\settings\\Settings.js":"22","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js":"24","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js":"25","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js":"26","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js":"27","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js":"28","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js":"29","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js":"30","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js":"31","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js":"32","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js":"33","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"34","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js":"35","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\Notification.js":"36","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js":"37","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"38","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\styles.js":"39","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\styles.js":"40","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\LocationForm.js":"41"},{"size":896,"mtime":1631969542725,"results":"42","hashOfConfig":"43"},{"size":5083,"mtime":1631969542754,"results":"44","hashOfConfig":"43"},{"size":1787,"mtime":1631969542554,"results":"45","hashOfConfig":"43"},{"size":2053,"mtime":1631969542723,"results":"46","hashOfConfig":"43"},{"size":1444,"mtime":1631969542722,"results":"47","hashOfConfig":"43"},{"size":534,"mtime":1631969542755,"results":"48","hashOfConfig":"43"},{"size":1758,"mtime":1631969542558,"results":"49","hashOfConfig":"43"},{"size":1626,"mtime":1631969542741,"results":"50","hashOfConfig":"43"},{"size":8837,"mtime":1631969542744,"results":"51","hashOfConfig":"43"},{"size":3127,"mtime":1631969542755,"results":"52","hashOfConfig":"43"},{"size":7291,"mtime":1632002183816,"results":"53","hashOfConfig":"43"},{"size":1962,"mtime":1631992257136,"results":"54","hashOfConfig":"43"},{"size":3971,"mtime":1631969542720,"results":"55","hashOfConfig":"43"},{"size":6675,"mtime":1632002310015,"results":"56","hashOfConfig":"43"},{"size":3281,"mtime":1631969542746,"results":"57","hashOfConfig":"43"},{"size":1395,"mtime":1631969542743,"results":"58","hashOfConfig":"43"},{"size":447,"mtime":1631969542577,"results":"59","hashOfConfig":"43"},{"size":2581,"mtime":1631969542716,"results":"60","hashOfConfig":"43"},{"size":801,"mtime":1631969542731,"results":"61","hashOfConfig":"43"},{"size":710,"mtime":1631969542559,"results":"62","hashOfConfig":"43"},{"size":736,"mtime":1631969542728,"results":"63","hashOfConfig":"43"},{"size":1818,"mtime":1631969542748,"results":"64","hashOfConfig":"43"},{"size":3467,"mtime":1631969542579,"results":"65","hashOfConfig":"43"},{"size":10236,"mtime":1631969542554,"results":"66","hashOfConfig":"43"},{"size":1015,"mtime":1631969542719,"results":"67","hashOfConfig":"43"},{"size":482,"mtime":1631969542578,"results":"68","hashOfConfig":"43"},{"size":3429,"mtime":1631969542740,"results":"69","hashOfConfig":"43"},{"size":5636,"mtime":1632041855981,"results":"70","hashOfConfig":"43"},{"size":5277,"mtime":1631969542739,"results":"71","hashOfConfig":"43"},{"size":6194,"mtime":1631981807940,"results":"72","hashOfConfig":"43"},{"size":28362,"mtime":1632004906230,"results":"73","hashOfConfig":"43"},{"size":1363,"mtime":1631969542710,"results":"74","hashOfConfig":"43"},{"size":4043,"mtime":1631969542557,"results":"75","hashOfConfig":"43"},{"size":4589,"mtime":1631969542582,"results":"76","hashOfConfig":"43"},{"size":902,"mtime":1631969542580,"results":"77","hashOfConfig":"43"},{"size":3413,"mtime":1631969542559,"results":"78","hashOfConfig":"43"},{"size":620,"mtime":1631969542712,"results":"79","hashOfConfig":"43"},{"size":1474,"mtime":1631969542582,"results":"80","hashOfConfig":"43"},{"size":291,"mtime":1631969542714,"results":"81","hashOfConfig":"43"},{"size":1040,"mtime":1631969542560,"results":"82","hashOfConfig":"43"},{"size":5123,"mtime":1632041884174,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"ifno9o",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js",[],["176","177"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js",["178","179","180","181"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport ModerateItems from \"../../pages/createads\";\r\nimport Tables from \"../../pages/settings\";\r\nimport Feedback from \"../../pages/usertrends\";\r\n\r\n\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/createads\" component={ModerateItems} />\r\n              <Route path=\"/app/settings\" component={Tables} />\r\n              <Route path=\"/app/usertrends\" component={Feedback} />\r\n\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js",["182","183","184"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell, } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport TextField from '@material-ui/core/TextField'\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Geocode from \"react-geocode\";\r\nimport PayPal from '../dashboard/components/Table/PayPal';\r\nimport { GrPaypal } from \"react-icons/gr\";\r\nimport LocationForm from './LocationForm';\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  const [logo, setLogo] = useState(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n  const [checkout, setCheckout] = useState(false);\r\n  const [data, setData] = useState({ OutstandingAmount: 0, Locations: [{ name: \"\" }, { address: \"\" }] });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\" })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setData(result.UserData);\r\n          setLogo(result.UserData.Logo)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  /**@var fileRef to create a reference to the file input to be able to clear it */\r\n  const logoFileRef = useRef();\r\n\r\n  const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\n  /**Handles the image preview */\r\n  const logoImageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setLogo(reader.result)\r\n        var base64result = reader.result.split(',')[1];\r\n        console.log(base64result);\r\n        // fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", { BID: \"b1\", Logo: btoa(reader.result) })\r\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({ BID: \"b4\", Logo: base64result })\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              console.log(result);\r\n              setData(result.Data);\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n            }\r\n          )\r\n      }\r\n    }\r\n    if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n    else {\r\n      alert(e.target.files[0].type + \" is not a supported file format.\");\r\n      setLogo(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n    }\r\n  }\r\n\r\n  const handleLocationUpdate = (values) => {\r\n    console.log(values.LocationAddress);\r\n    /**set the api key to use geocode */\r\n    Geocode.setApiKey(\"AIzaSyBWoLXoRAgQgoJkZb0n5fOy5-T_C4fwhkI\");\r\n    Geocode.setLanguage(\"en\");\r\n    Geocode.setRegion(\"za\");\r\n    Geocode.setLocationType(\"ROOFTOP\");\r\n    // Get latitude & longitude from address.\r\n    Geocode.fromAddress(values.LocationAddress).then(\r\n      (response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n        console.log(lat, lng);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  const mockResponse = {\r\n    statusCode: 200,\r\n    logo: \"base 64 format\",\r\n    Locations: [{ name: \"Durban North\", address: \"34 Ilala Drive\" },\r\n    { name: \"Pretoria East\", address: \"107 Garsfontein Road\" },\r\n    { name: \"Westiville\", address: \"37 Jack Martins Drive\" }\r\n    ],\r\n    outstandingBalance: 187.25\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Profile\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            disableWidgetMenu\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Typography size=\"md\" weight=\"bold\">\r\n              Profile Settings\r\n            </Typography>\r\n            <br />\r\n            <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Logo\"></label></div>\r\n            <div className={classes.PreviewPiece}><img src={logo} className={classes.ImageContainer} /></div>\r\n            <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Logo\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={logoFileRef} onChange={logoImageHandler} style={{ display: 'none' }} />\r\n              <Button onClick={() => (logoFileRef.current.click())} className={classes.uploadLogoButton} variant=\"contained\">Upload New Logo</Button>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Widget\r\n            disableWidgetMenu\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Typography size=\"md\" weight=\"bold\">\r\n              Edit Locations\r\n            </Typography>\r\n            <LocationForm />\r\n            <Table className=\"mb-0\">\r\n              <TableHead>\r\n                <TableRow className={classes.tableRowHeader}>\r\n                  <TableCell className={classes.tableCell}>NAME</TableCell>\r\n                  <TableCell className={classes.tableCell}>ADDRESS</TableCell>\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.Locations.map(({ Name, Address }) => (\r\n\r\n                  <TableRow key={Address}>\r\n                    <TableCell className=\"pl-3 fw-normal\">{Name}</TableCell>\r\n                    <TableCell>{Address}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Widget>\r\n\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Widget\r\n            disableWidgetMenu\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Typography size=\"md\" weight=\"bold\">\r\n              View Account Balance\r\n            </Typography>\r\n            <div className={classes.outstandingBalance}>\r\n              <p className={classes.outstandingBalanceWord}>Outstanding Balance</p>\r\n              <Typography size=\"xxl\" weight=\"bold\">\r\n                {data.OutstandingAmount}\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.PayPalContainer}>\r\n              {checkout ? (<PayPal amount={mockResponse.outstandingBalance} />) : (\r\n                <Button className={classes.payNowButton} variant=\"contained\" onClick={() => { setCheckout(true) }}><GrPaypal style={{ marginRight: 10 }} size={20} color=\"white\" />Pay now</Button>\r\n              )}\r\n            </div>\r\n          </Widget>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\PayPal.js",["185","186"],"import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function PayPal(amount) {\r\n\r\n    const paypal = useRef();\r\n    useEffect(() => {\r\n        console.log(amount);\r\n        window.paypal.Buttons({\r\n            createOrder: (data, actions, err) => {\r\n                return actions.order.create({\r\n                    intent: \"CAPTURE\",\r\n                    purchase_units: [\r\n                        {\r\n                            description: \"Settlement of account at Harmony Business\",\r\n                            amount: {\r\n                                value: amount.amount,\r\n                                currency: \"USD\"\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture()\r\n                console.log(order);\r\n                console.log(amount.amount);\r\n\r\n                // fetch('https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/receivepayment', {\r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-Type': 'application/json'\r\n                //     },\r\n                //     method: \"POST\",\r\n                //     body: JSON.stringify({ BID: \"b4\", Amount: amount.amount })\r\n                // })\r\n                //     .then(response => response.json())\r\n                //     .then(data => console.log(data))\r\n                //     .then(alert(\"Payment completed successfully.\"))\r\n                //do an api call that updates the statement total\r\n            },\r\n            onError: (err) => {\r\n                console.log(err)\r\n                //do an alert that payment was unsuccessful\r\n            }\r\n        }).render(paypal.current)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div ref={paypal}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js",["187","188","189","190","191"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Table from \"./components/Table/Table\";\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Remaining balance on account\" />\r\n      <Grid container spacing={4}>\r\n        <Table data={mock.table} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js",["192","193","194"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport CreateAdForm from \"./CreateAdForm\";\r\nexport default function TypographyPage() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Create Pairing Advert\" />\r\n      <Grid container spacing={1}>\r\n        {/* <Grid item xs={12} md={12}> */}\r\n        {/* <Widget title=\"\" disableWidgetMenu>\r\n           \r\n          </Widget> */}\r\n        <CreateAdForm />\r\n        {/* </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\settings\\Settings.js",["195","196"],"import PageTitle from \"../../components/PageTitle\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from 'axios';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function DataTable() {\r\n  const [posts, setPost] = useState([]);\r\n  let signal = axios.CancelToken.source();\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    axios.get(`https://jsonplaceholder.typicode.com/posts`, {\r\n      cancelToken: signal.token,\r\n    })\r\n        .then(res => {\r\n          const posts = res.data;\r\n          setPost(posts);\r\n        }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    return function cleanup() {\r\n      isSubscribed = false;\r\n      signal.cancel('Api is being canceled');\r\n    }\r\n  }, []);\r\n\r\n  const columns = [\"userId\", \"id\", \"title\", \"body\"];\r\n\r\n  const options = {\r\n    filter: true,\r\n    filterType: \"dropdown\",\r\n    print: true,\r\n    viewColumns: true,\r\n    selectableRows: 'none',\r\n    onRowClick: (rowData) => {\r\n      console.log(\"RowClicked->\", rowData);\r\n    },\r\n    responsive: \"stacked\",\r\n    fixedHeaderOptions: {\r\n      xAxis: false,\r\n      yAxis: true,\r\n    },\r\n  };\r\n\r\n\r\n  return (\r\n      <>\r\n        <PageTitle title=\"Train AI\"/>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <MUIDataTable\r\n                title={\"Posts\"}\r\n                data={posts}\r\n                columns={columns}\r\n                options={options}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <MUIDataTable\r\n                title={\"Posts\"}\r\n                data={posts}\r\n                columns={columns}\r\n                options={options}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js",["197","198","199","200","201","202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Moderate Pairing\",\r\n    link: \"/app/createads\",\r\n    icon: <QueueIcon />,\r\n  },\r\n  { id: 2, label: \"Train AI\", link: \"/app/settings\", icon: <TableIcon /> },\r\n  { id: 3, label: \"User Feedback\", link: \"/app/usertrends\", icon: <FeedbackIcon /> },\r\n  { id: 4, type: \"divider\" },\r\n\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js",["204","205"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h3\" weight=\"medium\" className={classes.logotype}>\r\n          Harmony Admin Page\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js",["206"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js",["207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n    Formik, Form\r\n} from 'formik';\r\n// classNames\r\nimport useStyles from \"./styles\";\r\nimport * as Yup from 'yup';\r\n// components\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField'\r\nfunction CreateAdForm(...props) {\r\n    /**The form variables */\r\n    const defaultImage = \"http://beepeers.com/assets/images/commerces/default-image.jpg\";\r\n    const [foodImage, setFoodImage] = useState(defaultImage);\r\n    const [drinkImage, setDrinkImage] = useState(defaultImage);\r\n    const [result, setResult] = useState([]);\r\n    var classes = useStyles();\r\n\r\n    /**@var fileRef to create a reference to the file input to be able to clear it */\r\n    const foodFileRef = useRef();\r\n    const drinkFileRef = useRef();\r\n\r\n    /**@var tagSelector used to clear the multiple selectors on clear  */\r\n    const foodTagSelector = useRef();\r\n    const drinkTagSelector = useRef();\r\n    const mealTagSelector = useRef();\r\n    const locationsTagSelector = useRef();\r\n    const timePeriodTagSelector = useRef();\r\n\r\n    const foodImageError = false;\r\n    const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\n    const mockResponse = {\r\n        statusCode: 200,\r\n        locations: [\"Durban North\", \"Pretoria East\", \"Westville\"]\r\n    }\r\n    useEffect(() => {\r\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ BID: \"b4\" })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    setResult(result.Locations);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const handleClear = (values) => {\r\n        setFoodImage(defaultImage);\r\n        setDrinkImage(defaultImage);\r\n        foodFileRef.current.value = \"\";\r\n        drinkFileRef.current.value = \"\";\r\n\r\n        /**in a try catch because if you try clearing a list thats already empty it should do nothing */\r\n        try {\r\n            foodTagSelector.current.resetSelectedValues();\r\n            drinkTagSelector.current.resetSelectedValues();\r\n            mealTagSelector.current.resetSelectedValues();\r\n            locationsTagSelector.current.resetSelectedValues();\r\n            timePeriodTagSelector.current.resetSelectedValues();\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    /**Handles the image preview */\r\n    const FoodImageHandler = (e, values) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setFoodImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n        else {\r\n            alert(e.target.files[0].type + \" is not a supported file format.\");\r\n            setFoodImage(defaultImage);\r\n        }\r\n    }\r\n    const DrinkImageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setDrinkImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n        else {\r\n            alert(e.target.files[0].type + \" is not a supported file format.\");\r\n            setDrinkImage(defaultImage);\r\n        }\r\n    }\r\n    /** Submits the form to the database */\r\n    const handleSubmit = (vals) => {\r\n\r\n        // console.log(\"submitted handle \" + JSON.stringify(vals))\r\n        var request = {\r\n            FoodName: vals.FoodName,\r\n            DrinkName: vals.DrinkName,\r\n            BID: \"b4\",\r\n            FoodTags: vals.FoodTags,\r\n            DrinkTags: vals.DrinkTags,\r\n            PairingTags: vals.PairingTags,\r\n            Description: vals.PairingDescription,\r\n            Locations: vals.Locations,\r\n            TimePeriod: vals.TimePeriod,\r\n            FoodImage: foodImage.split(',')[1],\r\n            DrinkImage: drinkImage.split(',')[1],\r\n        }\r\n        // console.log(\"request to submit \" + JSON.stringify(request))\r\n        fetch('https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/createbusinesspairing', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(request)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n            .then(alert(\"Advert for \" + vals.FoodName + \" and \" + vals.DrinkName + \" was created successfully.\"))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addItemContainer}>\r\n            <Formik\r\n                enableReinitialize={true}\r\n                initialValues={{\r\n                    FoodName: \"\",\r\n                    FoodTags: \"\",\r\n                    DrinkName: \"\",\r\n                    DrinkTags: \"\",\r\n                    PairingDescription: \"\",\r\n                    PairingTags: \"\",\r\n                    Locations: \"\",\r\n                    TimePeriod: \"\",\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    FoodName: Yup.string().required('*'),\r\n                    DrinkName: Yup.string().required('*'),\r\n                    PairingDescription: Yup.string().required('*'),\r\n                })}\r\n                // onSubmit={(values) => handleSubmit(values)}\r\n                onSubmit={(values, { resetForm }) => {\r\n                    if (foodImage == defaultImage || drinkImage == defaultImage) {\r\n                        if (foodImage == defaultImage)\r\n                            alert(\"You havent uploaded an image for food.\");\r\n                        else\r\n                            alert(\"You havent uploaded an image for drink.\");\r\n                    }\r\n                    else {                    /**reset then handle submit */\r\n                        resetForm();\r\n                        handleClear();\r\n                        handleSubmit(values);\r\n                    }\r\n                }}\r\n            >\r\n                {/** The moderate pairings form to submit */}\r\n                {({ errors, touched, values, handleChange, resetForm }) => (\r\n                    <Form>\r\n                        <div className={classes.formElementsImageContainer}>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.FoodLabelButton}>Food</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Food\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={foodImage} className={classes.ImageContainer} /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Food\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={foodFileRef} onChange={(values) => FoodImageHandler(values)} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (foodFileRef.current.click())} className={classes.uploadFoodButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodName\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Name</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.FoodName && touched.FoodName) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    {/* <TextField id=\"outlined-basic\" error={errors.FoodName} variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} /> */}\r\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} />\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Tags</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.FoodTags == [] && touched.FoodTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={foodTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%',\r\n                                                },\r\n\r\n                                                multiselectContainer: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20,\r\n                                                },\r\n                                                inputField: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20,\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#FF6347',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            id=\"FoodTags\" name=\"FoodTags\" value={values.FoodTags}\r\n                                            options={['Spicy', 'Savoury', 'Salty', 'Sweet', 'Sour', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.DrinkLabelButton}>Drink</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Drink\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={drinkImage} className={classes.ImageContainer} /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Drink\" name=\"ImageclassNameDrink\" accept=\"image/*\" ref={drinkFileRef} onChange={DrinkImageHandler} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (drinkFileRef.current.click())} className={classes.uploadDrinkButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"Drink Name\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Name</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.DrinkName && touched.DrinkName) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"DrinkName\" className={classes.individualTextField} onChange={handleChange} value={values.DrinkName} />\r\n\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"DrinkTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Tags</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.DrinkTags == [] && touched.DrinkTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={drinkTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    'width': '100%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#1FBFBA',\r\n                                                    'fontWeight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            id=\"DrinkTags\" name=\"DrinkTags\" onChange={handleChange} value={values.DrinkTags}\r\n                                            options={['Alcoholic', 'Non-Alcoholic', 'Fizzy', 'Sweet', 'Sour', 'Bitter', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={classes.PreviewContainerPairing}>\r\n                            <div className={classes.MealLabelButton}>Pairing</div>\r\n\r\n                            <div className={classes.MealContainer}>\r\n                                <div className={classes.formElementsPairing}>\r\n                                    <label htmlFor=\"PairingDescription\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Description</p> </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.PairingDescription && touched.PairingDescription) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" multiline={true} rows={4} variant=\"outlined\" name=\"PairingDescription\" className={classes.individualTextField} onChange={handleChange} value={values.PairingDescription} />\r\n                                </div>\r\n                                <br />\r\n                                <div className={classes.formElementsPairingTag}>\r\n                                    <label htmlFor=\"PairingTags\" className={classes.tagName}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Tag</p> </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.PairingTags == [] && touched.PairingTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={1}\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={mealTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    // 'border': '1px solid grey',\r\n                                                    'width': '100%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#C41ED4',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            id=\"PairingTags\" name=\"PairingTags\" onChange={handleChange} value={values.PairingTags}\r\n                                            options={['Breakfast', 'Lunch', 'Supper', 'Snack', 'Vegetarian', 'Dairy-Free', 'Nut-Free']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.clear}></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.PreviewContainerPairing}>\r\n                            <div className={classes.configurationLabel}>Configuration</div>\r\n\r\n                            <div className={classes.MealContainer}>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <div className={classes.configLabel}>\r\n\r\n                                        <label htmlFor=\"Locations\" className={classes.tagName}>\r\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Locations</p> </div>\r\n                                            <div className={classes.floatLeft}>\r\n                                                {(values.Locations == [] && touched.Locations) ? (\r\n                                                    <div className={classes.errorStar}>*</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={locationsTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '90%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    // 'border': '1px solid grey',\r\n                                                    'width': '90%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#4CD41E',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.Locations = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.Locations = selectedList)}\r\n                                            id=\"Locations\" name=\"Locations\" onChange={handleChange} value={values.Locations}\r\n                                            options={result}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <div className={classes.configLabel}>\r\n                                        <label htmlFor=\"TimePeriod\" className={classes.tagName}>\r\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Time Period</p> </div>\r\n                                            <div className={classes.floatLeft}>\r\n                                                {(values.TimePeriod == [] && touched.TimePeriod) ? (\r\n                                                    <div className={classes.errorStar}>*</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={1}\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={timePeriodTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '90%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    'width': '90%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#4CD41E',\r\n                                                    'fontWeight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.TimePeriod = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.TimePeriod = selectedList)}\r\n                                            id=\"TimePeriod\" name=\"TimePeriod\" onChange={handleChange} value={values.TimePeriod}\r\n                                            options={['One Day', 'One Week', 'One Month', 'Three Months', 'Six Months', 'One Year']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.clear}></div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.ButtonContainer}>\r\n                            <Button onClick={(values) => (resetForm(), handleClear())} className={classes.clearButton} variant=\"contained\">Clear</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.addButton} onClick={() => console.log(\"clicked submit\")}>\r\n                                Create Advert\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CreateAdForm;\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\LocationForm.js",["220","221","222"],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":5,"column":3,"nodeType":"229","messageId":"230","endLine":5,"endColumn":11},{"ruleId":"227","severity":1,"message":"231","line":9,"column":14,"nodeType":"229","messageId":"230","endLine":9,"endColumn":24},{"ruleId":"227","severity":1,"message":"232","line":9,"column":26,"nodeType":"229","messageId":"230","endLine":9,"endColumn":30},{"ruleId":"227","severity":1,"message":"233","line":10,"column":8,"nodeType":"229","messageId":"230","endLine":10,"endColumn":12},{"ruleId":"227","severity":1,"message":"234","line":4,"column":8,"nodeType":"229","messageId":"230","endLine":4,"endColumn":17},{"ruleId":"227","severity":1,"message":"235","line":88,"column":9,"nodeType":"229","messageId":"230","endLine":88,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":130,"column":51,"nodeType":"238","endLine":130,"endColumn":104},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":46,"column":8,"nodeType":"242","endLine":46,"endColumn":10,"suggestions":"243"},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"244","line":10,"column":8,"nodeType":"229","messageId":"230","endLine":10,"endColumn":14},{"ruleId":"227","severity":1,"message":"245","line":12,"column":10,"nodeType":"229","messageId":"230","endLine":12,"endColumn":20},{"ruleId":"227","severity":1,"message":"246","line":16,"column":7,"nodeType":"229","messageId":"230","endLine":16,"endColumn":14},{"ruleId":"227","severity":1,"message":"247","line":17,"column":7,"nodeType":"229","messageId":"230","endLine":17,"endColumn":12},{"ruleId":"227","severity":1,"message":"244","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":14},{"ruleId":"227","severity":1,"message":"245","line":10,"column":10,"nodeType":"229","messageId":"230","endLine":10,"endColumn":20},{"ruleId":"227","severity":1,"message":"246","line":13,"column":7,"nodeType":"229","messageId":"230","endLine":13,"endColumn":14},{"ruleId":"227","severity":1,"message":"248","line":12,"column":9,"nodeType":"229","messageId":"230","endLine":12,"endColumn":21},{"ruleId":"240","severity":1,"message":"249","line":26,"column":6,"nodeType":"242","endLine":26,"endColumn":8,"suggestions":"250"},{"ruleId":"227","severity":1,"message":"251","line":5,"column":24,"nodeType":"229","messageId":"230","endLine":5,"endColumn":41},{"ruleId":"227","severity":1,"message":"252","line":6,"column":17,"nodeType":"229","messageId":"230","endLine":6,"endColumn":31},{"ruleId":"227","severity":1,"message":"253","line":7,"column":17,"nodeType":"229","messageId":"230","endLine":7,"endColumn":31},{"ruleId":"227","severity":1,"message":"254","line":9,"column":21,"nodeType":"229","messageId":"230","endLine":9,"endColumn":32},{"ruleId":"227","severity":1,"message":"255","line":10,"column":19,"nodeType":"229","messageId":"230","endLine":10,"endColumn":30},{"ruleId":"227","severity":1,"message":"256","line":11,"column":18,"nodeType":"229","messageId":"230","endLine":11,"endColumn":25},{"ruleId":"227","severity":1,"message":"257","line":25,"column":8,"nodeType":"229","messageId":"230","endLine":25,"endColumn":11},{"ruleId":"227","severity":1,"message":"232","line":10,"column":3,"nodeType":"229","messageId":"230","endLine":10,"endColumn":7},{"ruleId":"227","severity":1,"message":"258","line":27,"column":29,"nodeType":"229","messageId":"230","endLine":27,"endColumn":35},{"ruleId":"227","severity":1,"message":"259","line":11,"column":3,"nodeType":"229","messageId":"230","endLine":11,"endColumn":16},{"ruleId":"227","severity":1,"message":"260","line":31,"column":11,"nodeType":"229","messageId":"230","endLine":31,"endColumn":25},{"ruleId":"227","severity":1,"message":"261","line":34,"column":11,"nodeType":"229","messageId":"230","endLine":34,"endColumn":23},{"ruleId":"262","severity":1,"message":"263","line":160,"column":35,"nodeType":"264","messageId":"265","endLine":160,"endColumn":37},{"ruleId":"262","severity":1,"message":"263","line":160,"column":65,"nodeType":"264","messageId":"265","endLine":160,"endColumn":67},{"ruleId":"262","severity":1,"message":"263","line":161,"column":39,"nodeType":"264","messageId":"265","endLine":161,"endColumn":41},{"ruleId":"236","severity":1,"message":"237","line":180,"column":71,"nodeType":"238","endLine":180,"endColumn":129},{"ruleId":"262","severity":1,"message":"263","line":204,"column":63,"nodeType":"264","messageId":"265","endLine":204,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":248,"column":71,"nodeType":"238","endLine":248,"endColumn":130},{"ruleId":"262","severity":1,"message":"263","line":273,"column":64,"nodeType":"264","messageId":"265","endLine":273,"endColumn":66},{"ruleId":"262","severity":1,"message":"263","line":330,"column":66,"nodeType":"264","messageId":"265","endLine":330,"endColumn":68},{"ruleId":"262","severity":1,"message":"263","line":380,"column":68,"nodeType":"264","messageId":"265","endLine":380,"endColumn":70},{"ruleId":"262","severity":1,"message":"263","line":420,"column":69,"nodeType":"264","messageId":"265","endLine":420,"endColumn":71},{"ruleId":"266","severity":1,"message":"267","line":460,"column":70,"nodeType":"268","messageId":"269","endLine":460,"endColumn":71},{"ruleId":"227","severity":1,"message":"239","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"270","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"271","line":1,"column":38,"nodeType":"229","messageId":"230","endLine":1,"endColumn":44},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'TextField' is defined but never used.","'handleLocationUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'amount'. Either include it or remove the dependency array.","ArrayExpression",["274"],"'Widget' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","'isSubscribed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'signal'. Either include it or remove the dependency array.",["275"],"'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Button' is defined but never used.","'OutlinedInput' is defined but never used.","'foodImageError' is assigned a value but never used.","'mockResponse' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [amount]",{"range":"280","text":"281"},"Update the dependencies array to be: [signal]",{"range":"282","text":"283"},[1861,1863],"[amount]",[772,774],"[signal]"]