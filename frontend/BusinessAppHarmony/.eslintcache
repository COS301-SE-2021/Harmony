[{"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js":"1","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js":"2","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js":"3","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js":"4","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js":"5","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js":"6","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js":"8","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js":"9","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js":"10","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js":"11","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js":"12","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js":"13","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js":"14","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js":"15","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js":"16","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js":"17","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js":"18","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js":"19","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\settings\\Settings.js":"20","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js":"21","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js":"22","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js":"23","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js":"24","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js":"25","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js":"26","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js":"27","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"28","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js":"29","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js":"30","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js":"31","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"32","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js":"33","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js":"34","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\Notification.js":"35","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"36","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"37","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\styles.js":"38","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\styles.js":"39","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js":"40","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Statement.js":"41"},{"size":896,"mtime":1630878778549,"results":"42","hashOfConfig":"43"},{"size":5083,"mtime":1630878778593,"results":"44","hashOfConfig":"43"},{"size":1787,"mtime":1630878778529,"results":"45","hashOfConfig":"43"},{"size":1444,"mtime":1630878778547,"results":"46","hashOfConfig":"43"},{"size":2053,"mtime":1630878778548,"results":"47","hashOfConfig":"43"},{"size":534,"mtime":1630878778596,"results":"48","hashOfConfig":"43"},{"size":1758,"mtime":1630878778533,"results":"49","hashOfConfig":"43"},{"size":1626,"mtime":1630878778557,"results":"50","hashOfConfig":"43"},{"size":8837,"mtime":1630878778559,"results":"51","hashOfConfig":"43"},{"size":3127,"mtime":1630878778595,"results":"52","hashOfConfig":"43"},{"size":1533,"mtime":1630878778591,"results":"53","hashOfConfig":"43"},{"size":4319,"mtime":1631545143646,"results":"54","hashOfConfig":"43"},{"size":1338,"mtime":1631545092772,"results":"55","hashOfConfig":"43"},{"size":3000,"mtime":1630878778556,"results":"56","hashOfConfig":"43"},{"size":3281,"mtime":1630878778586,"results":"57","hashOfConfig":"43"},{"size":1395,"mtime":1630878778558,"results":"58","hashOfConfig":"43"},{"size":2581,"mtime":1630878778544,"results":"59","hashOfConfig":"43"},{"size":447,"mtime":1630878778536,"results":"60","hashOfConfig":"43"},{"size":710,"mtime":1630878778534,"results":"61","hashOfConfig":"43"},{"size":1818,"mtime":1630878778589,"results":"62","hashOfConfig":"43"},{"size":736,"mtime":1630964142819,"results":"63","hashOfConfig":"43"},{"size":13830,"mtime":1631546788789,"results":"64","hashOfConfig":"43"},{"size":10236,"mtime":1630878778530,"results":"65","hashOfConfig":"43"},{"size":3467,"mtime":1630878778539,"results":"66","hashOfConfig":"43"},{"size":482,"mtime":1630878778537,"results":"67","hashOfConfig":"43"},{"size":1015,"mtime":1630878778545,"results":"68","hashOfConfig":"43"},{"size":5900,"mtime":1631313715710,"results":"69","hashOfConfig":"43"},{"size":4160,"mtime":1630878778553,"results":"70","hashOfConfig":"43"},{"size":3971,"mtime":1630878778546,"results":"71","hashOfConfig":"43"},{"size":1363,"mtime":1630878778542,"results":"72","hashOfConfig":"43"},{"size":902,"mtime":1630878778540,"results":"73","hashOfConfig":"43"},{"size":4589,"mtime":1630878778540,"results":"74","hashOfConfig":"43"},{"size":4043,"mtime":1630878778532,"results":"75","hashOfConfig":"43"},{"size":620,"mtime":1630878778543,"results":"76","hashOfConfig":"43"},{"size":3413,"mtime":1630878778535,"results":"77","hashOfConfig":"43"},{"size":1075,"mtime":1630878778554,"results":"78","hashOfConfig":"43"},{"size":1474,"mtime":1630878778541,"results":"79","hashOfConfig":"43"},{"size":1040,"mtime":1630878778535,"results":"80","hashOfConfig":"43"},{"size":291,"mtime":1630878778544,"results":"81","hashOfConfig":"43"},{"size":20029,"mtime":1631313569088,"results":"82","hashOfConfig":"43"},{"size":2518,"mtime":1631546739726,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1nxypf6",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js",[],["174","175"],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js",["176","177","178","179"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport ModerateItems from \"../../pages/createads\";\r\nimport Tables from \"../../pages/settings\";\r\nimport Feedback from \"../../pages/usertrends\";\r\n\r\n\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/createads\" component={ModerateItems} />\r\n              <Route path=\"/app/settings\" component={Tables} />\r\n              <Route path=\"/app/usertrends\" component={Feedback} />\r\n\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js",["180","181","182","183"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst datatableData = [\r\n  [\"Churros\", \"Correct\"],\r\n  [\"Chocolate Cake\", \"Incorrect\"],\r\n  [\"Samoosa\", \"Incorrect\"],\r\n  [\"Fish and Chips\", \"Correct\"],\r\n  [\"Churros\", \"Correct\"],\r\n  [\"Chocolate Cake\", \"Incorrect\"],\r\n  [\"Samoosa\", \"Incorrect\"],\r\n  [\"Fish and Chips\", \"Correct\"],\r\n  [\"Churros\", \"Correct\"],\r\n  [\"Chocolate Cake\", \"Incorrect\"],\r\n  [\"Samoosa\", \"Incorrect\"],\r\n  [\"Fish and Chips\", \"Correct\"],\r\n  [\"Churros\", \"Correct\"],\r\n  [\"Chocolate Cake\", \"Incorrect\"],\r\n  [\"Samoosa\", \"Incorrect\"],\r\n  [\"Fish and Chips\", \"Correct\"],\r\n];\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <PageTitle title=\"User Feedback\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Tags\"\r\n            data={datatableData}\r\n            columns={[\"Item Name\", \"Type\", \"Image\", \"Image Tag\", \"Upload Image\"]}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\settings\\Settings.js",["184","185"],"import PageTitle from \"../../components/PageTitle\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from 'axios';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function DataTable() {\r\n  const [posts, setPost] = useState([]);\r\n  let signal = axios.CancelToken.source();\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    axios.get(`https://jsonplaceholder.typicode.com/posts`, {\r\n      cancelToken: signal.token,\r\n    })\r\n        .then(res => {\r\n          const posts = res.data;\r\n          setPost(posts);\r\n        }).catch(err => {\r\n      console.log(err);\r\n    });\r\n    return function cleanup() {\r\n      isSubscribed = false;\r\n      signal.cancel('Api is being canceled');\r\n    }\r\n  }, []);\r\n\r\n  const columns = [\"userId\", \"id\", \"title\", \"body\"];\r\n\r\n  const options = {\r\n    filter: true,\r\n    filterType: \"dropdown\",\r\n    print: true,\r\n    viewColumns: true,\r\n    selectableRows: 'none',\r\n    onRowClick: (rowData) => {\r\n      console.log(\"RowClicked->\", rowData);\r\n    },\r\n    responsive: \"stacked\",\r\n    fixedHeaderOptions: {\r\n      xAxis: false,\r\n      yAxis: true,\r\n    },\r\n  };\r\n\r\n\r\n  return (\r\n      <>\r\n        <PageTitle title=\"Train AI\"/>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <MUIDataTable\r\n                title={\"Posts\"}\r\n                data={posts}\r\n                columns={columns}\r\n                options={options}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <MUIDataTable\r\n                title={\"Posts\"}\r\n                data={posts}\r\n                columns={columns}\r\n                options={options}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js",["186","187","188"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport CreateAdForm from \"./CreateAdForm\";\r\nexport default function TypographyPage() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Create Pairing Advert\" />\r\n      <Grid container spacing={1}>\r\n        {/* <Grid item xs={12} md={12}> */}\r\n        {/* <Widget title=\"\" disableWidgetMenu>\r\n           \r\n          </Widget> */}\r\n        <CreateAdForm />\r\n        {/* </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js",["211","212"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h3\" weight=\"medium\" className={classes.logotype}>\r\n          Harmony Admin Page\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js",["213","214","215","216","217","218","219"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Moderate Pairing\",\r\n    link: \"/app/createads\",\r\n    icon: <QueueIcon />,\r\n  },\r\n  { id: 2, label: \"Train AI\", link: \"/app/settings\", icon: <TableIcon /> },\r\n  { id: 3, label: \"User Feedback\", link: \"/app/usertrends\", icon: <FeedbackIcon /> },\r\n  { id: 4, type: \"divider\" },\r\n\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Notification\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js",["220","221","222","223","224","225","226","227","228","229"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n    Formik, Form, useFormik, Field\r\n} from 'formik';\r\n// classNames\r\nimport useStyles from \"./styles\";\r\nimport * as Yup from 'yup';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Input } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField'\r\nfunction CreateAdForm(...props) {\r\n    /**The form variables */\r\n    const [foodImage, setFoodImage] = useState(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n    const [drinkImage, setDrinkImage] = useState(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n    var classes = useStyles();\r\n\r\n    /**@var fileRef to create a reference to the file input to be able to clear it */\r\n    const foodFileRef = useRef();\r\n    const drinkFileRef = useRef();\r\n\r\n    /**@var tagSelector used to clear the multiple selectors on clear  */\r\n    const foodTagSelector = useRef();\r\n    const drinkTagSelector = useRef();\r\n    const mealTagSelector = useRef();\r\n    const audienceTagSelector = useRef();\r\n\r\n\r\n\r\n    const handleClear = (values) => {\r\n        setFoodImage(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n        setDrinkImage(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n        foodFileRef.current.value = \"\";\r\n        drinkFileRef.current.value = \"\";\r\n        foodTagSelector.current.resetSelectedValues();\r\n        drinkTagSelector.current.resetSelectedValues();\r\n        mealTagSelector.current.resetSelectedValues();\r\n        audienceTagSelector.current.resetSelectedValues();\r\n        foodTagSelector.current.selectedList = \"\";\r\n    }\r\n\r\n    /**Handles the image preview */\r\n    const FoodImageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setFoodImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    const DrinkImageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setDrinkImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    /** Submits the form to the database */\r\n    const handleSubmit = (vals) => {\r\n        // console.log(\"submitted handle \" + JSON.stringify(vals))\r\n        // var request = {\r\n        //     \"ItemName\": vals.ItemName,\r\n        //     \"ItemDescription\": vals.ItemDescription,\r\n        //     \"ItemTags\": vals.ItemTags,\r\n        //     \"FoodOrDrink\": FoodOrDrink,\r\n        //     \"Image\": btoa(img)\r\n        // }\r\n        // // console.log(\"request to submit \" + JSON.stringify(request))\r\n        // fetch('https://w3lfp6r6f7.execute-api.eu-west-1.amazonaws.com/dev/additem', request)\r\n        //     .then(response => response.json())\r\n        //     .then(data => console.log(data))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addItemContainer}>\r\n            <Formik\r\n                enableReinitialize={true}\r\n                initialValues={{\r\n                    ItemName: \"\",\r\n                    ItemDescription: \"\",\r\n                    ItemTags: \"\",\r\n                    FoodName: \"\",\r\n                    FoodTags: \"\",\r\n                    DrinkName: \"\",\r\n                    DrinkTags: \"\",\r\n                    PairingDescription: \"\",\r\n                    PairingTags: \"\",\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    ItemName: Yup.string().required('*'),\r\n                    ItemDescription: Yup.string().required('*'),\r\n                    ItemTags: Yup.string().required('*'),\r\n\r\n                    FoodName: Yup.string().required(true),\r\n                    DrinkName: Yup.string().required(true),\r\n                    PairingDescription: Yup.string().required(true),\r\n                })}\r\n                // onSubmit={(values) => handleSubmit(values)}\r\n                onSubmit={(values, { resetForm }) => {\r\n                    /**reset then handle submit */\r\n                    resetForm();\r\n                    handleSubmit(values);\r\n                }}\r\n            >\r\n                {/** The moderate pairings form to submit */}\r\n                {({ errors, touched, values, handleChange, resetForm }) => (\r\n                    <Form>\r\n                        <div className={classes.formElementsImageContainer}>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.FoodLabelButton}>Food</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Food\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={foodImage} className={classes.ImageContainer} /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Food\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={foodFileRef} onChange={FoodImageHandler} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (foodFileRef.current.click())} className={classes.uploadFoodButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodName\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Name</p>\r\n                                        </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" error={errors.FoodName} variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} />\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Tags</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.FoodTags && touched.FoodTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={foodTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                multiselectContainer: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20\r\n                                                },\r\n                                                inputField: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20\r\n                                                },\r\n                                                chips: {\r\n                                                    'background-color': '#FF6347',\r\n                                                    'font-weight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            id=\"FoodTags\" name=\"FoodTags\" onChange={handleChange} value={values.FoodTags}\r\n                                            options={['Spicy', 'Savoury', 'Salty', 'Sweet', 'Sour', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.DrinkLabelButton}>Drink</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Drink\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={drinkImage} className={classes.ImageContainer} /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Drink\" name=\"ImageclassNameDrink\" accept=\"image/*\" ref={drinkFileRef} onChange={DrinkImageHandler} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (drinkFileRef.current.click())} className={classes.uploadDrinkButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"Drink Name\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Name</p>\r\n                                        </div>\r\n\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" error={errors.DrinkName} variant=\"outlined\" name=\"DrinkName\" className={classes.individualTextField} onChange={handleChange} value={values.DrinkName} />\r\n\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"DrinkTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Tags</p>\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={drinkTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                searchBox: {\r\n                                                    'width': '100%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'background-color': '#1FBFBA',\r\n                                                    'font-weight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            id=\"DrinkTags\" name=\"DrinkTags\" onChange={handleChange} value={values.DrinkTags}\r\n                                            options={['Alcoholic', 'Non-Alcoholic', 'Fizzy', 'Sweet', 'Sour', 'Bitter', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={classes.PreviewContainerPairing}>\r\n                            <div className={classes.MealLabelButton}>Pairing</div>\r\n\r\n                            <div className={classes.MealContainer}>\r\n                                <div className={classes.formElementsPairing}>\r\n                                    <label htmlFor=\"PairingDescription\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Description</p> </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" multiline={true} error={errors.PairingDescription} variant=\"outlined\" name=\"PairingDescription\" className={classes.individualTextField} onChange={handleChange} value={values.PairingDescription} />\r\n                                </div>\r\n                                <br />\r\n                                <div className={classes.formElementsPairingTag}>\r\n                                    <label htmlFor=\"ItemTags\" className={classes.tagName}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Tag</p> </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {errors.ItemTags && touched.ItemTags ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}</div>\r\n                                    </label>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={1}\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={mealTagSelector}\r\n                                            style={{\r\n                                                searchBox: {\r\n                                                    // 'border': '1px solid grey',\r\n                                                    'width': '80%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'background-color': '#C41ED4',\r\n                                                    'font-weight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            id=\"PairingTags\" name=\"PairingTags\" onChange={handleChange} value={values.PairingTags}\r\n                                            options={['Breakfast', 'Lunch', 'Supper', 'Snack', 'Vegetarian', 'Dairy-Free', 'Nut-Free']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.clear}></div>\r\n                                {/* <div className={classes.formElements}>\r\n                                    <label htmlFor=\"ItemTags\" className={classes.tagName}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Audience</p> </div><div className={classes.floatLeft}>\r\n                                            {errors.ItemTags && touched.ItemTags ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}</div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={2}\r\n                                            showArrow\r\n                                            ref={audienceTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                searchBox: {\r\n                                                    'width': '80%',\r\n                                                },\r\n                                                chips: {\r\n                                                    'background-color': '#45CC00',\r\n                                                    'font-weight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            id=\"PairingTags\" name=\"PairingTags\" onChange={handleChange} value={values.PairingTags}\r\n                                            options={['Sweet Tooth', 'Meat Lovers', 'Alcohol', 'Children', 'Vegetarian', 'Seafood']}\r\n                                        />\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.ButtonContainer}>\r\n                            <Button onClick={(values) => (resetForm(), handleClear())} className={classes.clearButton} variant=\"contained\">Clear</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.addButton} onClick={() => console.log(\"clicked submit\")}>\r\n                                Create Advert\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CreateAdForm;\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Statement.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":5,"column":3,"nodeType":"236","messageId":"237","endLine":5,"endColumn":11},{"ruleId":"234","severity":1,"message":"238","line":9,"column":14,"nodeType":"236","messageId":"237","endLine":9,"endColumn":24},{"ruleId":"234","severity":1,"message":"239","line":9,"column":26,"nodeType":"236","messageId":"237","endLine":9,"endColumn":30},{"ruleId":"234","severity":1,"message":"240","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":12},{"ruleId":"234","severity":1,"message":"241","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":14},{"ruleId":"234","severity":1,"message":"242","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":13},{"ruleId":"234","severity":1,"message":"243","line":12,"column":8,"nodeType":"236","messageId":"237","endLine":12,"endColumn":12},{"ruleId":"234","severity":1,"message":"244","line":41,"column":9,"nodeType":"236","messageId":"237","endLine":41,"endColumn":16},{"ruleId":"234","severity":1,"message":"245","line":12,"column":9,"nodeType":"236","messageId":"237","endLine":12,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":26,"column":6,"nodeType":"248","endLine":26,"endColumn":8,"suggestions":"249"},{"ruleId":"234","severity":1,"message":"241","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":14},{"ruleId":"234","severity":1,"message":"250","line":10,"column":10,"nodeType":"236","messageId":"237","endLine":10,"endColumn":20},{"ruleId":"234","severity":1,"message":"244","line":13,"column":7,"nodeType":"236","messageId":"237","endLine":13,"endColumn":14},{"ruleId":"234","severity":1,"message":"251","line":4,"column":3,"nodeType":"236","messageId":"237","endLine":4,"endColumn":17},{"ruleId":"234","severity":1,"message":"252","line":5,"column":3,"nodeType":"236","messageId":"237","endLine":5,"endColumn":9},{"ruleId":"234","severity":1,"message":"253","line":6,"column":3,"nodeType":"236","messageId":"237","endLine":6,"endColumn":16},{"ruleId":"234","severity":1,"message":"254","line":7,"column":3,"nodeType":"236","messageId":"237","endLine":7,"endColumn":11},{"ruleId":"234","severity":1,"message":"255","line":8,"column":3,"nodeType":"236","messageId":"237","endLine":8,"endColumn":9},{"ruleId":"234","severity":1,"message":"256","line":13,"column":3,"nodeType":"236","messageId":"237","endLine":13,"endColumn":16},{"ruleId":"234","severity":1,"message":"257","line":14,"column":3,"nodeType":"236","messageId":"237","endLine":14,"endColumn":12},{"ruleId":"234","severity":1,"message":"258","line":15,"column":3,"nodeType":"236","messageId":"237","endLine":15,"endColumn":12},{"ruleId":"234","severity":1,"message":"259","line":16,"column":3,"nodeType":"236","messageId":"237","endLine":16,"endColumn":7},{"ruleId":"234","severity":1,"message":"260","line":17,"column":3,"nodeType":"236","messageId":"237","endLine":17,"endColumn":7},{"ruleId":"234","severity":1,"message":"261","line":18,"column":3,"nodeType":"236","messageId":"237","endLine":18,"endColumn":11},{"ruleId":"234","severity":1,"message":"262","line":19,"column":3,"nodeType":"236","messageId":"237","endLine":19,"endColumn":6},{"ruleId":"234","severity":1,"message":"263","line":20,"column":3,"nodeType":"236","messageId":"237","endLine":20,"endColumn":7},{"ruleId":"234","severity":1,"message":"264","line":21,"column":3,"nodeType":"236","messageId":"237","endLine":21,"endColumn":8},{"ruleId":"234","severity":1,"message":"265","line":22,"column":3,"nodeType":"236","messageId":"237","endLine":22,"endColumn":8},{"ruleId":"234","severity":1,"message":"266","line":32,"column":8,"nodeType":"236","messageId":"237","endLine":32,"endColumn":11},{"ruleId":"234","severity":1,"message":"267","line":34,"column":8,"nodeType":"236","messageId":"237","endLine":34,"endColumn":15},{"ruleId":"234","severity":1,"message":"268","line":36,"column":7,"nodeType":"236","messageId":"237","endLine":36,"endColumn":20},{"ruleId":"234","severity":1,"message":"269","line":40,"column":7,"nodeType":"236","messageId":"237","endLine":40,"endColumn":12},{"ruleId":"234","severity":1,"message":"270","line":43,"column":8,"nodeType":"236","messageId":"237","endLine":43,"endColumn":22},{"ruleId":"234","severity":1,"message":"271","line":43,"column":24,"nodeType":"236","messageId":"237","endLine":43,"endColumn":41},{"ruleId":"234","severity":1,"message":"272","line":58,"column":9,"nodeType":"236","messageId":"237","endLine":58,"endColumn":13},{"ruleId":"234","severity":1,"message":"239","line":10,"column":3,"nodeType":"236","messageId":"237","endLine":10,"endColumn":7},{"ruleId":"234","severity":1,"message":"255","line":27,"column":29,"nodeType":"236","messageId":"237","endLine":27,"endColumn":35},{"ruleId":"234","severity":1,"message":"273","line":5,"column":24,"nodeType":"236","messageId":"237","endLine":5,"endColumn":41},{"ruleId":"234","severity":1,"message":"274","line":6,"column":17,"nodeType":"236","messageId":"237","endLine":6,"endColumn":31},{"ruleId":"234","severity":1,"message":"275","line":7,"column":17,"nodeType":"236","messageId":"237","endLine":7,"endColumn":31},{"ruleId":"234","severity":1,"message":"276","line":9,"column":21,"nodeType":"236","messageId":"237","endLine":9,"endColumn":32},{"ruleId":"234","severity":1,"message":"277","line":10,"column":19,"nodeType":"236","messageId":"237","endLine":10,"endColumn":30},{"ruleId":"234","severity":1,"message":"278","line":11,"column":18,"nodeType":"236","messageId":"237","endLine":11,"endColumn":25},{"ruleId":"234","severity":1,"message":"266","line":25,"column":8,"nodeType":"236","messageId":"237","endLine":25,"endColumn":11},{"ruleId":"234","severity":1,"message":"279","line":1,"column":27,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"280","line":3,"column":19,"nodeType":"236","messageId":"237","endLine":3,"endColumn":28},{"ruleId":"234","severity":1,"message":"281","line":3,"column":30,"nodeType":"236","messageId":"237","endLine":3,"endColumn":35},{"ruleId":"234","severity":1,"message":"282","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":17},{"ruleId":"234","severity":1,"message":"241","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":14},{"ruleId":"234","severity":1,"message":"250","line":11,"column":10,"nodeType":"236","messageId":"237","endLine":11,"endColumn":20},{"ruleId":"234","severity":1,"message":"283","line":14,"column":10,"nodeType":"236","messageId":"237","endLine":14,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":121,"column":71,"nodeType":"286","endLine":121,"endColumn":129},{"ruleId":"284","severity":1,"message":"285","line":179,"column":71,"nodeType":"286","endLine":179,"endColumn":130},{"ruleId":"287","severity":1,"message":"288","line":313,"column":70,"nodeType":"289","messageId":"290","endLine":313,"endColumn":71},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'classes' is assigned a value but never used.","'isSubscribed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signal'. Either include it or remove the dependency array.","ArrayExpression",["293"],"'Typography' is defined but never used.","'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'Button' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'Dot' is defined but never used.","'BigStat' is defined but never used.","'mainChartData' is assigned a value but never used.","'theme' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'rows' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'useEffect' is defined but never used.","'useFormik' is defined but never used.","'Field' is defined but never used.","'PageTitle' is defined but never used.","'Input' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},"Update the dependencies array to be: [signal]",{"range":"296","text":"297"},[772,774],"[signal]"]