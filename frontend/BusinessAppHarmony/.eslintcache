[{"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js":"1","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js":"2","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js":"3","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js":"4","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js":"5","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js":"6","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js":"8","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\SignUp.js":"9","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\ResetPass.js":"10","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js":"11","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js":"12","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js":"13","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\styles.js":"14","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\Form.js":"15","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\styles.js":"16","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\Form.js":"17","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js":"18","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js":"19","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js":"20","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js":"21","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js":"22","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\VeriCodeForm.js":"24","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js":"25","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\AccountForm.js":"26","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\AccountForm.js":"27","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\NewPassForm.js":"28","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\CodeForm.js":"29","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js":"30","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js":"31","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js":"32","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js":"33","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\styles.js":"34","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\trendingStats.js":"35","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js":"36","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\LocationForm.js":"37","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"38","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js":"39","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js":"40","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js":"41","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\PayPal.js":"42","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js":"43","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js":"44","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js":"45","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"46","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js":"47","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js":"48","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\aws-exports.js":"49","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\adverts\\adverts.js":"50","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\adverts\\styles.js":"51","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\profile\\profile.js":"52"},{"size":896,"mtime":1632058838649,"results":"53","hashOfConfig":"54"},{"size":5083,"mtime":1632058838895,"results":"55","hashOfConfig":"54"},{"size":1444,"mtime":1632058838649,"results":"56","hashOfConfig":"54"},{"size":3165,"mtime":1633070843625,"results":"57","hashOfConfig":"54"},{"size":2639,"mtime":1633069199215,"results":"58","hashOfConfig":"54"},{"size":534,"mtime":1632058838896,"results":"59","hashOfConfig":"54"},{"size":1859,"mtime":1633360514544,"results":"60","hashOfConfig":"54"},{"size":1626,"mtime":1632058838789,"results":"61","hashOfConfig":"54"},{"size":897,"mtime":1633069199309,"results":"62","hashOfConfig":"54"},{"size":881,"mtime":1633069199285,"results":"63","hashOfConfig":"54"},{"size":5424,"mtime":1633069199279,"results":"64","hashOfConfig":"54"},{"size":3127,"mtime":1633069199327,"results":"65","hashOfConfig":"54"},{"size":3281,"mtime":1632058838789,"results":"66","hashOfConfig":"54"},{"size":3281,"mtime":1633069199288,"results":"67","hashOfConfig":"54"},{"size":4764,"mtime":1633069199283,"results":"68","hashOfConfig":"54"},{"size":3281,"mtime":1633069199314,"results":"69","hashOfConfig":"54"},{"size":4473,"mtime":1633069199309,"results":"70","hashOfConfig":"54"},{"size":1395,"mtime":1632058838789,"results":"71","hashOfConfig":"54"},{"size":710,"mtime":1632058838639,"results":"72","hashOfConfig":"54"},{"size":1648,"mtime":1633358831930,"results":"73","hashOfConfig":"54"},{"size":678,"mtime":1633354320739,"results":"74","hashOfConfig":"54"},{"size":5860,"mtime":1633360741260,"results":"75","hashOfConfig":"54"},{"size":3589,"mtime":1633360514565,"results":"76","hashOfConfig":"54"},{"size":838,"mtime":1633069199311,"results":"77","hashOfConfig":"54"},{"size":3947,"mtime":1633069199213,"results":"78","hashOfConfig":"54"},{"size":1445,"mtime":1633360514729,"results":"79","hashOfConfig":"54"},{"size":811,"mtime":1633069199281,"results":"80","hashOfConfig":"54"},{"size":1138,"mtime":1633069199284,"results":"81","hashOfConfig":"54"},{"size":830,"mtime":1633069199282,"results":"82","hashOfConfig":"54"},{"size":6334,"mtime":1633349640783,"results":"83","hashOfConfig":"54"},{"size":30944,"mtime":1633354338432,"results":"84","hashOfConfig":"54"},{"size":3463,"mtime":1632086643287,"results":"85","hashOfConfig":"54"},{"size":5277,"mtime":1632058838789,"results":"86","hashOfConfig":"54"},{"size":6842,"mtime":1633202719663,"results":"87","hashOfConfig":"54"},{"size":4375,"mtime":1632081021695,"results":"88","hashOfConfig":"54"},{"size":1363,"mtime":1632058838639,"results":"89","hashOfConfig":"54"},{"size":7296,"mtime":1633340607817,"results":"90","hashOfConfig":"54"},{"size":4589,"mtime":1632058838639,"results":"91","hashOfConfig":"54"},{"size":902,"mtime":1632058838639,"results":"92","hashOfConfig":"54"},{"size":4043,"mtime":1632058838629,"results":"93","hashOfConfig":"54"},{"size":7735,"mtime":1633338632884,"results":"94","hashOfConfig":"54"},{"size":1902,"mtime":1633340618147,"results":"95","hashOfConfig":"54"},{"size":447,"mtime":1632058838639,"results":"96","hashOfConfig":"54"},{"size":3971,"mtime":1632058838649,"results":"97","hashOfConfig":"54"},{"size":2581,"mtime":1632058838649,"results":"98","hashOfConfig":"54"},{"size":1474,"mtime":1632058838639,"results":"99","hashOfConfig":"54"},{"size":1015,"mtime":1632058838649,"results":"100","hashOfConfig":"54"},{"size":482,"mtime":1632058838639,"results":"101","hashOfConfig":"54"},{"size":0,"mtime":1633360609910,"results":"102","hashOfConfig":"54"},{"size":7993,"mtime":1633359710793,"results":"103","hashOfConfig":"54"},{"size":3381,"mtime":1633359516258,"results":"104","hashOfConfig":"54"},{"size":10571,"mtime":1633361009339,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"ifno9o",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\index.js",[],["224","225"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\serviceWorker.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\LayoutContext.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\App.js",["226","227","228"],"import React, { useState, useEffect } from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Amplify, Auth } from 'aws-amplify'\r\nimport '../aws-exports'\r\nimport { prevSign, useUserDispatch } from \"../context/UserContext\";\r\n// components\r\nimport Layout from \"./Layout\";\r\nimport { useUserState } from \"../context/UserContext\";\r\nimport aws_exports from '../aws-exports';\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\nimport ResetPass from \"../pages/resetpass\";\r\nimport SignUp from \"../pages/signup\";\r\n\r\nAmplify.configure(aws_exports);\r\n// pages\r\n\r\n// context\r\n\r\nexport default function App() {\r\n    // global\r\n    let { isAuthenticated } = useUserState();\r\n    let [user, setUser] = useState(false)\r\n    var userDispatch = useUserDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        Auth.currentAuthenticatedUser().then((user) => {\r\n            console.log(user)\r\n            prevSign(userDispatch)\r\n            //setUser(true)\r\n        }).catch(() => {\r\n            // setUser(false)\r\n        })\r\n    }, [user])\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => <Redirect to=\"/app/usertrends\" />} />\r\n                <Route\r\n                    exact\r\n                    path=\"/app\"\r\n                    render={() => <Redirect to=\"/app/usertrends\" />}\r\n                />\r\n                {/* <PrivateRoute path=\"/app\" component={Layout} /> */}\r\n                <PublicRoute path=\"/app\" component={Layout} />\r\n                <PublicRoute path=\"/login\" component={Login} />\r\n                <PublicRoute path=\"/resetpass\" component={ResetPass} />\r\n                <PublicRoute path=\"/signup\" component={SignUp} />\r\n                <Route component={Error} />\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n\r\n    // #######################################################################\r\n\r\n    function PrivateRoute({ component, ...rest }) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={props =>\r\n                    isAuthenticated || user ? (\r\n                        React.createElement(component, props)\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: {\r\n                                    from: props.location,\r\n                                },\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            />\r\n        );\r\n    }\r\n\r\n    function PublicRoute({ component, ...rest }) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={props =>\r\n                    isAuthenticated || user ? (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        React.createElement(component, props)\r\n                    )\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\context\\UserContext.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\index.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\Layout.js",["229","230","231","232"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport HomePage from \"../../pages/usertrends\";\r\nimport Statements from \"../../pages/dashboard\";\r\nimport CreateAds from \"../../pages/createads\";\r\nimport Adverts from \"../../pages/adverts\";\r\n\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/usertrends\" component={HomePage} />\r\n              <Route path=\"/app/dashboard\" component={Statements} />\r\n              <Route path=\"/app/createads\" component={CreateAds} />\r\n              <Route path=\"/app/adverts\" component={Adverts} />\r\n\r\n\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\Error.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\SignUp.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\ResetPass.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\Login.js",["233","234","235"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport logo from \"./logo.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n\r\n  const history = useHistory();\r\n  const handleRoute = () =>{\r\n    history.push('/resetpass');\r\n  }\r\n  const handleRouteSign = () =>{\r\n    history.push('/signup');\r\n  }\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n\r\n  return (\r\n\r\n      <Grid container className={classes.container}>\r\n        <div className={classes.logotypeContainer}>\r\n          <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n          <Typography className={classes.logotypeText}>Harmony Business</Typography>\r\n        </div>\r\n        <div className={classes.formContainer}>\r\n          <div className={classes.form}>\r\n            <Tabs\r\n                value={activeTabId}\r\n                onChange={(e, id) => setActiveTabId(id)}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n              <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            </Tabs>\r\n            {activeTabId === 0 && (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h1\" className={classes.greeting}>\r\n                    Welcome to Harmony\r\n                  </Typography>\r\n\r\n                  <Fade in={error}>\r\n                    <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                      Something is wrong with your login or password :(\r\n                    </Typography>\r\n                  </Fade>\r\n                  <TextField\r\n                      id=\"email\"\r\n                      InputProps={{\r\n                        classes: {\r\n                          underline: classes.textFieldUnderline,\r\n                          input: classes.textField,\r\n                        },\r\n                      }}\r\n                      value={loginValue}\r\n                      onChange={e => setLoginValue(e.target.value)}\r\n                      margin=\"normal\"\r\n                      placeholder=\"Email Address\"\r\n                      type=\"email\"\r\n                      fullWidth\r\n                  />\r\n                  <TextField\r\n                      id=\"password\"\r\n                      InputProps={{\r\n                        classes: {\r\n                          underline: classes.textFieldUnderline,\r\n                          input: classes.textField,\r\n                        },\r\n                      }}\r\n                      value={passwordValue}\r\n                      onChange={e => setPasswordValue(e.target.value)}\r\n                      margin=\"normal\"\r\n                      placeholder=\"Password\"\r\n                      type=\"password\"\r\n                      fullWidth\r\n                  />\r\n                  <div className={classes.formButtons}>\r\n                    {isLoading ? (\r\n                        <CircularProgress size={26} className={classes.loginLoader} />\r\n                    ) : (\r\n                        <Button\r\n                            disabled={\r\n                              loginValue.length === 0 || passwordValue.length === 0\r\n                            }\r\n                            onClick={() =>\r\n\r\n                                loginUser(\r\n                                    userDispatch,\r\n                                    loginValue,\r\n                                    passwordValue,\r\n                                    props.history,\r\n                                    setIsLoading,\r\n                                    setError\r\n                                )\r\n                            }\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                        >\r\n                          {isLoading? <CircularProgress />:  \"Login\"}\r\n\r\n                        </Button>\r\n                    )}\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.forgetButton}\r\n                        onClick={handleRouteSign}\r\n                    >\r\n\r\n                      Sign Up\r\n                    </Button>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.forgetButton}\r\n                        onClick={handleRoute}\r\n                    >\r\n\r\n                      Forgot Password\r\n                    </Button>\r\n\r\n                  </div>\r\n                </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\themes\\default.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\login\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\Form.js",["236","237","238","239"],"import React from \"react\";\r\nimport AccountForm from \"./AccountForm\";\r\nimport CodeForm from \"./CodeForm\";\r\nimport NewPassForm from \"./NewPassForm\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\n\r\nconst styles = theme => ({\r\n\tappBar: {\r\n\t\tposition: \"relative\"\r\n\t},\r\n\tlayout: {\r\n\t\twidth: '100%',\r\n\t\tmarginLeft: 0,\r\n\r\n\r\n\t},\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing.unit * 3,\r\n\t\tmarginBottom: theme.spacing.unit * 3,\r\n\r\n\t\t[theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n\t\t\tmarginTop: theme.spacing.unit * 6,\r\n\t\t\tmarginBottom: theme.spacing.unit * 6,\r\n\t\t\tpadding: theme.spacing.unit * 1\r\n\t\t}\r\n\t},\r\n\tstepper: {\r\n\t\tpadding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`\r\n\t},\r\n\tbuttons: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\"\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop: theme.spacing.unit * 3,\r\n\t\tmarginLeft: theme.spacing.unit\r\n\t}\r\n});\r\n\r\nconst steps = [\"Reset\", \"Verification Code\", \"New Password\"];\r\n\r\nfunction getStepContent(step, values, handleChange) {\r\n\tswitch (step) {\r\n\t\tcase 0:\r\n\t\t\treturn <AccountForm values={values} handleChange={handleChange} />;\r\n\t\tcase 1:\r\n\t\t\treturn <CodeForm values={values} handleChange={handleChange} />;\r\n\t\tcase 2:\r\n\t\t\treturn <NewPassForm values={values} handleChange={handleChange} />;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"Unknown step\");\r\n\t}\r\n}\r\n\r\nclass Form extends React.Component {\r\n\r\n\tstate = {\r\n\t\tactiveStep: 0,\r\n\t\temail: \"\",\r\n\t\tcode: \"\",\r\n\t\tpassword1: \"\",\r\n\t\tpassword2: \"\",\r\n\t};\r\n\r\n\thandleSignIn = () =>{\r\n\t\tthis.props.history.push('/login')\r\n\t}\r\n\r\n\thandleNext = async () => {\r\n\t\tif(this.state.activeStep==0){\r\n\t\t\tawait Auth.forgotPassword(this.state.email).then(e=>{\r\n\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\tactiveStep: state.activeStep + 1\r\n\t\t\t\t}));\r\n\t\t\t}).catch(e=> console.log(e))\r\n\t\t}else{\r\n\t\t\tif(this.state.activeStep==1){\r\n\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\tactiveStep: state.activeStep + 1\r\n\t\t\t\t}));\r\n\t\t\t}else{\r\n\t\t\t\tif(this.state.activeStep==2){\r\n\t\t\t\t\tawait Auth.forgotPasswordSubmit(this.state.email, this.state.code, this.state.password1).then(e=>{\r\n\t\t\t\t\t\t//console.log(e)\r\n\t\t\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\t\t\tactiveStep: state.activeStep + 1\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}).catch(e=> console.log(e))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tthis.setState(state => ({\r\n\t\t\tactiveStep: state.activeStep - 1\r\n\t\t}));\r\n\t};\r\n\r\n\thandleChange = input => e => {\r\n\t\tthis.setState({ [input]: e.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst { activeStep } = this.state;\r\n\t\tconst { email, code, password1, password2} = this.state;\r\n\t\tconst values = { email, code, password1, password2, };\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\r\n\t\t\t\t<main className={classes.layout}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n\t\t\t\t\t\t\tReset Password\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\r\n\t\t\t\t\t\t\t{steps.map(label => (\r\n\t\t\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\r\n\t\t\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Stepper>\r\n\r\n\t\t\t\t\t\t{activeStep === steps.length ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\tYou have successfully chanaged your password\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\tYou can now Login with you New Password!\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.forgetButton}\r\n\t\t\t\t\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\t\t// onClick = {this.handleSignIn}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{getStepContent(activeStep, values, this.handleChange)}\r\n\t\t\t\t\t\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t\t\t\t\t\t{activeStep !== 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleBack}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}>\r\n\t\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.button}>\r\n\t\t\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? \"Submit\" : \"Next\"}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</main>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Form);\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\Form.js",["240","241","242"],"import React from \"react\";\r\nimport AccountForm from \"./AccountForm\";\r\nimport VeriCodeForm from \"./VeriCodeForm\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nconst styles = theme => ({\r\n\tappBar: {\r\n\t\tposition: \"relative\"\r\n\t},\r\n\tlayout: {\r\n\t\twidth: '100%',\r\n\t\tmarginLeft: 0,\r\n\r\n\r\n\t},\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing.unit * 3,\r\n\t\tmarginBottom: theme.spacing.unit * 3,\r\n\r\n\t\t[theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n\t\t\tmarginTop: theme.spacing.unit * 6,\r\n\t\t\tmarginBottom: theme.spacing.unit * 6,\r\n\t\t\tpadding: theme.spacing.unit * 1\r\n\r\n\t\t}\r\n\t},\r\n\tstepper: {\r\n\t\tpadding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`\r\n\t},\r\n\tbuttons: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\"\r\n\t},\r\n\tbutton: {\r\n\t\tmarginTop: theme.spacing.unit * 3,\r\n\t\tmarginLeft: theme.spacing.unit\r\n\r\n\t}\r\n});\r\n\r\nconst steps = [\"New Sign Up\", \"Verification Code\"];\r\n\r\n\r\nfunction getStepContent(step, values, handleChange) {\r\n\tswitch (step) {\r\n\t\tcase 0:\r\n\t\t\treturn <AccountForm values={values} handleChange={handleChange} />;\r\n\t\tcase 1:\r\n\t\t\treturn <VeriCodeForm values={values} handleChange={handleChange} />;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"Unknown step\");\r\n\t}\r\n}\r\n\r\nclass Form extends React.Component {\r\n\tstate = {\r\n\t\tactiveStep: 0,\r\n\t\temail: \"\",\r\n\t\tcode: \"\",\r\n\t\tpassword: \"\",\r\n\t\tusername: \"\",\r\n\t};\r\n\thandleNext = async () => {\r\n\t\tif(this.state.activeStep==0){\r\n\t\t\tawait Auth.signUp({username: this.state.username, password: this.state.password, attributes :{ email: this.state.email}}).then(e=>{\r\n\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\tactiveStep: state.activeStep + 1\r\n\t\t\t\t}));\r\n\t\t\t}).catch(e=> console.log(e))\r\n\r\n\t\t}else{\r\n\t\t\tif(this.state.activeStep==1){\r\n\t\t\t\tawait Auth.confirmSignUp(this.state.username, this.state.code).then(e=>{\r\n\t\t\t\t\t//console.log(e)\r\n\t\t\t\t\tthis.setState(state => ({\r\n\t\t\t\t\t\tactiveStep: state.activeStep + 1\r\n\t\t\t\t\t}));\r\n\t\t\t\t}).catch(e=> console.log(e))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tthis.setState(state => ({\r\n\t\t\tactiveStep: state.activeStep - 1\r\n\t\t}));\r\n\t};\r\n\r\n\thandleChange = input => e => {\r\n\t\tthis.setState({ [input]: e.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst { activeStep } = this.state;\r\n\t\tconst { email, code, password, username} = this.state;\r\n\t\tconst values = { email, code, password, username};\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\r\n\t\t\t\t<main className={classes.layout}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n\t\t\t\t\t\t\tNew Sign Up\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\r\n\t\t\t\t\t\t\t{steps.map(label => (\r\n\t\t\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\r\n\t\t\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Stepper>\r\n\r\n\t\t\t\t\t\t{activeStep === steps.length ? (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\tWelcome!\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\tThank you for taking the time to register. We hope you enjoy Harmony !\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\tclassName={classes.forgetButton}\r\n\t\t\t\t\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\t\t// onClick = {this.handleSignIn}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{getStepContent(activeStep, values, this.handleChange)}\r\n\t\t\t\t\t\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t\t\t\t\t\t{activeStep !== 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleBack}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}>\r\n\t\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.button}>\r\n\t\t\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? \"Submit\" : \"Next\"}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</main>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Form);\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\error\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Layout\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\Createads.js",["243","244"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\Dashboard.js",["245","246","247"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport mock from \"./mock\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Table from \"./components/Table/Table\";\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Statement\" />\r\n      <Grid container spacing={4}>\r\n        <Table data={mock.table} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\Usertrends.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell, } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport PayPal from '../dashboard/components/Table/PayPal';\r\nimport { GrPaypal } from \"react-icons/gr\";\r\nimport LocationForm from './LocationForm';\r\nimport TrendingStats from './trendingStats';\r\nimport { FiMinusCircle } from \"react-icons/fi\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  /**Default logo */\r\n  const [logo, setLogo] = useState(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n  /**The checkout button for paypal */\r\n  const [checkout, setCheckout] = useState(false);\r\n  const [data, setData] = useState({ OutstandingAmount: 0, Locations: [{ name: \"\" }, { address: \"\" }] });\r\n\r\n  /**to detect if a child component is changed */\r\n  const [change, detectChange] = useState(true);\r\n  const detectChangeRef = useRef();\r\n  useEffect(() => {\r\n    detectChange(false);\r\n    console.log(\"change detected\");\r\n    /**load profile data */\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\" })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setData(result.UserData);\r\n          setLogo(result.UserData.Logo)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [change])\r\n\r\n  useEffect(() => {\r\n    /**load profile data */\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\" })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setData(result.UserData);\r\n          setLogo(result.UserData.Logo)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  /**@var fileRef to create a reference to the file input to be able to clear it */\r\n  const logoFileRef = useRef();\r\n\r\n  /**The array of the sopported extensions for the image */\r\n  const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\n  /**Handles the image preview */\r\n  const logoImageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setLogo(reader.result)\r\n        var base64result = reader.result.split(',')[1];\r\n        console.log(base64result);\r\n        // fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", { BID: \"b1\", Logo: btoa(reader.result) })\r\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({ BID: \"b4\", Logo: base64result })\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              console.log(result);\r\n              setData(result.Data);\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n            }\r\n          )\r\n      }\r\n    }\r\n    if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n    else {\r\n      alert(e.target.files[0].type + \" is not a supported file format.\");\r\n      setLogo(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n    }\r\n  }\r\n\r\n  const handleRemoveLocation = (name) => {\r\n    console.log(name + \" removed\")\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/removelocation\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\", LocationID: \"idsf\", LocationAddress: name })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          // setData(result.Data);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\" })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setData(result.UserData);\r\n          setLogo(result.UserData.Logo)\r\n        },\r\n\r\n        (error) => {\r\n        }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <Grid container spacing={4}>\r\n        <TrendingStats />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\Sidebar.js",["270","271","272","273","274","275","276","277"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n//import AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWalletIcon';\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Homepage\", link: \"/app/usertrends\", icon: <HomeIcon /> },\r\n  { id: 2, label: \"Adverts\", link: \"/app/adverts\", icon: <QueueIcon/>},\r\n  { id: 1, label: \"Statements\", link: \"/app/dashboard\", icon: <TableIcon /> },\r\n  { id: 2, label: \"Create Advert\", link: \"/app/createads\", icon: <QueueIcon/>},\r\n  { id: 3, type: \"divider\" },\r\n\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\VeriCodeForm.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\Header.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\signup\\AccountForm.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\AccountForm.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\NewPassForm.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\resetpass\\CodeForm.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\createads\\CreateAdForm.js",["278","279","280","281","282","283","284","285","286"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n    Formik, Form\r\n} from 'formik';\r\n// classNames\r\nimport useStyles from \"./styles\";\r\nimport * as Yup from 'yup';\r\n// components\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { InputNumber } from 'rsuite';\r\nimport { FiPlus, FiMinus } from \"react-icons/fi\";\r\n\r\n\r\nfunction CreateAdForm(...props) {\r\n    /**The form variables */\r\n    const defaultImage = \"http://beepeers.com/assets/images/commerces/default-image.jpg\";\r\n    const [foodImage, setFoodImage] = useState(defaultImage);\r\n    const [drinkImage, setDrinkImage] = useState(defaultImage);\r\n    const [result, setResult] = useState([]);\r\n    const [radius, setRadius] = useState(35);\r\n    var classes = useStyles();\r\n\r\n    /**@var fileRef to create a reference to the file input to be able to clear it */\r\n    const foodFileRef = useRef();\r\n    const drinkFileRef = useRef();\r\n\r\n    /**@var tagSelector used to clear the multiple selectors on clear  */\r\n    const foodTagSelector = useRef();\r\n    const drinkTagSelector = useRef();\r\n    const mealTagSelector = useRef();\r\n    const locationsTagSelector = useRef();\r\n    const timePeriodTagSelector = useRef();\r\n\r\n    const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ BID: \"b4\" })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    setResult(result.Locations);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const handleClear = (values) => {\r\n        setFoodImage(defaultImage);\r\n        setDrinkImage(defaultImage);\r\n        foodFileRef.current.value = \"\";\r\n        drinkFileRef.current.value = \"\";\r\n\r\n        /**in a try catch because if you try clearing a list thats already empty it should do nothing */\r\n        try {\r\n            foodTagSelector.current.resetSelectedValues();\r\n            drinkTagSelector.current.resetSelectedValues();\r\n            mealTagSelector.current.resetSelectedValues();\r\n            locationsTagSelector.current.resetSelectedValues();\r\n            timePeriodTagSelector.current.resetSelectedValues();\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    /**Handles the image preview */\r\n    const FoodImageHandler = (e, values) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setFoodImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n        else {\r\n            alert(e.target.files[0].type + \" is not a supported file format.\");\r\n            setFoodImage(defaultImage);\r\n        }\r\n    }\r\n    const DrinkImageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setDrinkImage(reader.result);\r\n                // console.log(btoa(img))\r\n            }\r\n        }\r\n        if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n        else {\r\n            alert(e.target.files[0].type + \" is not a supported file format.\");\r\n            setDrinkImage(defaultImage);\r\n        }\r\n    }\r\n    /** Submits the form to the database */\r\n    const handleSubmit = (vals) => {\r\n\r\n        // console.log(\"submitted handle \" + JSON.stringify(vals))\r\n        var request = {\r\n            FoodName: vals.FoodName,\r\n            DrinkName: vals.DrinkName,\r\n            BID: \"b4\",\r\n            FoodTags: vals.FoodTags,\r\n            DrinkTags: vals.DrinkTags,\r\n            PairingTags: vals.PairingTags,\r\n            Description: vals.PairingDescription,\r\n            Locations: vals.Locations,\r\n            TimePeriod: vals.TimePeriod,\r\n            FoodImage: foodImage.split(',')[1],\r\n            DrinkImage: drinkImage.split(',')[1],\r\n            Radius: radius\r\n        }\r\n        console.log(\"request to submit \" + JSON.stringify(request))\r\n        fetch('https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/createbusinesspairing', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(request)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n            .then(alert(\"Advert for \" + vals.FoodName + \" and \" + vals.DrinkName + \" was created successfully.\"))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addItemContainer}>\r\n            <Formik\r\n                enableReinitialize={true}\r\n                initialValues={{\r\n                    FoodName: \"\",\r\n                    FoodTags: \"\",\r\n                    DrinkName: \"\",\r\n                    DrinkTags: \"\",\r\n                    PairingDescription: \"\",\r\n                    PairingTags: \"\",\r\n                    Locations: \"\",\r\n                    TimePeriod: \"\",\r\n                    Radius: 20\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    FoodName: Yup.string().required('*'),\r\n                    DrinkName: Yup.string().required('*'),\r\n                    PairingDescription: Yup.string().required('*'),\r\n\r\n                })}\r\n                // onSubmit={(values) => handleSubmit(values)}\r\n                onSubmit={(values, { resetForm }) => {\r\n                    if (foodImage === defaultImage || drinkImage === defaultImage || values.FoodTags === [] || values.DrinkTags === [] || values.PairingTags === [] || values.Locations === [] || values.TimePeriod === []) {\r\n                        if (foodImage == defaultImage)\r\n                            alert(\"You havent uploaded an image for food.\");\r\n                        else if (drinkImage == defaultImage)\r\n                            alert(\"You havent uploaded an image for drink.\");\r\n                        else\r\n                            alert(\"One of your tag fields are blank.\");\r\n\r\n                    }\r\n                    else {                    /**reset then handle submit */\r\n                        resetForm();\r\n                        handleClear();\r\n                        handleSubmit(values);\r\n                    }\r\n                }}\r\n            >\r\n                {/** The moderate pairings form to submit */}\r\n                {({ errors, touched, values, handleChange, resetForm }) => (\r\n                    <Form>\r\n                        <div className={classes.formElementsImageContainer}>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.FoodLabelButton}>Food</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Food\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={foodImage} className={classes.ImageContainer} alt=\"Error displaying.\" /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Food\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={foodFileRef} onChange={(values) => FoodImageHandler(values)} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (foodFileRef.current.click())} className={classes.uploadFoodButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodName\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Name</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.FoodName && touched.FoodName) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    {/* <TextField id=\"outlined-basic\" error={errors.FoodName} variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} /> */}\r\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"FoodName\" className={classes.individualTextField} onChange={handleChange} value={values.FoodName} />\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"FoodTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Food Tags <br />(max 3)</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.FoodTags == [] && touched.FoodTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={foodTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%',\r\n                                                },\r\n\r\n                                                multiselectContainer: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20,\r\n                                                },\r\n                                                inputField: {\r\n                                                    'width': '100%',\r\n                                                    'height': 20,\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#FF6347',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.FoodTags = selectedList)}\r\n                                            id=\"FoodTags\" name=\"FoodTags\" value={values.FoodTags}\r\n                                            options={['Spicy', 'Savoury', 'Salty', 'Sweet', 'Sour', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.PreviewContainer}>\r\n                                <div className={classes.DrinkLabelButton}>Drink</div>\r\n                                <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Drink\"></label></div>\r\n                                <div className={classes.PreviewPiece}><img src={drinkImage} className={classes.ImageContainer} /></div>\r\n                                <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Drink\" name=\"ImageclassNameDrink\" accept=\"image/*\" ref={drinkFileRef} onChange={DrinkImageHandler} style={{ display: 'none' }} />\r\n                                    <Button onClick={() => (drinkFileRef.current.click())} className={classes.uploadDrinkButton} variant=\"contained\">Upload Image</Button>\r\n                                </div>\r\n\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"Drink Name\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Name</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.DrinkName && touched.DrinkName) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"DrinkName\" className={classes.individualTextField} onChange={handleChange} value={values.DrinkName} />\r\n\r\n                                </div>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <label htmlFor=\"DrinkTags\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}>\r\n                                            <p className={classes.errorDiv}>Drink Tags <br />(max 3)</p>\r\n                                        </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.DrinkTags == [] && touched.DrinkTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselector}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={3}\r\n                                            showArrow\r\n                                            ref={drinkTagSelector}\r\n                                            placeholder=\"\"\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    'width': '100%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#1FBFBA',\r\n                                                    'fontWeight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.DrinkTags = selectedList)}\r\n                                            id=\"DrinkTags\" name=\"DrinkTags\" onChange={handleChange} value={values.DrinkTags}\r\n                                            options={['Alcoholic', 'Non-Alcoholic', 'Fizzy', 'Sweet', 'Sour', 'Bitter', 'Warm', 'Hot', 'Cold']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={classes.PreviewContainerPairing}>\r\n                            <div className={classes.MealLabelButton}>Pairing</div>\r\n\r\n                            <div className={classes.MealContainer}>\r\n                                <div className={classes.formElementsPairing}>\r\n                                    <label htmlFor=\"PairingDescription\" className={classes.formLabel}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Description</p> </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(errors.PairingDescription && touched.PairingDescription) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <TextField id=\"outlined-basic\" multiline={true} rows={4} variant=\"outlined\" name=\"PairingDescription\" className={classes.individualTextField} onChange={handleChange} value={values.PairingDescription} />\r\n                                </div>\r\n                                <br />\r\n                                <div className={classes.formElementsPairingTag}>\r\n                                    <label htmlFor=\"PairingTags\" className={classes.tagName}>\r\n                                        <div className={classes.floatLeft}><p className={classes.errorDiv}>Tag <br />(max 1)</p> </div>\r\n                                        <div className={classes.floatLeft}>\r\n                                            {(values.PairingTags == [] && touched.PairingTags) ? (\r\n                                                <div className={classes.errorStar}>*</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </label>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={1}\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={mealTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '100%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    // 'border': '1px solid grey',\r\n                                                    'width': '100%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#C41ED4',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.PairingTags = selectedList)}\r\n                                            id=\"PairingTags\" name=\"PairingTags\" onChange={handleChange} value={values.PairingTags}\r\n                                            options={['Breakfast', 'Lunch', 'Supper', 'Snack', 'Vegetarian', 'Dairy-Free', 'Nut-Free']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.clear}></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.PreviewContainerPairing}>\r\n                            <div className={classes.configurationLabel}>Configuration</div>\r\n\r\n                            <div className={classes.MealContainer}>\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <div className={classes.configLabel}>\r\n\r\n                                        <label htmlFor=\"Locations\" className={classes.tagName}>\r\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Locations</p> </div>\r\n                                            <div className={classes.floatLeft}>\r\n                                                {(values.Locations == [] && touched.Locations) ? (\r\n                                                    <div className={classes.errorStar}>*</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={locationsTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '90%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    // 'border': '1px solid grey',\r\n                                                    'width': '90%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#4CD41E',\r\n                                                    'fontWeight': 'bold',\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.Locations = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.Locations = selectedList)}\r\n                                            id=\"Locations\" name=\"Locations\" onChange={handleChange} value={values.Locations}\r\n                                            options={result}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <div className={classes.configLabel}>\r\n\r\n                                        <label htmlFor=\"Locations\" className={classes.tagName}>\r\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Radius</p> </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <div>\r\n                                            <FiMinus className={classes.radiusIcon} onClick={() => setRadius(radius.valueOf(radius) - 5)} />\r\n                                            <InputNumber\r\n                                                min={5}\r\n                                                max={100}\r\n                                                step={5}\r\n                                                postfix=\"KM\"\r\n                                                value={radius}\r\n                                                onChange={value => {\r\n                                                    setRadius(value);\r\n                                                }}\r\n                                                style={{ display: \"none\", float: \"left\" }}\r\n                                            />\r\n                                            <div className={classes.floatLeft}>\r\n                                                <p style={{ marginTop: 0, marginLeft: 10, marginRight: 10, fontSize: 20 }}>\r\n                                                    {radius} KM\r\n                                                </p>\r\n                                            </div>\r\n                                            <FiPlus className={classes.radiusIcon} onClick={() => setRadius(radius.valueOf(radius) + 5)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                                <div className={classes.formElementsImageContainer}>\r\n                                    <div className={classes.configLabel}>\r\n                                        <label htmlFor=\"TimePeriod\" className={classes.tagName}>\r\n                                            <div className={classes.floatLeft}><p className={classes.errorDiv}>Time Period <br />(max 1)</p> </div>\r\n                                            <div className={classes.floatLeft}>\r\n                                                {(values.TimePeriod == [] && touched.TimePeriod) ? (\r\n                                                    <div className={classes.errorStar}>*</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={classes.multiselectorTag}>\r\n                                        <Multiselect\r\n                                            isObject={false}\r\n                                            disablePreSelectedValues\r\n                                            avoidHighlightFirstOption\r\n                                            selectionLimit={1}\r\n                                            showArrow\r\n                                            placeholder=\"\"\r\n                                            ref={timePeriodTagSelector}\r\n                                            style={{\r\n                                                optionContainer: { // To change css for option container \r\n                                                    'width': '90%'\r\n                                                },\r\n                                                searchBox: {\r\n                                                    'width': '90%'\r\n                                                },\r\n                                                chips: {\r\n                                                    'backgroundColor': '#4CD41E',\r\n                                                    'fontWeight': 'bold'\r\n                                                },\r\n                                            }}\r\n                                            onRemove={(selectedList) => (values.TimePeriod = selectedList)}\r\n                                            onSearch={function noRefCheck() { }}\r\n                                            onSelect={(selectedList) => (values.TimePeriod = selectedList)}\r\n                                            id=\"TimePeriod\" name=\"TimePeriod\" onChange={handleChange} value={values.TimePeriod}\r\n                                            options={['One Day', 'One Week', 'One Month', 'Three Months', 'Six Months', 'One Year']}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.clear}></div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.ButtonContainer}>\r\n                            <Button onClick={(values) => (resetForm(), handleClear())} className={classes.clearButton} variant=\"contained\">Clear</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.addButton} onClick={() => console.log(\"clicked submit\")}>\r\n                                Create Advert\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CreateAdForm;\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\trendingStats.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\usertrends\\LocationForm.js",["287"],"import React, { useState } from 'react';\r\nimport useStyles from \"./styles\";\r\nimport TextField from '@material-ui/core/TextField'\r\n// components\r\nimport Button from '@material-ui/core/Button';\r\nimport * as Yup from 'yup';\r\nimport {\r\n    Formik, Form\r\n} from 'formik';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n\r\nexport default function LocationForm(reference, ...props) {\r\n    const classes = useStyles();\r\n    const [address, setAddress] = useState(\"\");\r\n    const [coordinates, setCoordinates] = useState({ lat: null, lng: null });\r\n    /**import the api key */\r\n    const handleLocationUpdate = (values) => {\r\n        setAddress(\"\");\r\n        setCoordinates({ lat: null, lng: null });\r\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/addnewlocations\", {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ BID: \"b4\", lat: coordinates.lat, lng: coordinates.lng, \"LocationName\": values.LocationName, \"Address\": address })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                },\r\n\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                }\r\n            );\r\n        console.log(reference.reference.current.click());\r\n    }\r\n    const handleSelect = async (value) => {\r\n        const results = await geocodeByAddress(value);\r\n        console.log(results[0].formatted_address);\r\n        const latLng = await getLatLng(results[0]);\r\n        setCoordinates(latLng);\r\n        setAddress(results[0].formatted_address);\r\n    }\r\n    return (\r\n\r\n        <div className={classes.formElementsImageContainer}>\r\n            <Formik\r\n                initialValues={{\r\n                    LocationName: \"\",\r\n                    LocationAddress: \"\"\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    LocationName: Yup.string().required('*'),\r\n                })}\r\n                onSubmit={(values, { resetForm }) => { resetForm(); handleLocationUpdate(values) }}\r\n            >\r\n                {/** The moderate pairings form to submit */}\r\n                {({ errors, touched, values, handleChange, resetForm }) => (\r\n                    <Form >\r\n                        <div className={classes.marginAuto}>\r\n                            <div className={classes.formContainer}>\r\n                                <label htmlFor=\"LocationName\" className={classes.formLabel}>\r\n                                    <div className={classes.floatLeft}>\r\n                                        <p className={classes.errorDiv}>Name</p>\r\n                                    </div>\r\n                                    <div className={classes.floatLeft}>\r\n                                        {(errors.LocationName && touched.LocationName) ? (\r\n                                            <div className={classes.errorStar}>*</div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                </label>\r\n                                <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"LocationName\" className={classes.individualTextField} onChange={handleChange} value={values.LocationName} />\r\n                            </div>\r\n                            <div className={classes.formContainer}>\r\n                                <label htmlFor=\"LocationAddress\" className={classes.formLabel}>\r\n                                    <div className={classes.floatLeft}>\r\n                                        <p className={classes.errorDiv}>Street Address</p>\r\n                                    </div>\r\n                                    <div className={classes.floatLeft}>\r\n                                        {/* {(errors.LocationAddress && touched.LocationAddress) ? (\r\n                                            <div className={classes.errorStar}>*</div>\r\n                                        ) : null} */}\r\n                                        {(coordinates.lat === null && touched.LocationAddress) ? (\r\n                                            <div className={classes.errorStar}>*</div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                </label>\r\n                                <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\r\n                                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"LocationAddress\" className={classes.individualTextField} {...getInputProps({ placeholder: \"\" })} />\r\n\r\n                                            <div >\r\n                                                {loading ? <div>... loading</div> : null}\r\n\r\n                                                {suggestions.map((suggestion) => {\r\n                                                    const style = {\r\n                                                        backgroundColor: suggestion.active ? \"#81b5c2\" : \"#fff\",\r\n                                                        color: suggestion.active ? \"#fff\" : \"#4A4A4A\",\r\n                                                        borderWidth: 2,\r\n                                                        borderColor: \"#4A4A4A\",\r\n                                                    };\r\n                                                    return <div {...getSuggestionItemProps(suggestion, { style })}>{suggestion.description}</div>;\r\n                                                })}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    )}\r\n                                </PlacesAutocomplete>\r\n                            </div>\r\n                            <div className={classes.CoordinatesContainer}>\r\n                                <p className={classes.errorDiv}>Latitude:<div style={{ float: 'right' }}>{coordinates.lat}</div></p>\r\n                                <p className={classes.errorDiv}>Longitude:<div style={{ float: 'right' }}>{coordinates.lng}</div></p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Button onClick={() => (resetForm(),\r\n                                setAddress(\"\"),\r\n                                setCoordinates({ lat: null, lng: null })\r\n                            )} className={classes.ClearButton} > Clear </Button>\r\n                            <Button type=\"Submit\" className={classes.addLocationButton} > Add New Location</Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n\r\n    );\r\n}\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Header\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js",["288","289","290","291","292","293","294","295"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport PayPal from \"./PayPal\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Widget from \"../../../../components/Widget\";\r\nimport useStyles from \"../../styles\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\nimport { IoMdCloudDownload } from \"react-icons/io\";\r\nimport { GrPaypal } from \"react-icons/gr\";\r\nconst states = {\r\n  Active: \"success\",\r\n  Expired: \"secondary\",\r\n  Payment: \"info\"\r\n};\r\n\r\nexport default function TableComponent({ data }) {\r\n  const classes = useStyles();\r\n  const [checkout, setCheckout] = useState(false);\r\n  const [result, setResult] = useState({ StatusCode: 200, AdvertData: [{ Locations: [] }, { Locations: [] }], OutstandingAmount: 0 });\r\n\r\n  var tableHeadings = [{ name: \"\", date_Created: \"\", expiring: \"\", location: \"\", status: \"\", cost: \"\" },] // var keys = Object.keys(data.statements[0]).map(i => i.toUpperCase());\r\n  var keys = Object.keys(tableHeadings[0]).map(i => i.toUpperCase());\r\n  /**to filter the data */\r\n  var [TimePeriod, setTimePeriod] = useState(\"Month\");\r\n  const handleChange = (event) => {\r\n    setTimePeriod(event.target.value);\r\n  };\r\n\r\n  /**to detect if a child component is changed */\r\n  const [change, detectChange] = useState(true);\r\n  const detectChangeRef = useRef();\r\n  useEffect(() => {\r\n    detectChange(false);\r\n    console.log(\"change detected\");\r\n    /**load profile data */\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getstatement\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\", TimePeriod: TimePeriod })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setResult(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [change])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(JSON.stringify({ BID: \"b4\", TimePeriod: TimePeriod }));\r\n    // fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", { BID: \"b1\" })\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getstatement\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\", TimePeriod: TimePeriod })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setResult(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [TimePeriod])\r\n\r\n  /** reference to allow an icon to click the csv button */\r\n  const csvRef = useRef();\r\n\r\n  /** the header for the csv to be exported */\r\n  const headers = [\r\n    { label: \"Name\", key: \"name\" },\r\n    { label: \"Date Created\", key: \"date\" },\r\n    { label: \"Expiring\", key: \"expiring\" },\r\n    { label: \"Location\", key: \"location\" },\r\n    { label: \"Status\", key: \"status\" },\r\n    { label: \"Cost\", key: \"cost\" },\r\n  ];\r\n  /**The variables need to export the csv for payments */\r\n  const csvReport = {\r\n    data: data.statements,\r\n    headers: headers,\r\n    filename: 'StatementOfAccount.csv'\r\n  };\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Widget\r\n        disableWidgetMenu\r\n        noBodyPadding\r\n        bodyClass={classes.tableWidget}\r\n      >\r\n        <Button style={{ display: 'none' }} onClick={() => detectChange(true)} ref={detectChangeRef} />\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={TimePeriod}\r\n            onChange={handleChange}\r\n            label=\"chartState\"\r\n            style={{ float: \"left\", width: 150, marginRight: 25 }}\r\n          >\r\n            <MenuItem value=\"Day\">Past Day</MenuItem>\r\n            <MenuItem value=\"Week\">Past Week</MenuItem>\r\n            <MenuItem value=\"Month\">Past Month</MenuItem>\r\n            <MenuItem value=\"Year\">Past Year</MenuItem>\r\n            <MenuItem value=\"All\">All</MenuItem>\r\n          </Select>\r\n          <CSVLink {...csvReport} style={{ display: 'none' }} ref={csvRef}>Export to CSV</CSVLink>\r\n          <IoMdCloudDownload style={{ float: \"left\", marginRight: 25 }} size={32} onClick={() => { csvRef.current.link.click() }} />\r\n\r\n        </div>\r\n        <Table className=\"mb-0\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {keys.map(key => (\r\n                <TableCell key={key}>{key}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n            {result.AdvertData.map(({ BPID, FoodName, DrinkName, DateCreated, DaysRemaining, Locations, Status, Price }) => (\r\n              <TableRow key={BPID}>\r\n                {\r\n                  FoodName == 'Payment Successful' ? (<TableCell className=\"pl-3 fw-normal\">{FoodName} </TableCell>) : (<TableCell className=\"pl-3 fw-normal\">{FoodName} and {DrinkName}</TableCell>)\r\n                }\r\n                <TableCell>{DateCreated}</TableCell>\r\n\r\n                {\r\n                  FoodName == 'Payment Successful' ? (<TableCell>{DaysRemaining} </TableCell>) : (<TableCell>{DaysRemaining} Days </TableCell>)\r\n                }\r\n                <TableCell>{Locations.map((item) => (item + \", \"))}</TableCell>\r\n                {/* <TableCell>{Locations}</TableCell> */}\r\n                {/* {\r\n                  Status == 'Active' ? (<Chip label={Status} classes={{ root: classes[states[Status]] }} />) : (<TableCell className=\"pl-3 fw-normal\">{FoodName} and {DrinkName}</TableCell>)\r\n                } */}\r\n                <TableCell>\r\n                  {\r\n                    Status == 'Active' ? (<Chip label={Status} style={{ backgroundColor: \"#3cd4a0\", color: '#fff' }} />) : null\r\n                  }\r\n                  {\r\n                    Status == 'Expired' ? (<Chip label={Status} style={{ backgroundColor: \"#FF2222\", color: '#fff', }} />) : null\r\n                  }\r\n                  {\r\n                    Status == 'Payment' ? (<Chip label={Status} style={{ backgroundColor: \"#9013fe\", color: '#fff', }} />) : null\r\n                  }\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: \"right\" }}>{Price}</TableCell>\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className={classes.totalBox}>\r\n          <div className={classes.floatLeftLeft}>\r\n            <Typography size=\"xl\" weight=\"bold\">\r\n              Balance Due\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.floatLeft}>\r\n            <Typography size=\"xl\" weight=\"bold\">\r\n              R{result.OutsandingAmount}\r\n            </Typography>\r\n          </div>\r\n          <div style={{ clear: \"both\" }}></div>\r\n          {checkout ? (<PayPal amount={result.OutsandingAmount} reference={detectChangeRef} />) : (\r\n            <Button className={classes.payNowButton} variant=\"contained\" onClick={() => { setCheckout(true) }}><GrPaypal style={{ marginRight: 10 }} size={20} color=\"white\" />Pay now</Button>\r\n          )}\r\n        </div>\r\n      </Widget>\r\n    </Grid>\r\n\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\dashboard\\components\\Table\\PayPal.js",["296","297"],"import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function PayPal(amount, reference) {\r\n\r\n    const paypal = useRef();\r\n    useEffect(() => {\r\n        window.paypal.Buttons({\r\n            createOrder: (data, actions, err) => {\r\n                return actions.order.create({\r\n                    intent: \"CAPTURE\",\r\n                    purchase_units: [\r\n                        {\r\n                            description: \"Settlement of account at Harmony Business\",\r\n                            amount: {\r\n                                value: amount.amount,\r\n                                currency: \"USD\"\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture()\r\n                console.log(order);\r\n                console.log(amount.amount);\r\n\r\n                fetch('https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/receivepayment', {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({ BID: \"b4\", Amount: amount.amount })\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => console.log(data))\r\n                    .then(amount.reference.current.click())\r\n                //do an api call that updates the statement total\r\n            },\r\n            onError: (err) => {\r\n                console.log(err)\r\n                //do an alert that payment was unsuccessful\r\n            }\r\n        }).render(paypal.current)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div ref={paypal}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\Widget\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\aws-exports.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\adverts\\adverts.js",["298","299","300"],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\adverts\\styles.js",[],"C:\\Users\\user\\Documents\\COS301\\github\\Harmony\\frontend\\BusinessAppHarmony\\src\\pages\\profile\\profile.js",["301","302","303"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell, } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport PayPal from '../dashboard/components/Table/PayPal';\r\nimport { GrPaypal } from \"react-icons/gr\";\r\nimport LocationForm from './LocationForm';\r\nimport TrendingStats from './trendingStats';\r\nimport { FiMinusCircle } from \"react-icons/fi\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePage() {\r\n  const classes = useStyles();\r\n  /**Default logo */\r\n  const [logo, setLogo] = useState(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n  /**The checkout button for paypal */\r\n  const [checkout, setCheckout] = useState(false);\r\n  const [data, setData] = useState({ OutstandingAmount: 0, Locations: [{ name: \"\" }, { address: \"\" }] });\r\n\r\n  /**to detect if a child component is changed */\r\n  const [change, detectChange] = useState(true);\r\n  const detectChangeRef = useRef();\r\n  useEffect(() => {\r\n    detectChange(false);\r\n    console.log(\"change detected\");\r\n    /**load profile data */\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\" })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setData(result.UserData);\r\n          setLogo(result.UserData.Logo)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [change])\r\n\r\n  useEffect(() => {\r\n    /**load profile data */\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\" })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setData(result.UserData);\r\n          setLogo(result.UserData.Logo)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  /**@var fileRef to create a reference to the file input to be able to clear it */\r\n  const logoFileRef = useRef();\r\n\r\n  /**The array of the sopported extensions for the image */\r\n  const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\n  /**Handles the image preview */\r\n  const logoImageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setLogo(reader.result)\r\n        var base64result = reader.result.split(',')[1];\r\n        console.log(base64result);\r\n        // fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", { BID: \"b1\", Logo: btoa(reader.result) })\r\n        fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/updateuserlogo\", {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify({ BID: \"b4\", Logo: base64result })\r\n        })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              console.log(result);\r\n              setData(result.Data);\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n            }\r\n          )\r\n      }\r\n    }\r\n    if (supportedFormats.includes(e.target.files[0].type)) { reader.readAsDataURL(e.target.files[0]) }\r\n    else {\r\n      alert(e.target.files[0].type + \" is not a supported file format.\");\r\n      setLogo(\"http://beepeers.com/assets/images/commerces/default-image.jpg\");\r\n    }\r\n  }\r\n\r\n  const handleRemoveLocation = (name) => {\r\n    console.log(name + \" removed\")\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/removelocation\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\", LocationID: \"idsf\", LocationAddress: name })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          // setData(result.Data);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n        }\r\n      )\r\n    fetch(\"https://alt0c0nrq7.execute-api.eu-west-1.amazonaws.com/dev/getprofile\", {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ BID: \"b4\" })\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setData(result.UserData);\r\n          setLogo(result.UserData.Logo)\r\n        },\r\n\r\n        (error) => {\r\n        }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={4}>\r\n          <Widget\r\n            disableWidgetMenu\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Typography size=\"md\" weight=\"bold\">\r\n              Profile Settings\r\n            </Typography>\r\n            <br />\r\n            <div className={classes.center}>\r\n              <div className={classes.PreviewPiece}><label htmlFor=\"file-input-Logo\"></label></div>\r\n              <div className={classes.PreviewPiece}><img src={logo} className={classes.ImageContainer} /></div>\r\n              <div className={classes.FileInput}><input type=\"file\" id=\"file-input-Logo\" name=\"ImageclassNameFood\" accept=\"image/*\" ref={logoFileRef} onChange={logoImageHandler} style={{ display: 'none' }} />\r\n                <Button onClick={() => (logoFileRef.current.click())} className={classes.uploadLogoButton} variant=\"contained\">Upload New Logo</Button>\r\n              </div>\r\n              <br />\r\n              <Typography size=\"md\" weight=\"bold\">\r\n                Name\r\n              </Typography>\r\n              <Typography size=\"md\" weight=\"light\">\r\n                Laughing Panda\r\n              </Typography>\r\n              <br />\r\n              <Typography size=\"md\" weight=\"bold\">\r\n                Business Registration\r\n              </Typography>\r\n              <Typography size=\"sm\" weight=\"medium\">\r\n                201901000005 (1315525-A)\r\n              </Typography>\r\n\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Typography size=\"md\" weight=\"bold\">\r\n              View Account Balance\r\n            </Typography>\r\n            <div className={classes.outstandingBalance}>\r\n              <p className={classes.outstandingBalanceWord}>Outstanding Balance</p>\r\n              <Typography size=\"xxl\" weight=\"bold\">\r\n                R {data.OutstandingAmount}\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.PayPalContainer}>\r\n              {checkout ? (<PayPal amount={data.OutstandingAmount} reference={detectChangeRef} />) : (\r\n                <Button className={classes.payNowButton} variant=\"contained\" onClick={() => { setCheckout(true) }}><GrPaypal style={{ marginRight: 10 }} size={20} color=\"white\" />Pay now</Button>\r\n              )}\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Widget\r\n            disableWidgetMenu\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Typography size=\"md\" weight=\"bold\">\r\n              Locations\r\n            </Typography>\r\n            <LocationForm reference={detectChangeRef} />\r\n            <Button style={{ display: 'none' }} onClick={() => detectChange(true)} ref={detectChangeRef} />\r\n            <Table className=\"mb-0\">\r\n              <TableHead>\r\n                <TableRow className={classes.tableRowHeader}>\r\n                  <TableCell className={classes.tableCell}>NAME</TableCell>\r\n                  <TableCell className={classes.tableCell}>ADDRESS</TableCell>\r\n                  <TableCell className={classes.tableCell}>REMOVE</TableCell>\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.Locations.map((item) => (\r\n\r\n                  <TableRow key={item.Address}>\r\n                    <TableCell className=\"pl-3 fw-normal\">{item.Name}</TableCell>\r\n                    <TableCell>{item.Address}</TableCell>\r\n                    <TableCell><FiMinusCircle style={{ width: 25, height: 25, marginLeft: 20, marginRight: 20 }} onClick={() => (handleRemoveLocation(item.Address))} /></TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Widget>\r\n\r\n        </Grid>\r\n        {/* <Grid item xs={4}>\r\n          <Widget\r\n            disableWidgetMenu\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Typography size=\"md\" weight=\"bold\">\r\n              View Account Balance\r\n            </Typography>\r\n            <div className={classes.outstandingBalance}>\r\n              <p className={classes.outstandingBalanceWord}>Outstanding Balance</p>\r\n              <Typography size=\"xxl\" weight=\"bold\">\r\n                R {data.OutstandingAmount}\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.PayPalContainer}>\r\n              {checkout ? (<PayPal amount={data.OutstandingAmount} reference={detectChangeRef} />) : (\r\n                <Button className={classes.payNowButton} variant=\"contained\" onClick={() => { setCheckout(true) }}><GrPaypal style={{ marginRight: 10 }} size={20} color=\"white\" />Pay now</Button>\r\n              )}\r\n            </div>\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":23,"column":16,"nodeType":"310","messageId":"311","endLine":23,"endColumn":23},{"ruleId":"312","severity":1,"message":"313","line":35,"column":8,"nodeType":"314","endLine":35,"endColumn":14,"suggestions":"315"},{"ruleId":"308","severity":1,"message":"316","line":57,"column":14,"nodeType":"310","messageId":"311","endLine":57,"endColumn":26},{"ruleId":"308","severity":1,"message":"317","line":5,"column":3,"nodeType":"310","messageId":"311","endLine":5,"endColumn":11},{"ruleId":"308","severity":1,"message":"318","line":9,"column":14,"nodeType":"310","messageId":"311","endLine":9,"endColumn":24},{"ruleId":"308","severity":1,"message":"319","line":9,"column":26,"nodeType":"310","messageId":"311","endLine":9,"endColumn":30},{"ruleId":"308","severity":1,"message":"320","line":10,"column":8,"nodeType":"310","messageId":"311","endLine":10,"endColumn":12},{"ruleId":"308","severity":1,"message":"321","line":14,"column":8,"nodeType":"310","messageId":"311","endLine":14,"endColumn":13},{"ruleId":"308","severity":1,"message":"322","line":25,"column":10,"nodeType":"310","messageId":"311","endLine":25,"endColumn":14},{"ruleId":"308","severity":1,"message":"323","line":25,"column":16,"nodeType":"310","messageId":"311","endLine":25,"endColumn":23},{"ruleId":"308","severity":1,"message":"324","line":13,"column":10,"nodeType":"310","messageId":"311","endLine":13,"endColumn":20},{"ruleId":"325","severity":1,"message":"326","line":79,"column":27,"nodeType":"327","messageId":"328","endLine":79,"endColumn":29},{"ruleId":"325","severity":1,"message":"326","line":86,"column":28,"nodeType":"327","messageId":"328","endLine":86,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":91,"column":29,"nodeType":"327","messageId":"328","endLine":91,"endColumn":31},{"ruleId":"308","severity":1,"message":"324","line":12,"column":10,"nodeType":"310","messageId":"311","endLine":12,"endColumn":20},{"ruleId":"325","severity":1,"message":"326","line":72,"column":27,"nodeType":"327","messageId":"328","endLine":72,"endColumn":29},{"ruleId":"325","severity":1,"message":"326","line":80,"column":28,"nodeType":"327","messageId":"328","endLine":80,"endColumn":30},{"ruleId":"308","severity":1,"message":"329","line":8,"column":8,"nodeType":"310","messageId":"311","endLine":8,"endColumn":17},{"ruleId":"308","severity":1,"message":"330","line":14,"column":7,"nodeType":"310","messageId":"311","endLine":14,"endColumn":14},{"ruleId":"308","severity":1,"message":"331","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"308","severity":1,"message":"330","line":14,"column":7,"nodeType":"310","messageId":"311","endLine":14,"endColumn":14},{"ruleId":"308","severity":1,"message":"332","line":15,"column":7,"nodeType":"310","messageId":"311","endLine":15,"endColumn":12},{"ruleId":"308","severity":1,"message":"333","line":2,"column":16,"nodeType":"310","messageId":"311","endLine":2,"endColumn":21},{"ruleId":"308","severity":1,"message":"334","line":2,"column":23,"nodeType":"310","messageId":"311","endLine":2,"endColumn":31},{"ruleId":"308","severity":1,"message":"335","line":2,"column":33,"nodeType":"310","messageId":"311","endLine":2,"endColumn":42},{"ruleId":"308","severity":1,"message":"336","line":2,"column":44,"nodeType":"310","messageId":"311","endLine":2,"endColumn":53},{"ruleId":"308","severity":1,"message":"337","line":2,"column":55,"nodeType":"310","messageId":"311","endLine":2,"endColumn":64},{"ruleId":"308","severity":1,"message":"329","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":17},{"ruleId":"308","severity":1,"message":"338","line":6,"column":8,"nodeType":"310","messageId":"311","endLine":6,"endColumn":14},{"ruleId":"308","severity":1,"message":"339","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":20},{"ruleId":"308","severity":1,"message":"340","line":8,"column":8,"nodeType":"310","messageId":"311","endLine":8,"endColumn":14},{"ruleId":"308","severity":1,"message":"341","line":9,"column":10,"nodeType":"310","messageId":"311","endLine":9,"endColumn":18},{"ruleId":"308","severity":1,"message":"342","line":10,"column":8,"nodeType":"310","messageId":"311","endLine":10,"endColumn":20},{"ruleId":"308","severity":1,"message":"343","line":12,"column":10,"nodeType":"310","messageId":"311","endLine":12,"endColumn":23},{"ruleId":"308","severity":1,"message":"344","line":13,"column":8,"nodeType":"310","messageId":"311","endLine":13,"endColumn":14},{"ruleId":"308","severity":1,"message":"330","line":16,"column":9,"nodeType":"310","messageId":"311","endLine":16,"endColumn":16},{"ruleId":"308","severity":1,"message":"345","line":18,"column":10,"nodeType":"310","messageId":"311","endLine":18,"endColumn":14},{"ruleId":"308","severity":1,"message":"346","line":20,"column":10,"nodeType":"310","messageId":"311","endLine":20,"endColumn":18},{"ruleId":"308","severity":1,"message":"347","line":20,"column":20,"nodeType":"310","messageId":"311","endLine":20,"endColumn":31},{"ruleId":"308","severity":1,"message":"348","line":21,"column":10,"nodeType":"310","messageId":"311","endLine":21,"endColumn":14},{"ruleId":"308","severity":1,"message":"349","line":25,"column":9,"nodeType":"310","messageId":"311","endLine":25,"endColumn":24},{"ruleId":"308","severity":1,"message":"350","line":79,"column":9,"nodeType":"310","messageId":"311","endLine":79,"endColumn":20},{"ruleId":"308","severity":1,"message":"351","line":85,"column":9,"nodeType":"310","messageId":"311","endLine":85,"endColumn":25},{"ruleId":"308","severity":1,"message":"352","line":122,"column":9,"nodeType":"310","messageId":"311","endLine":122,"endColumn":29},{"ruleId":"308","severity":1,"message":"353","line":5,"column":24,"nodeType":"310","messageId":"311","endLine":5,"endColumn":41},{"ruleId":"308","severity":1,"message":"354","line":6,"column":17,"nodeType":"310","messageId":"311","endLine":6,"endColumn":31},{"ruleId":"308","severity":1,"message":"355","line":7,"column":17,"nodeType":"310","messageId":"311","endLine":7,"endColumn":31},{"ruleId":"308","severity":1,"message":"356","line":9,"column":21,"nodeType":"310","messageId":"311","endLine":9,"endColumn":32},{"ruleId":"308","severity":1,"message":"357","line":10,"column":19,"nodeType":"310","messageId":"311","endLine":10,"endColumn":30},{"ruleId":"308","severity":1,"message":"358","line":11,"column":18,"nodeType":"310","messageId":"311","endLine":11,"endColumn":25},{"ruleId":"308","severity":1,"message":"359","line":14,"column":8,"nodeType":"310","messageId":"311","endLine":14,"endColumn":20},{"ruleId":"308","severity":1,"message":"360","line":26,"column":8,"nodeType":"310","messageId":"311","endLine":26,"endColumn":11},{"ruleId":"325","severity":1,"message":"326","line":165,"column":39,"nodeType":"327","messageId":"328","endLine":165,"endColumn":41},{"ruleId":"325","severity":1,"message":"326","line":167,"column":45,"nodeType":"327","messageId":"328","endLine":167,"endColumn":47},{"ruleId":"325","severity":1,"message":"326","line":211,"column":63,"nodeType":"327","messageId":"328","endLine":211,"endColumn":65},{"ruleId":"361","severity":1,"message":"362","line":255,"column":71,"nodeType":"363","endLine":255,"endColumn":130},{"ruleId":"325","severity":1,"message":"326","line":280,"column":64,"nodeType":"327","messageId":"328","endLine":280,"endColumn":66},{"ruleId":"325","severity":1,"message":"326","line":337,"column":66,"nodeType":"327","messageId":"328","endLine":337,"endColumn":68},{"ruleId":"325","severity":1,"message":"326","line":387,"column":68,"nodeType":"327","messageId":"328","endLine":387,"endColumn":70},{"ruleId":"325","severity":1,"message":"326","line":466,"column":69,"nodeType":"327","messageId":"328","endLine":466,"endColumn":71},{"ruleId":"364","severity":1,"message":"365","line":506,"column":70,"nodeType":"366","messageId":"367","endLine":506,"endColumn":71},{"ruleId":"364","severity":1,"message":"365","line":122,"column":64,"nodeType":"366","messageId":"367","endLine":122,"endColumn":65},{"ruleId":"308","severity":1,"message":"368","line":11,"column":3,"nodeType":"310","messageId":"311","endLine":11,"endColumn":16},{"ruleId":"308","severity":1,"message":"369","line":22,"column":7,"nodeType":"310","messageId":"311","endLine":22,"endColumn":13},{"ruleId":"312","severity":1,"message":"370","line":68,"column":6,"nodeType":"314","endLine":68,"endColumn":14,"suggestions":"371"},{"ruleId":"325","severity":1,"message":"326","line":155,"column":28,"nodeType":"327","messageId":"328","endLine":155,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":160,"column":28,"nodeType":"327","messageId":"328","endLine":160,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":169,"column":28,"nodeType":"327","messageId":"328","endLine":169,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":172,"column":28,"nodeType":"327","messageId":"328","endLine":172,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":175,"column":28,"nodeType":"327","messageId":"328","endLine":175,"endColumn":30},{"ruleId":"308","severity":1,"message":"331","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"312","severity":1,"message":"372","line":45,"column":8,"nodeType":"314","endLine":45,"endColumn":10,"suggestions":"373"},{"ruleId":"361","severity":1,"message":"362","line":79,"column":55,"nodeType":"363","endLine":79,"endColumn":121},{"ruleId":"361","severity":1,"message":"362","line":80,"column":55,"nodeType":"363","endLine":80,"endColumn":122},{"ruleId":"325","severity":1,"message":"326","line":143,"column":35,"nodeType":"327","messageId":"328","endLine":143,"endColumn":37},{"ruleId":"308","severity":1,"message":"329","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":17},{"ruleId":"308","severity":1,"message":"374","line":11,"column":8,"nodeType":"310","messageId":"311","endLine":11,"endColumn":21},{"ruleId":"361","severity":1,"message":"362","line":180,"column":53,"nodeType":"363","endLine":180,"endColumn":106},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userDispatch'. Either include it or remove the dependency array.","ArrayExpression",["377"],"'PrivateRoute' is defined but never used.","'Redirect' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'Alert' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PageTitle' is defined but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'theme' is assigned a value but never used.","'Table' is defined but never used.","'TableRow' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'Widget' is defined but never used.","'Typography' is defined but never used.","'PayPal' is defined but never used.","'GrPaypal' is defined but never used.","'LocationForm' is defined but never used.","'FiMinusCircle' is defined but never used.","'Button' is defined but never used.","'logo' is assigned a value but never used.","'checkout' is assigned a value but never used.","'setCheckout' is assigned a value but never used.","'data' is assigned a value but never used.","'detectChangeRef' is assigned a value but never used.","'logoFileRef' is assigned a value but never used.","'logoImageHandler' is assigned a value but never used.","'handleRemoveLocation' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'FeedbackIcon' is defined but never used.","'Dot' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'OutlinedInput' is defined but never used.","'states' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'TimePeriod'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'amount.amount' and 'amount.reference'. Either include them or remove the dependency array.",["379"],"'TrendingStats' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},"Update the dependencies array to be: [user, userDispatch]",{"range":"386","text":"387"},"Update the dependencies array to be: [TimePeriod, change]",{"range":"388","text":"389"},"Update the dependencies array to be: [amount.amount, amount.reference]",{"range":"390","text":"391"},[1068,1074],"[user, userDispatch]",[2253,2261],"[TimePeriod, change]",[1801,1803],"[amount.amount, amount.reference]"]