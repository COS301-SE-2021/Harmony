[{"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\index.js":"1","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\serviceWorker.js":"2","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\context\\LayoutContext.js":"3","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\App.js":"4","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\context\\UserContext.js":"5","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\themes\\index.js":"6","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\error\\Error.js":"7","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\login\\Login.js":"8","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Layout\\Layout.js":"9","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\themes\\default.js":"10","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Layout\\styles.js":"11","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\login\\styles.js":"12","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\error\\styles.js":"13","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\tables\\Tables.js":"14","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\charts\\Charts.js":"15","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\notifications\\Notifications.js":"16","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\Typography.js":"17","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\maps\\Maps.js":"18","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\icons\\Icons.js":"19","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\Sidebar.js":"20","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Header\\Header.js":"21","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\Dashboard.js":"22","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\maps\\styles.js":"23","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\styles.js":"24","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\PageTitle\\PageTitle.js":"25","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\notifications\\styles.js":"26","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\icons\\styles.js":"27","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Widget\\Widget.js":"28","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js":"29","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Header\\styles.js":"30","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Notification\\Notification.js":"31","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Wrappers\\Wrappers.js":"32","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\components\\Dot.js":"33","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"34","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\styles.js":"35","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\styles.js":"36","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\mock.js":"37","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js":"38","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"39","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\charts\\components\\ApexHeatmap.js":"40","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\charts\\components\\ApexLineChart.js":"41","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\PageTitle\\styles.js":"42","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Widget\\styles.js":"43","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Notification\\styles.js":"44","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"45","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\UserAvatar\\styles.js":"46","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"47","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\ItemsButton.js":"48","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\AddItemForm.js":"49"},{"size":896,"mtime":1631741951055,"results":"50","hashOfConfig":"51"},{"size":5083,"mtime":1631741951743,"results":"52","hashOfConfig":"51"},{"size":1444,"mtime":1631741951038,"results":"53","hashOfConfig":"51"},{"size":1787,"mtime":1631741950750,"results":"54","hashOfConfig":"51"},{"size":2053,"mtime":1631741951039,"results":"55","hashOfConfig":"51"},{"size":534,"mtime":1631741951835,"results":"56","hashOfConfig":"51"},{"size":1626,"mtime":1631741951208,"results":"57","hashOfConfig":"51"},{"size":9141,"mtime":1631741951215,"results":"58","hashOfConfig":"51"},{"size":2231,"mtime":1631741950867,"results":"59","hashOfConfig":"51"},{"size":3127,"mtime":1631741951833,"results":"60","hashOfConfig":"51"},{"size":710,"mtime":1631741950869,"results":"61","hashOfConfig":"51"},{"size":3281,"mtime":1631741951218,"results":"62","hashOfConfig":"51"},{"size":1395,"mtime":1631741951210,"results":"63","hashOfConfig":"51"},{"size":2525,"mtime":1631741951282,"results":"64","hashOfConfig":"51"},{"size":5790,"mtime":1631741951056,"results":"65","hashOfConfig":"51"},{"size":13862,"mtime":1631741951245,"results":"66","hashOfConfig":"51"},{"size":4680,"mtime":1631743503294,"results":"67","hashOfConfig":"51"},{"size":1010,"mtime":1631741951243,"results":"68","hashOfConfig":"51"},{"size":391433,"mtime":1631741951213,"results":"69","hashOfConfig":"51"},{"size":3554,"mtime":1631741950922,"results":"70","hashOfConfig":"51"},{"size":10231,"mtime":1631741950834,"results":"71","hashOfConfig":"51"},{"size":20213,"mtime":1631741951107,"results":"72","hashOfConfig":"51"},{"size":178,"mtime":1631741951244,"results":"73","hashOfConfig":"51"},{"size":3730,"mtime":1631744351375,"results":"74","hashOfConfig":"51"},{"size":447,"mtime":1631741950917,"results":"75","hashOfConfig":"51"},{"size":1943,"mtime":1631741951281,"results":"76","hashOfConfig":"51"},{"size":812,"mtime":1631741951214,"results":"77","hashOfConfig":"51"},{"size":2581,"mtime":1631741951036,"results":"78","hashOfConfig":"51"},{"size":3484,"mtime":1631741951167,"results":"79","hashOfConfig":"51"},{"size":4043,"mtime":1631741950840,"results":"80","hashOfConfig":"51"},{"size":3413,"mtime":1631741950869,"results":"81","hashOfConfig":"51"},{"size":3971,"mtime":1631741951037,"results":"82","hashOfConfig":"51"},{"size":902,"mtime":1631741950993,"results":"83","hashOfConfig":"51"},{"size":4759,"mtime":1631741951124,"results":"84","hashOfConfig":"51"},{"size":3000,"mtime":1631741951208,"results":"85","hashOfConfig":"51"},{"size":1363,"mtime":1631741951034,"results":"86","hashOfConfig":"51"},{"size":3736,"mtime":1631741951192,"results":"87","hashOfConfig":"51"},{"size":620,"mtime":1631741951034,"results":"88","hashOfConfig":"51"},{"size":4589,"mtime":1631741950994,"results":"89","hashOfConfig":"51"},{"size":1909,"mtime":1631741951057,"results":"90","hashOfConfig":"51"},{"size":1396,"mtime":1631741951058,"results":"91","hashOfConfig":"51"},{"size":482,"mtime":1631741950918,"results":"92","hashOfConfig":"51"},{"size":1015,"mtime":1631741951037,"results":"93","hashOfConfig":"51"},{"size":1040,"mtime":1631741950870,"results":"94","hashOfConfig":"51"},{"size":1075,"mtime":1631741951124,"results":"95","hashOfConfig":"51"},{"size":291,"mtime":1631741951035,"results":"96","hashOfConfig":"51"},{"size":1474,"mtime":1631741950995,"results":"97","hashOfConfig":"51"},{"size":857,"mtime":1631741951391,"results":"98","hashOfConfig":"51"},{"size":9814,"mtime":1631744407630,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"13t2fy6",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\index.js",[],["206","207"],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\serviceWorker.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\context\\LayoutContext.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\App.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\context\\UserContext.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\themes\\index.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\error\\Error.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\login\\Login.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Layout\\Layout.js",["208","209","210"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/typography\" component={Typography} />\r\n              <Route path=\"/app/tables\" component={Tables} />\r\n              <Route path=\"/app/notifications\" component={Notifications} />\r\n              <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/ui/maps\" component={Maps} />\r\n              <Route path=\"/app/ui/icons\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} />\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\themes\\default.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Layout\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\login\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\error\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\tables\\Tables.js",["211","212","213","214"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst datatableData = [\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Churros\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Chocolate Cake\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Samoosa\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Fish and Chips\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Churros\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Chocolate Cake\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Samoosa\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Fish and Chips\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Churros\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Chocolate Cake\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Samoosa\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Fish and Chips\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Churros\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Chocolate Cake\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Samoosa\", \"Regular\", \"50\"],\r\n  [\"8d198cb5-4008-49c9-8a6d-040809376919\", \"Fish and Chips\", \"Regular\", \"50\"],\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Train AI\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Tags\"\r\n            data={datatableData}\r\n            columns={[\"Tag ID \", \"Name\", \"Type\", \"ImageCount\"]}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n              title=\"Iterations\"\r\n              data={datatableData}\r\n              columns={[\"Id Iteration\", \"Name\", \"Status\", \"PublishName\", \"TrainingType\"]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\charts\\Charts.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\Typography.js",["215","216","217","218","219","220"],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\Sidebar.js",["221","222","223","224","225","226","227"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  { id: 1, type: \"divider\" },\r\n  {\r\n    id: 2,\r\n    label: \"Moderate Items\",\r\n    link: \"/app/typography\",\r\n    icon: <QueueIcon />,\r\n  },\r\n  { id: 3, type: \"divider\" },\r\n  { id: 4, label: \"Train AI\", link: \"/app/tables\", icon: <TableIcon /> },\r\n\r\n  { id: 5, type: \"divider\" },\r\n  { id: 6, label: \"User Feedback\", link: \"/app/maps\", icon: <FeedbackIcon /> },\r\n  { id: 7, type: \"divider\" },\r\n\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Header\\Header.js",["228","229"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h3\" weight=\"medium\" className={classes.logotype}>\r\n          Harmony Admin\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\Dashboard.js",["230","231","232","233","234","235","236","237"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n  var [data, setData] = useState(\" \");\r\n  var [totalUsers, setTotalUsers] = useState(\"\");\r\n  var [mostFavouritedPairings, setMostFavouritedPairings] = useState([]);\r\n  var [hitRatio, setHitRatio] = useState(\"\");\r\n  /**\r\n   * @function runs once to load all the data for the dashboard\r\n   */\r\n  useEffect(() => {\r\n    /**Get total users api  */\r\n    fetch('https://w3lfp6r6f7.execute-api.eu-west-1.amazonaws.com/dev/gettotalusers')\r\n      .then(response => response.json())\r\n      .then(data => setTotalUsers(data.TotalUsers));\r\n\r\n    /**Get hit ration call */\r\n    fetch('https://w3lfp6r6f7.execute-api.eu-west-1.amazonaws.com/dev/viewratiodata')\r\n      .then(response => response.json())\r\n      .then(data => setHitRatio(data))\r\n      .then(console.log(\"hit ratio \" + JSON.stringify(hitRatio)));\r\n    /**  empty dependency array means this effect will only run once (like componentDidMount in classes)*/\r\n  }, []);\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" button={<Button\r\n        variant=\"contained\"\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n      >\r\n        Latest Reports\r\n      </Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Users\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <div style={{ width: \"100%\", textAlign: \"right\" }}>\r\n                  <Grid item xs={6}>\r\n                    <Typography size=\"xxl\" weight=\"large\" noWrap >\r\n                      <p style={{ color: theme.palette.primary.main }}>{totalUsers}</p>\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n                {/* <Grid item xs={6}>\r\n                  <LineChart\r\n                    width={100}\r\n                    height={30}\r\n                    data={[\r\n                      { value: 10 },\r\n                      { value: 15 },\r\n                      { value: 10 },\r\n                      { value: 17 },\r\n                      { value: 18 },\r\n                    ]}\r\n                  >\r\n                    <Line\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.success.main}\r\n                      strokeWidth={2}\r\n                      dot={false}\r\n                    />\r\n                  </LineChart>\r\n                </Grid> */}\r\n              </Grid>\r\n            </div>\r\n            {/* <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid> */}\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          {/* <Widget\r\n            title=\"AI Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget> */}\r\n          <Widget\r\n            title=\"AI Performance\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={[classes.visitsNumberContainer, { justifyContent: \"space-between\" }]}>\r\n              <Grid container item alignItems={\"center\"}>\r\n\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xxl\" weight=\"large\" noWrap>\r\n                    <p style={{\r\n                      color: theme.palette.success, float: \"left\"\r\n                    }}>{hitRatio.TrueScans}</p><p style={{\r\n                      float: \"left\"\r\n                    }}>:</p><p style={{\r\n                      color: theme.palette.warning, float: \"left\"\r\n                    }}>{hitRatio.FalseScans}</p>\r\n                  </Typography>\r\n\r\n                </Grid>\r\n                <div className={[classes.performanceLegendWrapper, { justifyContent: \"space-between\" }]}>\r\n                  <div className={classes.legendElement}>\r\n                    <Dot color=\"success\" />\r\n                    <Typography\r\n                      color=\"text\"\r\n                      colorBrightness=\"secondary\"\r\n                      className={classes.legendElementText}\r\n                    >\r\n                      Hits\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.legendElement}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography\r\n                      color=\"text\"\r\n                      colorBrightness=\"secondary\"\r\n                      className={classes.legendElementText}\r\n                    >\r\n                      Misses\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div className={classes.visitsNumberContainer}>\r\n              <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                <Grid container item alignItems={\"center\"}>\r\n                  <Grid item xs={6}>\r\n                    <Typography color=\"text\" colorBrightness=\"primary\" >\r\n                      Total Scanned :\r\n                    </Typography>\r\n\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                      {hitRatio.TotalScans}\r\n                    </Typography>\r\n\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n          </Widget>\r\n\r\n        </Grid>\r\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid> */}\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item sm={6} xs={12}>\r\n          <BigStat title=\"Food Flavour Statistics\" color=\"#C41ED4\" />\r\n        </Grid>\r\n        <Grid item sm={6} xs={12}>\r\n          <BigStat title=\"Food Flavour Statistics\" color=\"#C41ED4\" />\r\n        </Grid>\r\n        {/* {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} title=\"Statistics\" color=\"#FF6347\" />\r\n          </Grid>\r\n        ))} */}\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n      <Grid item xs={12}>\r\n        <Widget\r\n          title=\"Most Favourited Pairings\"\r\n          upperTitle\r\n          noBodyPadding\r\n          bodyClass={classes.tableWidget}\r\n        >\r\n          <Table data={mostFavouritedPairings} />\r\n        </Widget>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\maps\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\icons\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Header\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",["238","239","240","241","242","243","244","245","246","247","248","249"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip } from \"recharts\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../../components/Widget\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\n\r\nexport default function BigStat(props) {\r\n  var { product, total, color, registrations, bounce, title } = props;\r\n\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var [tableData, setTableData] = useState([]);\r\n  useEffect(() => {\r\n\r\n    fetch('https://w3lfp6r6f7.execute-api.eu-west-1.amazonaws.com/dev/getflavoursmostused')\r\n      .then(response => response.json())\r\n      .then(data => setTableData(data.Data))\r\n      .then(console.log(tableData));\r\n    /**  empty dependency array means this effect will only run once (like componentDidMount in classes)*/\r\n  }, []);\r\n  // local\r\n  var [value, setValue] = useState(\"daily\");\r\n\r\n  return (\r\n    <Widget\r\n      header={\r\n        <div className={classes.title}>\r\n          <Typography variant=\"h5\">Flavour Statistics</Typography>\r\n\r\n          <Select\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            input={\r\n              <Input\r\n                disableUnderline\r\n                classes={{ input: classes.selectInput }}\r\n              />\r\n            }\r\n            className={classes.select}\r\n          >\r\n            <MenuItem value=\"meal\">Meal</MenuItem>\r\n            <MenuItem value=\"food\">Food</MenuItem>\r\n            <MenuItem value=\"drink\">Drink</MenuItem>\r\n          </Select>\r\n        </div>\r\n      }\r\n      upperTitle\r\n      bodyClass={classes.bodyWidgetOverflow}\r\n    >\r\n      <div className={classes.totalValueContainer}>\r\n        {/* <div className={classes.totalValue}>\r\n          <Typography size=\"xxl\" color=\"text\" colorBrightness=\"secondary\">\r\n            {total[value]}\r\n          </Typography>\r\n          <Typography color={total.percent.profit ? \"success\" : \"secondary\"}>\r\n            &nbsp;{total.percent.profit ? \"+\" : \"-\"}\r\n            {total.percent.value}%\r\n          </Typography>\r\n        </div> */}\r\n        <BarChart width={450} height={200} data={tableData}>\r\n          <Bar\r\n            dataKey=\"Count\"\r\n            // fill={theme.palette[color].main}\r\n            fill={color}\r\n            radius={8}\r\n            barSize={20}\r\n\r\n          />\r\n          <YAxis domain={[0, 10]} />\r\n          {/* <Tooltip /> */}\r\n          <XAxis dataKey=\"Flavour\" />\r\n        </BarChart>\r\n      </div>\r\n      {/* <div className={classes.bottomStatsContainer}>\r\n        <div className={classnames(classes.statCell, classes.borderRight)}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">{registrations[value].value}</Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Registrations\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.statCell}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">{bounce[value].value}%</Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Bounce Rate\r\n          </Typography>\r\n        </div>\r\n        <div className={classnames(classes.statCell, classes.borderRight)}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">\r\n              {registrations[value].value * 10}\r\n            </Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [classes.profitArrowDanger]: !registrations[value].profit,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Views\r\n          </Typography>\r\n        </div>\r\n      </div> */}\r\n    </Widget>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\n\r\nfunction getRandomData() {\r\n  return Array(7)\r\n    .fill()\r\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\r\n}\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Widget\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Notification\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\ItemsButton.js",["250","251","252"],"import React, { useState } from 'react';\r\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nfunction ItemsButton(item, ...props) {\r\n    var classes = useStyles();\r\n\r\n    /**\r\n       * @function removes the item from the list to be added\r\n       */\r\n    const handleRemoveItem = () => {\r\n        console.log(item);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.requestedItemBox}>\r\n            <p className={classes.requestedItemName}>{item.item}</p>\r\n            <div className={classes.icon}>\r\n                <AiOutlineMinusCircle size=\"20\" onClick={() => handleRemoveItem(item)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemsButton;\r\n","C:\\Users\\user\\Documents\\COS341\\Harmony\\frontend\\WebAppHarmony\\src\\pages\\typography\\AddItemForm.js",["253","254","255","256","257","258"],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":9,"column":14,"nodeType":"265","messageId":"266","endLine":9,"endColumn":24},{"ruleId":"263","severity":1,"message":"267","line":9,"column":26,"nodeType":"265","messageId":"266","endLine":9,"endColumn":30},{"ruleId":"263","severity":1,"message":"268","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":12},{"ruleId":"263","severity":1,"message":"269","line":8,"column":8,"nodeType":"265","messageId":"266","endLine":8,"endColumn":14},{"ruleId":"263","severity":1,"message":"270","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":13},{"ruleId":"263","severity":1,"message":"271","line":12,"column":8,"nodeType":"265","messageId":"266","endLine":12,"endColumn":12},{"ruleId":"263","severity":1,"message":"272","line":40,"column":9,"nodeType":"265","messageId":"266","endLine":40,"endColumn":16},{"ruleId":"263","severity":1,"message":"269","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":14},{"ruleId":"263","severity":1,"message":"273","line":12,"column":8,"nodeType":"265","messageId":"266","endLine":12,"endColumn":19},{"ruleId":"263","severity":1,"message":"274","line":15,"column":8,"nodeType":"265","messageId":"266","endLine":15,"endColumn":25},{"ruleId":"275","severity":1,"message":"276","line":44,"column":6,"nodeType":"277","endLine":44,"endColumn":8,"suggestions":"278"},{"ruleId":"263","severity":1,"message":"279","line":49,"column":9,"nodeType":"265","messageId":"266","endLine":49,"endColumn":20},{"ruleId":"263","severity":1,"message":"280","line":57,"column":9,"nodeType":"265","messageId":"266","endLine":57,"endColumn":25},{"ruleId":"263","severity":1,"message":"281","line":5,"column":24,"nodeType":"265","messageId":"266","endLine":5,"endColumn":41},{"ruleId":"263","severity":1,"message":"282","line":6,"column":17,"nodeType":"265","messageId":"266","endLine":6,"endColumn":31},{"ruleId":"263","severity":1,"message":"283","line":7,"column":17,"nodeType":"265","messageId":"266","endLine":7,"endColumn":31},{"ruleId":"263","severity":1,"message":"284","line":9,"column":21,"nodeType":"265","messageId":"266","endLine":9,"endColumn":32},{"ruleId":"263","severity":1,"message":"285","line":10,"column":19,"nodeType":"265","messageId":"266","endLine":10,"endColumn":30},{"ruleId":"263","severity":1,"message":"286","line":11,"column":18,"nodeType":"265","messageId":"266","endLine":11,"endColumn":25},{"ruleId":"263","severity":1,"message":"287","line":25,"column":8,"nodeType":"265","messageId":"266","endLine":25,"endColumn":11},{"ruleId":"263","severity":1,"message":"267","line":10,"column":3,"nodeType":"265","messageId":"266","endLine":10,"endColumn":7},{"ruleId":"263","severity":1,"message":"288","line":27,"column":29,"nodeType":"265","messageId":"266","endLine":27,"endColumn":35},{"ruleId":"263","severity":1,"message":"289","line":4,"column":3,"nodeType":"265","messageId":"266","endLine":4,"endColumn":17},{"ruleId":"263","severity":1,"message":"290","line":14,"column":3,"nodeType":"265","messageId":"266","endLine":14,"endColumn":12},{"ruleId":"263","severity":1,"message":"291","line":15,"column":3,"nodeType":"265","messageId":"266","endLine":15,"endColumn":12},{"ruleId":"263","severity":1,"message":"271","line":29,"column":8,"nodeType":"265","messageId":"266","endLine":29,"endColumn":12},{"ruleId":"263","severity":1,"message":"292","line":51,"column":8,"nodeType":"265","messageId":"266","endLine":51,"endColumn":12},{"ruleId":"263","severity":1,"message":"293","line":51,"column":14,"nodeType":"265","messageId":"266","endLine":51,"endColumn":21},{"ruleId":"263","severity":1,"message":"294","line":53,"column":32,"nodeType":"265","messageId":"266","endLine":53,"endColumn":57},{"ruleId":"275","severity":1,"message":"295","line":70,"column":6,"nodeType":"277","endLine":70,"endColumn":8,"suggestions":"296"},{"ruleId":"263","severity":1,"message":"297","line":2,"column":10,"nodeType":"265","messageId":"266","endLine":2,"endColumn":14},{"ruleId":"263","severity":1,"message":"298","line":3,"column":26,"nodeType":"265","messageId":"266","endLine":3,"endColumn":42},{"ruleId":"263","severity":1,"message":"299","line":5,"column":39,"nodeType":"265","messageId":"266","endLine":5,"endColumn":46},{"ruleId":"263","severity":1,"message":"300","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":18},{"ruleId":"263","severity":1,"message":"301","line":16,"column":9,"nodeType":"265","messageId":"266","endLine":16,"endColumn":16},{"ruleId":"263","severity":1,"message":"302","line":16,"column":18,"nodeType":"265","messageId":"266","endLine":16,"endColumn":23},{"ruleId":"263","severity":1,"message":"303","line":16,"column":32,"nodeType":"265","messageId":"266","endLine":16,"endColumn":45},{"ruleId":"263","severity":1,"message":"304","line":16,"column":47,"nodeType":"265","messageId":"266","endLine":16,"endColumn":53},{"ruleId":"263","severity":1,"message":"305","line":16,"column":55,"nodeType":"265","messageId":"266","endLine":16,"endColumn":60},{"ruleId":"263","severity":1,"message":"306","line":19,"column":7,"nodeType":"265","messageId":"266","endLine":19,"endColumn":12},{"ruleId":"275","severity":1,"message":"307","line":28,"column":6,"nodeType":"277","endLine":28,"endColumn":8,"suggestions":"308"},{"ruleId":"263","severity":1,"message":"309","line":131,"column":10,"nodeType":"265","messageId":"266","endLine":131,"endColumn":23},{"ruleId":"263","severity":1,"message":"310","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"311","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":17},{"ruleId":"263","severity":1,"message":"269","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":14},{"ruleId":"263","severity":1,"message":"312","line":3,"column":19,"nodeType":"265","messageId":"266","endLine":3,"endColumn":28},{"ruleId":"263","severity":1,"message":"311","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":17},{"ruleId":"263","severity":1,"message":"269","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":14},{"ruleId":"263","severity":1,"message":"274","line":14,"column":8,"nodeType":"265","messageId":"266","endLine":14,"endColumn":25},{"ruleId":"263","severity":1,"message":"313","line":30,"column":11,"nodeType":"265","messageId":"266","endLine":30,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":122,"column":75,"nodeType":"316","endLine":122,"endColumn":127},"no-native-reassign",["317"],"no-negated-in-lhs",["318"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Icon' is defined but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'classes' is assigned a value but never used.","'ItemsButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestedItemsAPI'. Either include it or remove the dependency array.","ArrayExpression",["319"],"'handleClick' is assigned a value but never used.","'handleRemoveItem' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Button' is defined but never used.","'LinearProgress' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setMostFavouritedPairings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hitRatio'. Either include it or remove the dependency array.",["320"],"'Grid' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'Tooltip' is defined but never used.","'classnames' is defined but never used.","'product' is assigned a value but never used.","'total' is assigned a value but never used.","'registrations' is assigned a value but never used.","'bounce' is assigned a value but never used.","'title' is assigned a value but never used.","'theme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tableData'. Either include it or remove the dependency array.",["321"],"'getRandomData' is defined but never used.","'useState' is defined but never used.","'PageTitle' is defined but never used.","'useFormik' is defined but never used.","'HandleToggle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [requestedItemsAPI]",{"range":"328","text":"329"},"Update the dependencies array to be: [hitRatio]",{"range":"330","text":"331"},"Update the dependencies array to be: [tableData]",{"range":"332","text":"333"},[2497,2499],"[requestedItemsAPI]",[2184,2186],"[hitRatio]",[1106,1108],"[tableData]"]