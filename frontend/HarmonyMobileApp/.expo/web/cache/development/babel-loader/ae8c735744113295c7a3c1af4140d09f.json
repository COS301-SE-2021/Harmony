{"ast":null,"code":"import { cond, sub, pow, divide, multiply, add, block, set, lessThan, proc, abs } from \"../base\";\nvar VELOCITY_EPS = 5;\n\nfunction decay(clock, state, config) {\n  var lastTime = cond(state.time, state.time, clock);\n  var deltaTime = sub(clock, lastTime);\n  var kv = pow(config.deceleration, deltaTime);\n  var kx = divide(multiply(config.deceleration, sub(1, kv)), sub(1, config.deceleration));\n  var v0 = divide(state.velocity, 1000);\n  var v = multiply(v0, kv, 1000);\n  var x = add(state.position, multiply(v0, kx));\n  return block([set(state.position, x), set(state.velocity, v), set(state.time, clock), cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1))]);\n}\n\nvar procDecay = proc(function (clock, time, velocity, position, finished, deceleration) {\n  return decay(clock, {\n    time: time,\n    velocity: velocity,\n    position: position,\n    finished: finished\n  }, {\n    deceleration: deceleration\n  });\n});\nexport default (function (clock, _ref, _ref2) {\n  var time = _ref.time,\n      velocity = _ref.velocity,\n      position = _ref.position,\n      finished = _ref.finished;\n  var deceleration = _ref2.deceleration;\n  return procDecay(clock, time, velocity, position, finished, deceleration);\n});","map":{"version":3,"sources":["C:/Users/perum/Documents/Harmony/frontend/HarmonyMobileApp/node_modules/react-native-reanimated/lib/reanimated1/animations/decay.js"],"names":["cond","sub","pow","divide","multiply","add","block","set","lessThan","proc","abs","VELOCITY_EPS","decay","clock","state","config","lastTime","time","deltaTime","kv","deceleration","kx","v0","velocity","v","x","position","finished","procDecay"],"mappings":"AAAA,SACEA,IADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,GANF,EAOEC,KAPF,EAQEC,GARF,EASEC,QATF,EAUEC,IAVF,EAWEC,GAXF;AAcA,IAAMC,YAAY,GAAG,CAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,MAAMC,QAAQ,GAAGhB,IAAI,CAACc,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACG,IAAnB,EAAyBJ,KAAzB,CAArB;AACA,MAAMK,SAAS,GAAGjB,GAAG,CAACY,KAAD,EAAQG,QAAR,CAArB;AAQA,MAAMG,EAAE,GAAGjB,GAAG,CAACa,MAAM,CAACK,YAAR,EAAsBF,SAAtB,CAAd;AACA,MAAMG,EAAE,GAAGlB,MAAM,CACfC,QAAQ,CAACW,MAAM,CAACK,YAAR,EAAsBnB,GAAG,CAAC,CAAD,EAAIkB,EAAJ,CAAzB,CADO,EAEflB,GAAG,CAAC,CAAD,EAAIc,MAAM,CAACK,YAAX,CAFY,CAAjB;AAIA,MAAME,EAAE,GAAGnB,MAAM,CAACW,KAAK,CAACS,QAAP,EAAiB,IAAjB,CAAjB;AACA,MAAMC,CAAC,GAAGpB,QAAQ,CAACkB,EAAD,EAAKH,EAAL,EAAS,IAAT,CAAlB;AACA,MAAMM,CAAC,GAAGpB,GAAG,CAACS,KAAK,CAACY,QAAP,EAAiBtB,QAAQ,CAACkB,EAAD,EAAKD,EAAL,CAAzB,CAAb;AACA,SAAOf,KAAK,CAAC,CACXC,GAAG,CAACO,KAAK,CAACY,QAAP,EAAiBD,CAAjB,CADQ,EAEXlB,GAAG,CAACO,KAAK,CAACS,QAAP,EAAiBC,CAAjB,CAFQ,EAGXjB,GAAG,CAACO,KAAK,CAACG,IAAP,EAAaJ,KAAb,CAHQ,EAIXb,IAAI,CAACQ,QAAQ,CAACE,GAAG,CAACc,CAAD,CAAJ,EAASb,YAAT,CAAT,EAAiCJ,GAAG,CAACO,KAAK,CAACa,QAAP,EAAiB,CAAjB,CAApC,CAJO,CAAD,CAAZ;AAMD;;AAED,IAAMC,SAAS,GAAGnB,IAAI,CACpB,UAACI,KAAD,EAAQI,IAAR,EAAcM,QAAd,EAAwBG,QAAxB,EAAkCC,QAAlC,EAA4CP,YAA5C;AAAA,SACER,KAAK,CAACC,KAAD,EAAQ;AAAEI,IAAAA,IAAI,EAAJA,IAAF;AAAQM,IAAAA,QAAQ,EAARA,QAAR;AAAkBG,IAAAA,QAAQ,EAARA,QAAlB;AAA4BC,IAAAA,QAAQ,EAARA;AAA5B,GAAR,EAAgD;AAAEP,IAAAA,YAAY,EAAZA;AAAF,GAAhD,CADP;AAAA,CADoB,CAAtB;AAKA,gBAAe,UACbP,KADa;AAAA,MAEXI,IAFW,QAEXA,IAFW;AAAA,MAELM,QAFK,QAELA,QAFK;AAAA,MAEKG,QAFL,QAEKA,QAFL;AAAA,MAEeC,QAFf,QAEeA,QAFf;AAAA,MAGXP,YAHW,SAGXA,YAHW;AAAA,SAIVQ,SAAS,CAACf,KAAD,EAAQI,IAAR,EAAcM,QAAd,EAAwBG,QAAxB,EAAkCC,QAAlC,EAA4CP,YAA5C,CAJC;AAAA,CAAf","sourcesContent":["import {\r\n  cond,\r\n  sub,\r\n  pow,\r\n  divide,\r\n  multiply,\r\n  add,\r\n  block,\r\n  set,\r\n  lessThan,\r\n  proc,\r\n  abs,\r\n} from '../base';\r\n\r\nconst VELOCITY_EPS = 5;\r\n\r\nfunction decay(clock, state, config) {\r\n  const lastTime = cond(state.time, state.time, clock);\r\n  const deltaTime = sub(clock, lastTime);\r\n\r\n  // v0 = v / 1000\r\n  // v = v0 * powf(deceleration, dt);\r\n  // v = v * 1000;\r\n\r\n  // x0 = x;\r\n  // x = x0 + v0 * deceleration * (1 - powf(deceleration, dt)) / (1 - deceleration)\r\n  const kv = pow(config.deceleration, deltaTime);\r\n  const kx = divide(\r\n    multiply(config.deceleration, sub(1, kv)),\r\n    sub(1, config.deceleration)\r\n  );\r\n  const v0 = divide(state.velocity, 1000);\r\n  const v = multiply(v0, kv, 1000);\r\n  const x = add(state.position, multiply(v0, kx));\r\n  return block([\r\n    set(state.position, x),\r\n    set(state.velocity, v),\r\n    set(state.time, clock),\r\n    cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1)),\r\n  ]);\r\n}\r\n\r\nconst procDecay = proc(\r\n  (clock, time, velocity, position, finished, deceleration) =>\r\n    decay(clock, { time, velocity, position, finished }, { deceleration })\r\n);\r\n\r\nexport default (\r\n  clock,\r\n  { time, velocity, position, finished },\r\n  { deceleration }\r\n) => procDecay(clock, time, velocity, position, finished, deceleration);\r\n"]},"metadata":{},"sourceType":"module"}