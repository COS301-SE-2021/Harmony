{"ast":null,"code":"\"use strict\";\n\nvar aStackPool = [];\nvar bStackPool = [];\n/**\r\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\r\n * Returns true if both arguments have the same keys and values.\r\n *\r\n * @see http://underscorejs.org\r\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\r\n * @license MIT\r\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  }\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0;\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    }\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","map":{"version":3,"sources":["C:/Users/perum/Documents/Harmony/frontend/HarmonyMobileApp/node_modules/react-native-reanimated/node_modules/fbjs/lib/areEqual.js"],"names":["aStackPool","bStackPool","areEqual","a","b","aStack","length","pop","bStack","result","eq","push","objToStr","Object","prototype","toString","className","call","String","isNaN","Number","source","global","multiline","ignoreCase","size","constructor","hasOwnProperty","valueOf","keys","i","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nvar aStackPool = [];\r\nvar bStackPool = [];\r\n/**\r\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\r\n * Returns true if both arguments have the same keys and values.\r\n *\r\n * @see http://underscorejs.org\r\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\r\n * @license MIT\r\n */\r\n\r\nfunction areEqual(a, b) {\r\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\r\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\r\n  var result = eq(a, b, aStack, bStack);\r\n  aStack.length = 0;\r\n  bStack.length = 0;\r\n  aStackPool.push(aStack);\r\n  bStackPool.push(bStack);\r\n  return result;\r\n}\r\n\r\nfunction eq(a, b, aStack, bStack) {\r\n  if (a === b) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    return a !== 0 || 1 / a == 1 / b;\r\n  }\r\n\r\n  if (a == null || b == null) {\r\n    // a or b can be `null` or `undefined`\r\n    return false;\r\n  }\r\n\r\n  if (typeof a != 'object' || typeof b != 'object') {\r\n    return false;\r\n  }\r\n\r\n  var objToStr = Object.prototype.toString;\r\n  var className = objToStr.call(a);\r\n\r\n  if (className != objToStr.call(b)) {\r\n    return false;\r\n  }\r\n\r\n  switch (className) {\r\n    case '[object String]':\r\n      return a == String(b);\r\n\r\n    case '[object Number]':\r\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\r\n\r\n    case '[object Date]':\r\n    case '[object Boolean]':\r\n      return +a == +b;\r\n\r\n    case '[object RegExp]':\r\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\r\n  } // Assume equality for cyclic structures.\r\n\r\n\r\n  var length = aStack.length;\r\n\r\n  while (length--) {\r\n    if (aStack[length] == a) {\r\n      return bStack[length] == b;\r\n    }\r\n  }\r\n\r\n  aStack.push(a);\r\n  bStack.push(b);\r\n  var size = 0; // Recursively compare objects and arrays.\r\n\r\n  if (className === '[object Array]') {\r\n    size = a.length;\r\n\r\n    if (size !== b.length) {\r\n      return false;\r\n    } // Deep compare the contents, ignoring non-numeric properties.\r\n\r\n\r\n    while (size--) {\r\n      if (!eq(a[size], b[size], aStack, bStack)) {\r\n        return false;\r\n      }\r\n    }\r\n  } else {\r\n    if (a.constructor !== b.constructor) {\r\n      return false;\r\n    }\r\n\r\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\r\n      return a.valueOf() == b.valueOf();\r\n    }\r\n\r\n    var keys = Object.keys(a);\r\n\r\n    if (keys.length != Object.keys(b).length) {\r\n      return false;\r\n    }\r\n\r\n    for (var i = 0; i < keys.length; i++) {\r\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  aStack.pop();\r\n  bStack.pop();\r\n  return true;\r\n}\r\n\r\nmodule.exports = areEqual;"]},"metadata":{},"sourceType":"script"}