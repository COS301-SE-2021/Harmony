{"ast":null,"code":"import useCode from \"../derived/useCode\";\nimport AnimatedNode from \"./AnimatedNode\";\n\nfunction assertNodesNotNull(code, children, exec) {\n  if (!code) {\n    var error = !children ? \"Got \\\"\" + typeof children + \"\\\" type passed to children\" : \"Got \\\"\" + typeof exec + \"\\\" type passed to exec\";\n    throw new Error(\"<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. \" + error);\n  }\n}\n\nfunction Code(_ref) {\n  var exec = _ref.exec,\n      children = _ref.children,\n      dependencies = _ref.dependencies;\n  var nodes = children || exec;\n  var code = null;\n\n  if (nodes instanceof AnimatedNode) {\n    code = function code() {\n      return nodes;\n    };\n  } else if (typeof nodes === 'function') {\n    code = nodes;\n  }\n\n  assertNodesNotNull(code, children, exec);\n  useCode(code, dependencies);\n  return null;\n}\n\nexport default Code;","map":{"version":3,"sources":["C:/Users/perum/Documents/Harmony/frontend/HarmonyMobileApp/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCode.js"],"names":["useCode","AnimatedNode","assertNodesNotNull","code","children","exec","error","Error","Code","dependencies","nodes"],"mappings":"AAAA,OAAOA,OAAP;AACA,OAAOC,YAAP;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkD;AAChD,MAAI,CAACF,IAAL,EAAW;AACT,QAAMG,KAAK,GAAG,CAACF,QAAD,cACF,OAAOA,QADL,6CAEF,OAAOC,IAFL,2BAAd;AAIA,UAAM,IAAIE,KAAJ,6HACsHD,KADtH,CAAN;AAGD;AACF;;AAED,SAASE,IAAT,OAAgD;AAAA,MAAhCH,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BD,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBK,YAAgB,QAAhBA,YAAgB;AAC9C,MAAMC,KAAK,GAAGN,QAAQ,IAAIC,IAA1B;AAEA,MAAIF,IAAI,GAAG,IAAX;;AACA,MAAIO,KAAK,YAAYT,YAArB,EAAmC;AACjCE,IAAAA,IAAI,GAAG;AAAA,aAAMO,KAAN;AAAA,KAAP;AACD,GAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AACtCP,IAAAA,IAAI,GAAGO,KAAP;AACD;;AAEDR,EAAAA,kBAAkB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,IAAjB,CAAlB;AAEAL,EAAAA,OAAO,CAACG,IAAD,EAAOM,YAAP,CAAP;AACA,SAAO,IAAP;AACD;;AAED,eAAeD,IAAf","sourcesContent":["import useCode from '../derived/useCode';\r\nimport AnimatedNode from './AnimatedNode';\r\n\r\nfunction assertNodesNotNull(code, children, exec) {\r\n  if (!code) {\r\n    const error = !children\r\n      ? `Got \"${typeof children}\" type passed to children`\r\n      : `Got \"${typeof exec}\" type passed to exec`;\r\n\r\n    throw new Error(\r\n      `<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. ${error}`\r\n    );\r\n  }\r\n}\r\n\r\nfunction Code({ exec, children, dependencies }) {\r\n  const nodes = children || exec;\r\n\r\n  let code = null;\r\n  if (nodes instanceof AnimatedNode) {\r\n    code = () => nodes;\r\n  } else if (typeof nodes === 'function') {\r\n    code = nodes;\r\n  }\r\n\r\n  assertNodesNotNull(code, children, exec);\r\n\r\n  useCode(code, dependencies);\r\n  return null;\r\n}\r\n\r\nexport default Code;\r\n"]},"metadata":{},"sourceType":"module"}