{"ast":null,"code":"var clipboardAvailable;\n\nvar Clipboard = function () {\n  function Clipboard() {}\n\n  Clipboard.isAvailable = function isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n\n    return clipboardAvailable;\n  };\n\n  Clipboard.getString = function getString() {\n    return Promise.resolve('');\n  };\n\n  Clipboard.setString = function setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      node.style.userSelect = 'auto';\n      body.appendChild(node);\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range);\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {}\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  };\n\n  return Clipboard;\n}();\n\nexport { Clipboard as default };","map":{"version":3,"sources":["C:/Users/perum/Documents/Harmony/frontend/HarmonyMobileApp/node_modules/react-native-web/dist/exports/Clipboard/index.js"],"names":["clipboardAvailable","Clipboard","isAvailable","undefined","document","queryCommandSupported","getString","Promise","resolve","setString","text","success","body","node","createElement","textContent","style","opacity","position","whiteSpace","userSelect","appendChild","selection","window","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","e","removeChild","default"],"mappings":"AASA,IAAIA,kBAAJ;;AAEA,IAAIC,SAAS,GAAgB,YAAY;AACvC,WAASA,SAAT,GAAqB,CAAE;;AAEvBA,EAAAA,SAAS,CAACC,WAAV,GAAwB,SAASA,WAAT,GAAuB;AAC7C,QAAIF,kBAAkB,KAAKG,SAA3B,EAAsC;AACpCH,MAAAA,kBAAkB,GAAG,OAAOI,QAAQ,CAACC,qBAAhB,KAA0C,UAA1C,IAAwDD,QAAQ,CAACC,qBAAT,CAA+B,MAA/B,CAA7E;AACD;;AAED,WAAOL,kBAAP;AACD,GAND;;AAQAC,EAAAA,SAAS,CAACK,SAAV,GAAsB,SAASA,SAAT,GAAqB;AACzC,WAAOC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AACD,GAFD;;AAIAP,EAAAA,SAAS,CAACQ,SAAV,GAAsB,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC7C,QAAIC,OAAO,GAAG,KAAd;AACA,QAAIC,IAAI,GAAGR,QAAQ,CAACQ,IAApB;;AAEA,QAAIA,IAAJ,EAAU;AAER,UAAIC,IAAI,GAAGT,QAAQ,CAACU,aAAT,CAAuB,MAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,WAAL,GAAmBL,IAAnB;AACAG,MAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,GAArB;AACAJ,MAAAA,IAAI,CAACG,KAAL,CAAWE,QAAX,GAAsB,UAAtB;AACAL,MAAAA,IAAI,CAACG,KAAL,CAAWG,UAAX,GAAwB,UAAxB;AACAN,MAAAA,IAAI,CAACG,KAAL,CAAWI,UAAX,GAAwB,MAAxB;AACAR,MAAAA,IAAI,CAACS,WAAL,CAAiBR,IAAjB;AAEA,UAAIS,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAhB;AACAF,MAAAA,SAAS,CAACG,eAAV;AACA,UAAIC,KAAK,GAAGtB,QAAQ,CAACuB,WAAT,EAAZ;AACAD,MAAAA,KAAK,CAACE,kBAAN,CAAyBf,IAAzB;AACAS,MAAAA,SAAS,CAACO,QAAV,CAAmBH,KAAnB;;AAEA,UAAI;AACFtB,QAAAA,QAAQ,CAAC0B,WAAT,CAAqB,MAArB;AACAnB,QAAAA,OAAO,GAAG,IAAV;AACD,OAHD,CAGE,OAAOoB,CAAP,EAAU,CAAE;;AAGdT,MAAAA,SAAS,CAACG,eAAV;AACAb,MAAAA,IAAI,CAACoB,WAAL,CAAiBnB,IAAjB;AACD;;AAED,WAAOF,OAAP;AACD,GA/BD;;AAiCA,SAAOV,SAAP;AACD,CAjD4B,EAA7B;;AAmDA,SAASA,SAAS,IAAIgC,OAAtB","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nvar clipboardAvailable;\r\n\r\nvar Clipboard = /*#__PURE__*/function () {\r\n  function Clipboard() {}\r\n\r\n  Clipboard.isAvailable = function isAvailable() {\r\n    if (clipboardAvailable === undefined) {\r\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\r\n    }\r\n\r\n    return clipboardAvailable;\r\n  };\r\n\r\n  Clipboard.getString = function getString() {\r\n    return Promise.resolve('');\r\n  };\r\n\r\n  Clipboard.setString = function setString(text) {\r\n    var success = false;\r\n    var body = document.body;\r\n\r\n    if (body) {\r\n      // add the text to a hidden node\r\n      var node = document.createElement('span');\r\n      node.textContent = text;\r\n      node.style.opacity = '0';\r\n      node.style.position = 'absolute';\r\n      node.style.whiteSpace = 'pre-wrap';\r\n      node.style.userSelect = 'auto';\r\n      body.appendChild(node); // select the text\r\n\r\n      var selection = window.getSelection();\r\n      selection.removeAllRanges();\r\n      var range = document.createRange();\r\n      range.selectNodeContents(node);\r\n      selection.addRange(range); // attempt to copy\r\n\r\n      try {\r\n        document.execCommand('copy');\r\n        success = true;\r\n      } catch (e) {} // remove selection and node\r\n\r\n\r\n      selection.removeAllRanges();\r\n      body.removeChild(node);\r\n    }\r\n\r\n    return success;\r\n  };\r\n\r\n  return Clipboard;\r\n}();\r\n\r\nexport { Clipboard as default };"]},"metadata":{},"sourceType":"module"}