{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport TouchableItem from \"./TouchableItem\";\nexport var getDefaultHeaderHeight = function getDefaultHeaderHeight(layout, statusBarHeight) {\n  var isLandscape = layout.width > layout.height;\n  var headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\nexport default function HeaderSegment(_ref) {\n  var scene = _ref.scene,\n      layout = _ref.layout;\n  var insets = useSafeAreaInsets();\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _scene$descriptor$opt = scene.descriptor.options,\n      title = _scene$descriptor$opt.title,\n      headerTitle = _scene$descriptor$opt.headerTitle,\n      _scene$descriptor$opt2 = _scene$descriptor$opt.headerTitleAlign,\n      headerTitleAlign = _scene$descriptor$opt2 === void 0 ? Platform.select({\n    ios: 'center',\n    default: 'left'\n  }) : _scene$descriptor$opt2,\n      headerLeft = _scene$descriptor$opt.headerLeft,\n      headerLeftAccessibilityLabel = _scene$descriptor$opt.headerLeftAccessibilityLabel,\n      headerRight = _scene$descriptor$opt.headerRight,\n      headerTitleAllowFontScaling = _scene$descriptor$opt.headerTitleAllowFontScaling,\n      headerTitleStyle = _scene$descriptor$opt.headerTitleStyle,\n      headerTintColor = _scene$descriptor$opt.headerTintColor,\n      headerPressColorAndroid = _scene$descriptor$opt.headerPressColorAndroid,\n      headerStyle = _scene$descriptor$opt.headerStyle,\n      _scene$descriptor$opt3 = _scene$descriptor$opt.headerStatusBarHeight,\n      headerStatusBarHeight = _scene$descriptor$opt3 === void 0 ? insets.top : _scene$descriptor$opt3;\n  var currentTitle = typeof headerTitle !== 'function' && headerTitle !== undefined ? headerTitle : title !== undefined ? title : scene.route.name;\n  var defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n  var leftButton = headerLeft ? headerLeft({\n    tintColor: headerTintColor\n  }) : React.createElement(TouchableItem, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: headerLeftAccessibilityLabel,\n    accessibilityTraits: \"button\",\n    delayPressIn: 0,\n    onPress: function onPress() {\n      return scene.descriptor.navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    pressColor: headerPressColorAndroid,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(Image, {\n    style: [styles.icon, headerTintColor ? {\n      tintColor: headerTintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n  var rightButton = headerRight ? headerRight({\n    tintColor: headerTintColor\n  }) : null;\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [{\n      height: defaultHeight,\n      backgroundColor: colors.card,\n      borderBottomColor: colors.border,\n      shadowColor: colors.border\n    }, styles.container, headerStyle]\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: {\n      height: headerStatusBarHeight\n    }\n  }), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.content\n  }, leftButton ? React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.left, {\n      left: insets.left\n    }]\n  }, leftButton) : null, React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [headerTitleAlign === 'left' ? {\n      position: 'absolute',\n      left: (leftButton ? 72 : 16) + insets.left,\n      right: (rightButton ? 72 : 16) + insets.right\n    } : {\n      marginHorizontal: (leftButton ? 32 : 16) + Math.max(insets.left, insets.right)\n    }]\n  }, typeof headerTitle === 'function' ? headerTitle({\n    children: currentTitle,\n    allowFontScaling: headerTitleAllowFontScaling,\n    tintColor: headerTintColor,\n    style: headerTitleStyle\n  }) : React.createElement(Text, {\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1,\n    allowFontScaling: headerTitleAllowFontScaling,\n    style: [styles.title, {\n      color: headerTintColor !== null && headerTintColor !== void 0 ? headerTintColor : colors.text\n    }, styles.title, headerTitleStyle]\n  }, currentTitle)), rightButton ? React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.right, {\n      right: insets.right\n    }]\n  }, rightButton) : null));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, Platform.select({\n    android: {\n      elevation: 4\n    },\n    ios: {\n      shadowOpacity: 0.85,\n      shadowRadius: 0,\n      shadowOffset: {\n        width: 0,\n        height: StyleSheet.hairlineWidth\n      }\n    },\n    default: {\n      borderBottomWidth: StyleSheet.hairlineWidth\n    }\n  })), {}, {\n    zIndex: 1\n  }),\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  }\n});","map":{"version":3,"sources":["Header.tsx"],"names":["getDefaultHeaderHeight","isLandscape","layout","Platform","headerHeight","insets","useSafeAreaInsets","colors","useTheme","headerTitleAlign","ios","default","headerStatusBarHeight","top","scene","currentTitle","headerTitle","title","defaultHeight","leftButton","headerLeft","tintColor","headerTintColor","DrawerActions","styles","right","bottom","left","require","rightButton","headerRight","height","backgroundColor","borderBottomColor","shadowColor","border","content","position","marginHorizontal","Math","children","allowFontScaling","style","headerTitleStyle","color","text","container","android","elevation","shadowOpacity","shadowRadius","shadowOffset","width","StyleSheet","hairlineWidth","borderBottomWidth","zIndex","flex","flexDirection","alignItems","justifyContent","fontSize","fontWeight","fontFamily","icon","margin","resizeMode","touchable"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, Image, StyleSheet, Platform } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport TouchableItem from './TouchableItem';\nimport type { Layout, DrawerHeaderProps } from '../types';\n\nexport const getDefaultHeaderHeight = (\n  layout: Layout,\n  statusBarHeight: number\n): number => {\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexport default function HeaderSegment({ scene, layout }: DrawerHeaderProps) {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n\n  const {\n    title,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftAccessibilityLabel,\n    headerRight,\n    headerTitleAllowFontScaling,\n    headerTitleStyle,\n    headerTintColor,\n    headerPressColorAndroid,\n    headerStyle,\n    headerStatusBarHeight = insets.top,\n  } = scene.descriptor.options;\n\n  const currentTitle =\n    typeof headerTitle !== 'function' && headerTitle !== undefined\n      ? headerTitle\n      : title !== undefined\n      ? title\n      : scene.route.name;\n\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n  const leftButton = headerLeft ? (\n    headerLeft({ tintColor: headerTintColor })\n  ) : (\n    <TouchableItem\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={headerLeftAccessibilityLabel}\n      accessibilityTraits=\"button\"\n      delayPressIn={0}\n      onPress={() =>\n        scene.descriptor.navigation.dispatch(DrawerActions.toggleDrawer())\n      }\n      style={styles.touchable}\n      pressColor={headerPressColorAndroid}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <Image\n        style={[\n          styles.icon,\n          headerTintColor ? { tintColor: headerTintColor } : null,\n        ]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </TouchableItem>\n  );\n  const rightButton = headerRight\n    ? headerRight({ tintColor: headerTintColor })\n    : null;\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[\n        {\n          height: defaultHeight,\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        styles.container,\n        headerStyle,\n      ]}\n    >\n      <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n      <View pointerEvents=\"box-none\" style={styles.content}>\n        {leftButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.left, { left: insets.left }]}\n          >\n            {leftButton}\n          </View>\n        ) : null}\n        <View\n          pointerEvents=\"box-none\"\n          style={[\n            headerTitleAlign === 'left'\n              ? {\n                  position: 'absolute',\n                  left: (leftButton ? 72 : 16) + insets.left,\n                  right: (rightButton ? 72 : 16) + insets.right,\n                }\n              : {\n                  marginHorizontal:\n                    (leftButton ? 32 : 16) +\n                    Math.max(insets.left, insets.right),\n                },\n          ]}\n        >\n          {typeof headerTitle === 'function' ? (\n            headerTitle({\n              children: currentTitle,\n              allowFontScaling: headerTitleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: headerTitleStyle,\n            })\n          ) : (\n            <Text\n              accessibilityRole=\"header\"\n              aria-level=\"1\"\n              numberOfLines={1}\n              allowFontScaling={headerTitleAllowFontScaling}\n              style={[\n                styles.title,\n                { color: headerTintColor ?? colors.text },\n                styles.title,\n                headerTitleStyle,\n              ]}\n            >\n              {currentTitle}\n            </Text>\n          )}\n        </View>\n        {rightButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.right, { right: insets.right }]}\n          >\n            {rightButton}\n          </View>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n    zIndex: 1,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}