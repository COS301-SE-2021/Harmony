{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedEvent from \"./AnimatedEvent\";\nimport { createOrReuseStyleNode } from \"./AnimatedStyle\";\nimport invariant from 'fbjs/lib/invariant';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport { val } from \"../val\";\n\nfunction sanitizeProps(inputProps) {\n  var props;\n\n  for (var key in inputProps) {\n    var value = inputProps[key];\n\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\n      if (props === undefined) {\n        props = {};\n      }\n\n      props[key] = value.__nodeID;\n    }\n  }\n\n  return props;\n}\n\nexport function createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    var style = createOrReuseStyleNode(props.style, oldNode && oldNode._props.style);\n\n    if (style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: style\n      });\n    }\n  }\n\n  var config = sanitizeProps(props);\n\n  if (config === undefined) {\n    return undefined;\n  }\n\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n\n  return new AnimatedProps(props, config, callback);\n}\n\nvar AnimatedProps = function (_AnimatedNode) {\n  _inherits(AnimatedProps, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedProps);\n\n  function AnimatedProps(props, config, callback) {\n    var _this;\n\n    _classCallCheck(this, AnimatedProps);\n\n    _this = _super.call(this, {\n      type: 'props',\n      props: config\n    }, Object.values(props).filter(function (n) {\n      return !(n instanceof AnimatedEvent);\n    }));\n    _this._config = config;\n    _this._props = props;\n    _this._callback = callback;\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  _createClass(AnimatedProps, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedProps, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var props = {};\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof AnimatedNode) {\n          props[key] = value.__getValue();\n        }\n      }\n\n      return props;\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n      this._disconnectAnimatedView(nativeViewTag);\n\n      _get(_getPrototypeOf(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n\n      if (!this._animatedView) {\n        return;\n      }\n\n      val(this);\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n\n      this._animatedView = animatedView;\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n      this._connectAnimatedView(nativeViewTag);\n    }\n  }]);\n\n  return AnimatedProps;\n}(AnimatedNode);","map":{"version":3,"sources":["C:/Users/perum/Documents/Harmony/frontend/HarmonyMobileApp/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedProps.js"],"names":["AnimatedNode","AnimatedEvent","createOrReuseStyleNode","invariant","deepEqual","val","sanitizeProps","inputProps","props","key","value","undefined","__nodeID","createOrReusePropsNode","callback","oldNode","style","_props","config","_config","AnimatedProps","type","Object","values","filter","n","_callback","__attach","__getValue","nativeViewTag","findNodeHandle","_animatedView","_disconnectAnimatedView","animatedView","_connectAnimatedView"],"mappings":"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","sourcesContent":["import { findNodeHandle } from 'react-native';\r\n\r\nimport AnimatedNode from './AnimatedNode';\r\nimport AnimatedEvent from './AnimatedEvent';\r\nimport { createOrReuseStyleNode } from './AnimatedStyle';\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport deepEqual from 'fbjs/lib/areEqual';\r\nimport { val } from '../val';\r\n\r\nfunction sanitizeProps(inputProps) {\r\n  let props;\r\n  for (const key in inputProps) {\r\n    const value = inputProps[key];\r\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\r\n      if (props === undefined) {\r\n        props = {};\r\n      }\r\n      props[key] = value.__nodeID;\r\n    }\r\n  }\r\n  return props;\r\n}\r\n\r\nexport function createOrReusePropsNode(props, callback, oldNode) {\r\n  if (props.style) {\r\n    const style = createOrReuseStyleNode(\r\n      props.style,\r\n      oldNode && oldNode._props.style\r\n    );\r\n    if (style) {\r\n      props = {\r\n        ...props,\r\n        style,\r\n      };\r\n    }\r\n  }\r\n  const config = sanitizeProps(props);\r\n  if (config === undefined) {\r\n    return undefined;\r\n  }\r\n  if (oldNode && deepEqual(config, oldNode._config)) {\r\n    return oldNode;\r\n  }\r\n  return new AnimatedProps(props, config, callback);\r\n}\r\n\r\nclass AnimatedProps extends AnimatedNode {\r\n  constructor(props, config, callback) {\r\n    super(\r\n      { type: 'props', props: config },\r\n      Object.values(props).filter((n) => !(n instanceof AnimatedEvent))\r\n    );\r\n    this._config = config;\r\n    this._props = props;\r\n    this._callback = callback;\r\n    this.__attach();\r\n  }\r\n\r\n  toString() {\r\n    return `AnimatedProps, id: ${this.__nodeID}`;\r\n  }\r\n\r\n  __onEvaluate() {\r\n    const props = {};\r\n    for (const key in this._props) {\r\n      const value = this._props[key];\r\n      if (value instanceof AnimatedNode) {\r\n        props[key] = value.__getValue();\r\n      }\r\n    }\r\n    return props;\r\n  }\r\n\r\n  __detach() {\r\n    const nativeViewTag = findNodeHandle(this._animatedView);\r\n    invariant(\r\n      nativeViewTag != null,\r\n      'Unable to locate attached view in the native tree'\r\n    );\r\n    this._disconnectAnimatedView(nativeViewTag);\r\n    super.__detach();\r\n  }\r\n\r\n  update() {\r\n    this._callback();\r\n\r\n    if (!this._animatedView) {\r\n      return;\r\n    }\r\n\r\n    val(this);\r\n  }\r\n\r\n  setNativeView(animatedView) {\r\n    if (this._animatedView === animatedView) {\r\n      return;\r\n    }\r\n    this._animatedView = animatedView;\r\n\r\n    const nativeViewTag = findNodeHandle(this._animatedView);\r\n    invariant(\r\n      nativeViewTag != null,\r\n      'Unable to locate attached view in the native tree'\r\n    );\r\n    this._connectAnimatedView(nativeViewTag);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}