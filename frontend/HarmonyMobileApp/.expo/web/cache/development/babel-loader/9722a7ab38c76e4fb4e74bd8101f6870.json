{"ast":null,"code":"function setAndForwardRef(_ref) {\n  var getForwardedRef = _ref.getForwardedRef,\n      setLocalRef = _ref.setLocalRef;\n  return function forwardRef(ref) {\n    var forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nexport default setAndForwardRef;","map":{"version":3,"sources":["C:/Users/perum/Documents/Harmony/frontend/HarmonyMobileApp/node_modules/react-native-reanimated/lib/setAndForwardRef.js"],"names":["setAndForwardRef","getForwardedRef","setLocalRef","forwardRef","ref","forwardedRef","current"],"mappings":"AAmCA,SAASA,gBAAT,OAA4D;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC1D,SAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,QAAMC,YAAY,GAAGJ,eAAe,EAApC;AAEAC,IAAAA,WAAW,CAACE,GAAD,CAAX;;AAGA,QAAI,OAAOC,YAAP,KAAwB,UAA5B,EAAwC;AAEtCA,MAAAA,YAAY,CAACD,GAAD,CAAZ;AACD,KAHD,MAGO,IAAI,OAAOC,YAAP,KAAwB,QAAxB,IAAoCA,YAAY,IAAI,IAAxD,EAA8D;AAEnEA,MAAAA,YAAY,CAACC,OAAb,GAAuBF,GAAvB;AACD;AACF,GAbD;AAcD;;AAED,eAAeJ,gBAAf","sourcesContent":["/**\r\n * imported from react-native\r\n */\r\n\r\n/**\r\n * This is a helper function for when a component needs to be able to forward a ref\r\n * to a child component, but still needs to have access to that component as part of\r\n * its implementation.\r\n *\r\n * Its main use case is in wrappers for native components.\r\n *\r\n * Usage:\r\n *\r\n *   class MyView extends React.Component {\r\n *     _nativeRef = null;\r\n *\r\n *     _setNativeRef = setAndForwardRef({\r\n *       getForwardedRef: () => this.props.forwardedRef,\r\n *       setLocalRef: ref => {\r\n *         this._nativeRef = ref;\r\n *       },\r\n *     });\r\n *\r\n *     render() {\r\n *       return <View ref={this._setNativeRef} />;\r\n *     }\r\n *   }\r\n *\r\n *   const MyViewWithRef = React.forwardRef((props, ref) => (\r\n *     <MyView {...props} forwardedRef={ref} />\r\n *   ));\r\n *\r\n *   module.exports = MyViewWithRef;\r\n */\r\n\r\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }) {\r\n  return function forwardRef(ref) {\r\n    const forwardedRef = getForwardedRef();\r\n\r\n    setLocalRef(ref);\r\n\r\n    // Forward to user ref prop (if one has been specified)\r\n    if (typeof forwardedRef === 'function') {\r\n      // Handle function-based refs. String-based refs are handled as functions.\r\n      forwardedRef(ref);\r\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\r\n      // Handle createRef-based refs\r\n      forwardedRef.current = ref;\r\n    }\r\n  };\r\n}\r\n\r\nexport default setAndForwardRef;\r\n"]},"metadata":{},"sourceType":"module"}