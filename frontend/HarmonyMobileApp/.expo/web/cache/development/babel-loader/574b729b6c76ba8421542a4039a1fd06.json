{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from \"../base\";\nimport AnimatedNode from \"../core/AnimatedNode\";\nvar procColor = proc(function (r, g, b, a) {\n  var color = add(multiply(a, 1 << 24), multiply(round(r), 1 << 16), multiply(round(g), 1 << 8), round(b));\n\n  if (Platform.OS === 'android') {\n    return cond(lessThan(color, 1 << 31 >>> 0), color, sub(color, Math.pow(2, 32)));\n  }\n\n  return color;\n});\nexport default function color(r, g, b) {\n  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  if (Platform.OS === 'web') {\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}","map":{"version":3,"sources":["C:/Users/perum/Documents/Harmony/frontend/HarmonyMobileApp/node_modules/react-native-reanimated/lib/reanimated1/derived/color.js"],"names":["add","cond","concat","lessThan","multiply","round","sub","proc","AnimatedNode","procColor","r","g","b","a","color","Platform","OS","Math","pow"],"mappings":";AAEA,SACEA,GADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,KANF,EAOEC,GAPF,EAQEC,IARF;AAUA,OAAOC,YAAP;AAEA,IAAMC,SAAS,GAAGF,IAAI,CAAC,UAAUG,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3C,MAAMC,KAAK,GAAGd,GAAG,CACfI,QAAQ,CAACS,CAAD,EAAI,KAAK,EAAT,CADO,EAEfT,QAAQ,CAACC,KAAK,CAACK,CAAD,CAAN,EAAW,KAAK,EAAhB,CAFO,EAGfN,QAAQ,CAACC,KAAK,CAACM,CAAD,CAAN,EAAW,KAAK,CAAhB,CAHO,EAIfN,KAAK,CAACO,CAAD,CAJU,CAAjB;;AAOA,MAAIG,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAE7B,WAAOf,IAAI,CACTE,QAAQ,CAACW,KAAD,EAAS,KAAK,EAAN,KAAc,CAAtB,CADC,EAETA,KAFS,EAGTR,GAAG,CAACQ,KAAD,EAAQG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAR,CAHM,CAAX;AAKD;;AACD,SAAOJ,KAAP;AACD,CAjBqB,CAAtB;AAmBA,eAAe,SAASA,KAAT,CAAeJ,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAA+B;AAAA,MAAPC,CAAO,uEAAH,CAAG;;AAC5C,MAAIE,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AAEzB,WAAOd,MAAM,CAAC,OAAD,EAAUQ,CAAV,EAAa,GAAb,EAAkBC,CAAlB,EAAqB,GAArB,EAA0BC,CAA1B,EAA6B,GAA7B,EAAkCC,CAAlC,EAAqC,GAArC,CAAb;AACD;;AAED,MAAIA,CAAC,YAAYL,YAAjB,EAA+B;AAC7BK,IAAAA,CAAC,GAAGR,KAAK,CAACD,QAAQ,CAACS,CAAD,EAAI,GAAJ,CAAT,CAAT;AACD,GAFD,MAEO;AACLA,IAAAA,CAAC,GAAGI,IAAI,CAACZ,KAAL,CAAWQ,CAAC,GAAG,GAAf,CAAJ;AACD;;AAED,SAAOJ,SAAS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAhB;AACD","sourcesContent":["import { Platform } from 'react-native';\r\n\r\nimport {\r\n  add,\r\n  cond,\r\n  concat,\r\n  lessThan,\r\n  multiply,\r\n  round,\r\n  sub,\r\n  proc,\r\n} from '../base';\r\nimport AnimatedNode from '../core/AnimatedNode';\r\n\r\nconst procColor = proc(function (r, g, b, a) {\r\n  const color = add(\r\n    multiply(a, 1 << 24),\r\n    multiply(round(r), 1 << 16),\r\n    multiply(round(g), 1 << 8),\r\n    round(b)\r\n  );\r\n\r\n  if (Platform.OS === 'android') {\r\n    // on Android color is represented as signed 32 bit int\r\n    return cond(\r\n      lessThan(color, (1 << 31) >>> 0),\r\n      color,\r\n      sub(color, Math.pow(2, 32))\r\n    );\r\n  }\r\n  return color;\r\n});\r\n\r\nexport default function color(r, g, b, a = 1) {\r\n  if (Platform.OS === 'web') {\r\n    // doesn't support bit shifting\r\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\r\n  }\r\n\r\n  if (a instanceof AnimatedNode) {\r\n    a = round(multiply(a, 255));\r\n  } else {\r\n    a = Math.round(a * 255);\r\n  }\r\n\r\n  return procColor(r, g, b, a);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}